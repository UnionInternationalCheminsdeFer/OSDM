openapi: 3.0.3
servers:
  - description: fsm dummy server
    url: 'https://virtserver.swaggerhub.com/Real-IT/FSM_MVP/1.0.0'
info:
  title: UIC 90918-10 - OSDM
  version: 0.0.1
  description: |
    Specifications for the OSDM API standard. The OSDM specification supports two
    modes of operation: Distributor Mode and Allocator Mode. The API works the same in 
    both mode, except that in allocator mode the API also returns fare information.
    
    The OSDM specification combines the nTM as well as the FSM initiative into one aligned
    API interface.
  contact:
    name: Nicolas Selleslagh
    url: https://confluence.sbb.ch/display/FSM20
    email: Nicolas.Sellleslagh@benerail.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Journey
    description: >-
      resources to access timetable-only information
  - name: Offers
    description: >-
      resources to get bookable offers
  - name: Offer Parts
    description: >-
      resources to manipulate parts of offer consisting of, e.g., admissions, reservations, integrated 
      reservations or ancillaries  
  - name: Bookings
    description: >-
      resources to manipulate bookings
  - name: Passengers
    description: >-
      resources to manipulate passengers informations at every stage of the flow
  - name: Products
    description: >-
      resources to retrieve products information on one or more products
  - name: Tickets  
    description: >-
      resources to retrieve tickets
paths:
  /locations:
    get:
      tags:
        - Journey
      summary: >-
        allows looking up matching station for a given match value based on
        MatchType
      operationId: getLocations
      description: >-
        allows to build a lookup functionality to get station codes based on
        whatever is known of the station
      parameters:
        - name: Accept-Language
          in: header
          description: >-
            Describes the set of natural languages that are preferred as a
            response to the request (see RFC2616-sec14.4). The response header
            will set "Content-Language" concerning the content (supported
            languages and fallback-language, depends on underlyling system).

            Supporting locations in English (en) is a most.
          schema:
            type: string
          required: false
        - name: matchValue
          in: query
          schema:
            type: string
          required: true
        - name: matchType
          in: query
          description: >-
            Defines the search token type in matchValue (TEXT for names;
            ANY_CODE fallbacks to the code supported by the underlyling system
            (like UIC, EVA or RESARAIL); UIC/EVA/RESARAIL forces stations
            defined by the appropriate code-system explicitely (national
            aspect); COORDS given as "lat,lon").
          required: true
          schema:
            type: string
            default: NAME
            enum:
              - NAME
              - ANY_CODE
              - CODELIST
              - COORDS
        - name: matchCodeList
          in: query
          description: 'in case matchvalue is codelist, the codelist to search into'
          schema:
            type: string
          required: false
        - name: countryCode
          in: query
          description: >-
            Search locations for a specific country (ISO 3166, 2-digits). Meant
            for autocomplete functionalty. A separate endpoint or channel would
            be provided for mass downloads
          required: false
          schema:
            type: string
            example: CH
        - name: limit
          in: query
          description: 'The number of locations to be returned ([1..50]).'
          required: false
          schema:
            type: number
            format: int32
            default: 10
      responses:
        '200':
          description: the set of stations matching the provided input
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      $ref: '#/components/schemas/LocationRef'
        '400':
          description: bad input parameter
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
  '/locations/{id}':
    get:
      tags:
        - Journey
      summary: retrieves a location element
      operationId: getLocationsId
      description: allows to retrieve a complete description
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the trip to get.
      responses:
        '200':
          description: the set of locations matching the provided input
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=43200'
                description: indicates if and how long the resource can be cached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: bad input parameter
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
  '/trips/{id}':
    get:
      tags:
        - Journey
      summary: retrieves a trip element
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the trip to get.
        - in: query
          name: stopBehaviour
          description: >-
            Influences what stops are to be returned in response
            (ORIGIN_DESTINATION_ONLY returns no intermediate stops;
            REAL_BOARDING_ALIGHTING returns all stops except virtual stops).
          schema:
            type: string
            default: ORIGIN_DESTINATION_ONLY
            enum:
              - ORIGIN_DESTINATION_ONLY
              - REAL_BOARDING_ALIGHTING
        - in: query
          name: includeBehaviour
          description: >-
            Influences whether referenced resources are returned in full or as references only
          schema:
            type: array
            items:
              type: string
              enum:
                - LOCATIONS
      operationId: getTripsId
      description: >-
        retrieves a trip element representing a train travel made of one or more
        segments
      responses:
        '200':
          description: the requested trip
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripDef'
        '400':
          description: bad input parameters
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
  '/trips-collection/{id}':
    get:
      tags:
        - Journey
      summary: >-
        The trips-collection service returns a collection of different trips for a specified
        origin and destination (and via). The unique codes of the origin and
        destination can be resolved using the locations service.
      operationId: getTripsCollection
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the trip to get.
        - name: Accept-Language
          in: header
          description: >-
            Describes the set of natural languages that are preferred as a
            response to the request (see RFC2616-sec14.4). The response header
            will set "Content-Language" concerning the content (supported
            languages and fallback-language, depends on underlyling system).
          schema:
            type: string
          required: false
        - name: scrollContext
          in: query
          description: >-
            Based on a previous search-response, earlier or later connections
            for the same   trip can be retrieved by scrolling back and forth (by
            a pointer-context). You must use the same request parameters as in
            the original trips-request and the given values in the response for
            either "scrollBackContext" or "scrollForwardContext" for optional
            scrolling.
          schema:
            type: string
          required: false
        - in: query
          name: includeBehaviour
          description: >-
            Influences whether referenced resources are returned in full or as references only
          schema:
            type: array
            items:
              type: string
              enum:
                - TRIPS
                - TRIPS.LOCATIONS
      responses:
        '200':
          description: Trip(s) found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripsCollection'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  /trips-collection:
    post:
      tags:
        - Journey
      summary: >-
        The tripsCollection service returns different trips for a specified
        origin and destination (and via). The unique codes of the origin and
        destination can be resolved using the locations service.
      operationId: postTrips
      parameters:
        - name: Accept-Language
          in: header
          description: >-
            Describes the set of natural languages that are preferred as a
            response to the request (see RFC2616-sec14.4). The response header
            will set "Content-Language" concerning the content (supported
            languages and fallback-language, depends on underlyling system).
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripSearchCriteria'
      responses:
        '200':
          description: Trip(s) found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripsCollection'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'

        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  /trip-offers-collection/{id}:
    get:
      tags:
        - Offers
      summary: >-
        The tripOffersCollection service returns different offes and trips for a
        specified origin and destination (and via). The unique codes of the
        origin and destination can be resolved using the locations service.
      operationId: getTripOffersCollection
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the trip to get.
        - name: Accept-Language
          in: header
          description: >-
            Describes the set of natural languages that are preferred as a
            response to the request (see RFC2616-sec14.4). The response header
            will set "Content-Language" concerning the content (supported
            languages and fallback-language, depends on underlyling system).
          schema:
            type: string
          required: false
        - name: scrollContext
          in: query
          description: >-
            Based on a previous search-response, earlier or later connections
            for the same   trip can be retrieved by scrolling back and forth (by
            a pointer-context). You must use the same request parameters as in
            the original trips-request and the given values in the response for
            either "ScrollBack-Context" or "ScrollForward-Context" for optional
            scrolling.
          schema:
            type: string
          required: false
        - in: query
          name: includeBehaviour
          description: >-
            Influences whether referenced resources are returned in full or as references only
          schema:
            type: array
            items:
              type: string
              enum:
                - TRIPOFFERS
                - TRIPOFFERS.TRIPS
                - TRIPOFFERS.TRIPS.LOCATIONS
                - TRIPOFFERS.OFFERS
                - TRIPOFFERS.OFFERS.OFFERPARTS
                - TRIPOFFERS.PASSENGERS
      responses:
        '200':
          description: Trip(s) found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripOffersCollection'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'          
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  /trip-offers-collection:
    post:
      tags:
        - Offers
      summary: >-
        The tripsCollection service returns different trips for a specified
        origin and destination (and via). The unique codes of the origin and
        destination can be resolved using the locations service.
      operationId: getOffersUsingGET
      parameters:
        - name: Accept-Language
          in: header
          description: >-
            Describes the set of natural languages that are preferred as a
            response to the request (see RFC2616-sec14.4). The response header
            will set "Content-Language" concerning the content (supported
            languages and fallback-language, depends on underlyling system).
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripOfferRequest'
      responses:
        '200':
          description: Trip(s) found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripOffersCollection'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error        
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  /trip-offers/{id}:
    get:
      tags:
        - Offers
      summary: >-
        The trip-offers service returns different offers and trips for a specified
        origin and destination (and via). The unique codes of the origin and
        destination can be resolved using the locations service.
      operationId: getTripOffer
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the trip to get.
      responses:
        '200':
          description: TripOffer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripOffer'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'         
        '501':
          description: Not implemented
  '/offers/{id}':
    get:
      tags:
        - Offers
      summary: >-
        The tripOffer service returns different offes and trips for a specified
        origin and destination (and via). The unique codes of the origin and
        destination can be resolved using the locations service.
      operationId: getOffer
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the trip to get.
      responses:
        '200':
          description: TripOffer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/passengers/{id}':
    get:
      tags:
        - Passengers
      summary: >-
        The get passenger service returns the information on the passenger with
        the id provided
      operationId: getPassenger
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the passenger to get.
      responses:
        '200':
          description: Passenger found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
    patch:
      tags:
        - Passengers
      summary: The patch passenger service allows updating a passenger Information
      operationId: patchPassenger
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the passenger to get.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Passenger'
      responses:
        '200':
          description: Passenger found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/products/{id}':
    get:
      tags:
        - Products
      summary: >-
        The get product service returns the information on products with the
        id provided
      operationId: getProduct
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the product to get.
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/admissions/{id}':
    get:
      tags:
        - Offer Parts
      summary: >-
        The get admission service returns the information on the
        admission with the id provided
      operationId: getadmission
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the admission to get.
      responses:
        '200':
          description: admission found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admission'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/reservations/{id}':
    get:
      tags:
        - Offer Parts
      summary: >-
        The get reservation service returns the information on the reservation
        with the id provided
      operationId: getReservation
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the reservation to get.
      responses:
        '200':
          description: reservation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/integrated-reservations/{id}':
    get:
      tags:
        - Offer Parts
      summary: >-
        The get integrated-reservation service returns the information on the
        IntegratedReservation with the id provided
      operationId: getIntegratedReservation
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the IntegratedReservation to get.
      responses:
        '200':
          description: IntegratedReservation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedReservation'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/ancillaries/{id}':
    get:
      tags:
        - Offer Parts
      summary: >-
        The get ancillary service returns the information on the ancillary with
        the id provided
      operationId: getAncillary
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the product to get.
      responses:
        '200':
          description: ancillary found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ancillary'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  /bookings:
    post:
      tags:
        - Bookings
      summary: >-
        The post booking command allows to create a booking based on a
        previously requested offer
      operationId: postBooking
      parameters:
        - name: Accept-Language
          in: header
          description: >-
            Describes the set of natural languages that are preferred as a
            response to the request (see RFC2616-sec14.4). The response header
            will set "Content-Language" concerning the content (supported
            languages and fallback-language, depends on underlyling system).
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '200':
          description: Booking created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/bookings/{id}':
    get:
      tags:
        - Bookings
      summary: >-
        The get booking service returns the information on the booking with the
        id provided
      operationId: getBooking
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the product to get.
      responses:
        '200':
          description: booking found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
    delete:
      tags:
        - Bookings
      summary: >-
        The delete booking service removes the booking with the id provided. It
        is only possible before the booking is confirmed.
      operationId: deleteBooking
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the booking to delete.
      responses:
        '200':
          description: booking successfully cancelled
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented
  '/tickets/{id}':
    get:
      tags:
        - Tickets
      summary: >-
        The get ticket service returns the information on the ticket with the id
        provided.
      operationId: getTicket
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
          required: true
          description: ID of the product to get.
      responses:
        '200':
          description: ticket found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          headers:
            Content-Language:
              schema:
                type: string
                description: >-
                  The language of translatable strings in the response (see
                  RFC2616-sec14.12).
        '400':
          description: Bad request
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          content:
            "application/problem+json":
              schema:
                $ref: '#/components/schemas/Problem'
        '501':
          description: Not implemented

## Components

components:
  schemas:
    Link:
      type: object
      required:
        - contentTypes
        - href
        - relation
      properties:
        contentTypes:
          type: array
          example: '["application/json", "application/pdf"]'
          description: Possible content types of the resource.
          items:
            type: string
        href:
          type: string
          format: uri
          description: URL to the linked resource (no parameters needed).
          example: 'https://www.brussels.info/train-stations/'
        method:
          type: string
          example: GET
          description: HTTP method to call the action
        relation:
          type: string
          example: Get Map
          description: Relation of this link to the current entity.
        version:
          type: integer
          format: int32
          example: 1
          description: Version of the current relation.
      description: >-
        The underlying system may provide additional links pointing on further
        information (such as HTML download links, websites or extended APIs).
        Mechanism to add flexible extensions specific to an underlying system.
    Segment:
      type: object
      properties:
        index:
          type: integer
        origin:
          $ref: '#/components/schemas/LocationRef'
        destination:
          $ref: '#/components/schemas/LocationRef'
        seqId:
          description: ordering of the trains
          type: number
          format: int32
        transfer:
          description: Transfer to the next vehicle not included in the request
          type: object
          properties:
            duration:
              description: Duration forseen to transfer to the next section
              type: number
              format: int32
            transferType:
              description: 'WALK,...'
              type: string
          required:
            - duration
            - transferType
          additionalProperties: false
        vehicle:
          type: object
          properties:
            numbers:
              description: >-
                Id of the vehicle, In case of two train s running in parallel
                there might be two train numbers.
              type: array
              items:
                type: string
            line:
              description: >-
                Line number in case the vehical does not have a number
              type: string
            serviceBrand:
              $ref: '#/components/schemas/ServiceBrandCodeDef'
            transportMode:
              description: >-
                Transport mode (code list of MERITS). Optional for offer
                requests, included for alignment with FSM
              type: string
              additionalProperties: false
        stops:
          type: array
          items:
            type: object
            properties:
              station:
                $ref: '#/components/schemas/LocationRef'
              departureDateTime:
                description: date and time in the time zone of the station
                type: string
                format: date
              arrivalDateTime:
                description: date and time in the time zone of the station
                type: string
                format: date
              index:
                type: number
                format: int32
                example: 5
                description: >-
                  Unique value [0..*] within the segment, guaranteeing an
                  ascending order, though the value may jump non-continuously.
              departureTrack:
                type: string
                example: 13A
                description: >-
                  The info about the departure-track of the stop. Format depends
                  on operator.
              arrivalTrack:
                type: string
                example: 13B
                description: >-
                  The info about the arrival-track of the stop. Format depends
                  on operator.
            description: >-
              Represents a location resp. station. Either a departure, arrival
              or intermediate stop along a segment of a trip.
            required:
              - station
            additionalProperties: false
      required:
        - seqId
        - vehicle
      additionalProperties: false
    Station:
      type: object
      properties:
        codeList:
          $ref: '#/components/schemas/StationCodeListDef'
        country:
          type: string
        localCode:
          type: string
        name:
          type: string
      required:
        - country
        - localCode
      additionalProperties: false
    LocationRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/location/2345'
        title:
          type: string
          example: Bruxelles-Midi
    Location:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        type:
          oneOf:
            - $ref: '#/components/schemas/Station'
            - $ref: '#/components/schemas/POI'
            - $ref: '#/components/schemas/Address'
            - $ref: '#/components/schemas/GeoCoordinate'
        links:
          type: array
          description: Context information required by the services.
          items:
            $ref: '#/components/schemas/Link'
      required:
        - country
        - LocationCode
      additionalProperties: false
    StationCodeListDef:
      description: >-
        Code list used for the station codes: UIC = UIC codes as used by merits
        (UIC country code + local code) = Default// UIC-R = UIC codes for
        reservation (UIC country code + local code reservation) // ERA = future
        ERA station code
      type: string
      default: UIC
    Address:
      type: object
      description: used to encode an address
      properties:
        street:
          type: string
          example: Segantinistrasse
        houseNr:
          description: house number
          type: string
          example: 7
        city:
          description: city
          type: string
          example: Bern
        postalCode:
          description: postal code
          type: string
          example: 3006
        country:
          description: country
          type: string
          example: Schweiz
    POICodeList:
      description: Code list used for the POI codes.
      type: string
      default: UIC
    TripRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/trip/2345'
        title:
          type: string
          example: Bruxelles-Midi - Paris-Nord 20200701 10:05
        origin:
          $ref: '#/components/schemas/LocationRef'
        destination:
          $ref: '#/components/schemas/LocationRef'
        serviceBrands:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBrandCodeDef'
        departureTime:
          $ref: '#/components/schemas/DateTime'
        arrivalTime:
          $ref: '#/components/schemas/DateTime'
    TripDef:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
        origin:
          $ref: '#/components/schemas/LocationRef'
        destination:
          $ref: '#/components/schemas/LocationRef'
        duration:
          type: string
          description: >-
            Total duration over all segment's (format see
            https://www.w3.org/TR/xmlschema11-2/#duration)
          example: P2DT3H4M
        links:
          type: array
          description: Context information required by the services.
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
    ServiceBrandCodeDef:
      description: >-
        Service brand codes allowed in response, code list can be found on 
        [https://uic.org/passenger/passenger-services-group/article/service-brand-code-list](https://uic.org/passenger/passenger-services-group/article/service-brand-code-list)
      type: integer
    POI:
      type: object
      properties:
        codeList:
          $ref: '#/components/schemas/POICodeList'
        country:
          description: country
          type: string
          example: Schweiz 
        localCode:
          description: TODO clarify semantics
          type: string
          example: TODO clarify
        name:
          description: name of the point of interest
          type: string
          example: Bern Bärengraben (Denkmal)
      required:
        - country
        - localCode
      additionalProperties: false
    TripsCollection:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        tripsCollection:
          type: array
          items:
            $ref: '#/components/schemas/TripRef'
        scrollBackContext:
          type: string
          description: >-
            Scroll reference for the current response to scroll backward. (Value
            depends on underlying system.)
        scrollForwardContext:
          type: string
          description: >-
            Scroll reference for the current response to scroll   forward.
            (Value depends on underlying system.)
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    GeoCoordinate:
      type: object
      properties:
        system:
          description: >-
            geo coordinate system indication: 
             - WGS84 = WGS 84 standard system,
             - GRS80 = (outdated) GRS 80 coordinate system
          type: string
          enum:
            - WGS84
            - GRS80
          default: WGS84
        accuracy:
          description: to be proviced in degree. TODO clarify semantics
          type: number
          format: float
        latitude:
          description: >-
            Geographic coordinate that specifies the north-south position of a point on the earth’s surface
          type: number
          format: float
          example: 46.948825
        longitude:
          description: >-
            Geographic coordinate that specifies the east-west position of a point on the earth’s surface.            
          type: number
          format: float
          example: 7.439122
      required:
        - latitude
        - longitude
      additionalProperties: false
    DateTime:
      description: >-
        Local date/time of the underlying system (ISO notation see
        RFC3339-sec5.6). Timezone is related to station time, therefore it must
        not be specified in request. The underlying system will find hits about
        the given instance in time and will respond dateTime with appropriate
        TIMEZONE as well.
      type: string
      format: date-time
    TripSearchCriteria:
      type: object
      properties:
        origin:
          $ref: '#/components/schemas/Location'
        destination:
          $ref: '#/components/schemas/Location'
        viaValues:
          description: >-
            Ordered list of via locations within the trip. Unique code value has
            to be set according to valueType. Max number of via's depends on the
            underlying system.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        traveldateTime:
          $ref: '#/components/schemas/DateTime'
        isArrival:
          description: >-
            Defines whether or not the given travel date/time is the latest
            arrival (true arriving at given time; false departing at given
            time).
          type: boolean
          default: false
        transportMode:
          description: >-
            transport mode (code list of MERITS). Optional for offer requests,
            included for alignment with FSM
          type: string
        serviceBrands:
          type: array
          items:
            type: string
        maxChanges:
          description: >-
            Max amount of transport-product changes (0 for direct
            connection, default/max=11)
          type: number
          format: int32
        extendedChangeTime:
          description: >-
            OOS MVP Indicates additional transfer time required where a transfer
            is present in the resulting trip. Expressed in minutes
          type: number
          format: int32
        PRMAssistance:
          description: >-
            OOS MVP Indicates a need for an itinerary where end-to-end PMR
            assistance and accessibility is possible
          type: boolean
          default: false
      required:
        - originValue
        - destinationValue
    OfferSearchCriteria:
      type: object
      properties:
        flexibilities:
          description: Defines the flexibility levels desired in the fares returned
          type: array
          items:
            $ref: '#/components/schemas/Flexibility'
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ServiceClassDef'
          description: >-
            Defines the comfort classes desired for the fares returned (1st vs
            second, possibly refined A,B,C,D selection)
        currency:
          $ref: '#/components/schemas/CurrencyDef'
    TripOfferRequest:
      type: object
      properties:
        tripId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          description: >-
            optionally used instead of tripSearchCriteria element, if the offers
            are to be constructed for a previously built trip
        tripRef:
          type: string
          format: url
          example: 'http://some.provider/trip/2345'
        trip:
          $ref: '#/components/schemas/TripDef'
        requestedSection:
          $ref: '#/components/schemas/TravelSectionDef'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/PassengerDef'
        tripSearchCriteria:
          $ref: '#/components/schemas/TripSearchCriteria'
        OfferSearchCriteria:
          $ref: '#/components/schemas/OfferSearchCriteria'
    TripOffer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        trip:
          $ref: '#/components/schemas/TripRef'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/OfferRef'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/PassengerRef'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    TripOfferRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/tripOffer/2345'
        title:
          type: string
          example: 'Bruxelles-Midi 10:05 20200701'
    RequestedInformation:
      type: string
      description: >-
        regular-expression indicating the data that must be set in the data
        model in order to proceed to next step of the process
    OfferSummary:
      type: object
      properties:
        minimalPrice:
          $ref: '#/components/schemas/CurrencyPriceDef'
        overallServiceClass:
          $ref: '#/components/schemas/ServiceClassDef'
        overallServiceLevel:
          $ref: '#/components/schemas/ServiceLevelIdDef'
        overallFlexibility:
          $ref: '#/components/schemas/Flexibility'
    Offer:
      type: object
      properties:
        offerSummary:
          $ref: '#/components/schemas/OfferSummary'
        requestedInformation:
          $ref: '#/components/schemas/RequestedInformation'
        trip:
          $ref: '#/components/schemas/TripRef'
        validFrom:
          $ref: '#/components/schemas/DateTime'
        validTo:
          $ref: '#/components/schemas/DateTime'
        offerParts:
          $ref: '#/components/schemas/OfferPartRef'
        fares:
          type: array
          items:
            $ref: '#/components/schemas/FareDef'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    OfferRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/offer/2345'
        title:
          type: string
          example: 'Bruxelles-Midi- Paris-Nord 10:05 20200701 NF 50 EUR'
    TripOffersCollection:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        tripOffers:
          type: array
          items:
            $ref: '#/components/schemas/TripOfferRef'
        scrollBackContext:
          type: string
          description: >-
            Scroll reference for the current response to scroll backward. (Value
            depends on underlying system.)
        scrollForwardContext:
          type: string
          description: >-
            Scroll reference for the current response to scroll   forward.
            (Value depends on underlying system.)
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CurrencyDef:
      description: ISO4217 currency codes
      type: string
    CurrencyPriceDef:
      type: object
      minProperties: 1
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyDef'
        amount:
          description: amount in cents
          type: number
          format: int32
        vatDetails:
          type: array
          items:
            type: object
            properties:
              country:
                type: string
              amount:
                description: amount in cents
                type: number
                format: int32
              percentage:
                type: number
                format: int32
              taxId:
                type: string
              scope:
                description: >-
                  scope where the VAT applies: INTERNATIONAL, NATIONAL,
                  SHORT_DISTANCE, LONG_DISTANCE
                type: string
            required:
              - country
            additionalProperties: false
      required:
        - currency
        - amount
      additionalProperties: false
    PassengerDef:
      type: object
      properties:
        passengerReference:
          description: >-
            used to refer to passengers from other elements, or from caller
            system.
          type: string
        dateOfBirth:
          description: date of birth of the passenger
          type: string
          format: date
        reductionCards:
          description: reduction cards owned by the passenger 
          type: array
          items:
            $ref: '#/components/schemas/ReductionCardReferenceDef'
        gender:
          description: >- 
            gender of the passenger, which is important in the case of night trains
          type: string
          enum:
           - MALE
           - FEMALE
           - X
        type:
          type: string
          description: Values from the traveler type code list IRS 90918-10
      required:
        - travelerId
        - dateOfBirth
      additionalProperties: false
    ReductionCardReferenceDef:
      type: object
      properties:
        cardValue:
          description: code of the card type according to code list
          type: string
        cardValueType:
          description: code list for the cardValue provided
          type: string
        cardName:
          description: card name for printing on tickets
          type: string
        issuer:
          type: string
          description: >-
            RICS company code or the upcoming compatible ERA company code. In
            case proprietary codes are used on a bilateral base the codes must
            have at least 5 positions and start with x.
        serviceClasses:
          description: >-
            list of service classes in case this class is available for
            different classes
          type: array
          items:
            $ref: '#/components/schemas/ServiceClassDef'
      required:
        - cardId
        - cardValueType
      additionalProperties: false
    PassengerDetailsDef:
      type: object
      properties:
        eMails:
          type: array
          items:
            type: string
            format: email
        firstName:
          type: string
        firstNameICAO:
          description: ICAO transliteration
          type: string
        lastName:
          type: string
        lastNameICAO:
          description: ICAO transliteration
          type: string
        title:
          type: string
        phones:
          type: array
          items:
            type: string
      additionalProperties: false
    ServiceClassDef:
      type: object
      properties:
        id:
          description: The detailed comfort class
          type: string
          enum:
            - A
            - B
            - C
            - D
        carrierName:
          type: string
          description: >-
            the name the carrier itself uses to designate this specific comfort
            class
        classicClass:
          description: >-
            generic class classification,mostly used to harmonize choice and
            representation across multiple carriers
          type: string
          enum:
            - FIRST
            - SECOND
      required:
        - id
      additionalProperties: false
    TravelSectionDef:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/Location'
        end:
          $ref: '#/components/schemas/Location'
        segmentId:
          description: >-
            reference to a trip segment in case the section corresponds to a
            segment in the trip and the trip is part of the offer
          type: string
      required:
        - start
        - end
      additionalProperties: false
    PassengerRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/passenger/2345'
        title:
          type: string
          example: André Dupont
    Passenger:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        passengerDef:
          $ref: '#/components/schemas/PassengerDef'
        passengerDetailsDef:
          $ref: '#/components/schemas/PassengerDetailsDef'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ServiceLevelIdDef:
      description: 'code of the service level, codelist in IRS 90918-1'
      type: string
    Flexibility:
      type: string
      enum:
        - FULLFLEX
        - MIDFLEX
        - NONFLEX
    OfferPart:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/CurrencyPriceDef'
        pricingMode:
          type: string
          enum:
            - COLLECTIVE
            - INDIVIDUAL
        validAsOf:
          $ref: '#/components/schemas/DateTime'
        validUntil:
          $ref: '#/components/schemas/DateTime'
        reductionsApplied:
          type: array
          items:
            $ref: '#/components/schemas/ReductionCardReferenceDef'
        passengerRefs:
          type: array
          items:
            $ref: '#/components/schemas/PassengerRef'
        validFrom:
          $ref: '#/components/schemas/DateTime'
        validTo:
          $ref: '#/components/schemas/DateTime'
        productRefs:
          type: array
          items:
            type: object
            properties:
              productRef:
                $ref: '#/components/schemas/ProductRef'
              segmentRefs:
                type: array
                items:
                  type: string
    ProductRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/product/2345'
        title:
          type: string
          example: TGV Lyria Loisir 2
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        code:
          type: string
          description: >-
            The product code expressed in the provider system (could be a
            mapping from an even lower-level provider).
          example: PT00AD
        description:
          type: string
          description: the textual description of the product
          example: Loisir Non-flex Adult Fare
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ProductCondition'
          description: >-
            Structured description of the sales or aftersales conditions.
        refundable:
          type: string
          enum:
            - YES
            - NO
            - WITH_CONDITIONS
        exchangeable:
          type: string
          enum:
            - YES
            - NO
            - WITH_CONDITIONS
        serviceClass:
          $ref: '#/components/schemas/ServiceClassDef'
        fulfillmentType:
          type: string
        serviceConstraintText:
          type: string
        carrierConstraintText:
          type: string
    ProductCondition:
      type: object
      properties:
        type:
          type: string
          enum:
            - SALES
            - EXCHANGE
            - REFUND
        description:
          type: string
        validFrom:
          $ref: '#/components/schemas/DateTime'
        validUntil:
          $ref: '#/components/schemas/DateTime'
        aftersalesFee:
          type: object
          properties:
            price:
              $ref: '#/components/schemas/CurrencyPriceDef'
            validFrom:
              $ref: '#/components/schemas/DateTime'
            validUntil:
              $ref: '#/components/schemas/DateTime'
    Admission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        offerPart:
          $ref: '#/components/schemas/OfferPart'
        reservationRequired:
          type: boolean
        numericAvailability:
          type: number
          format: int32
        reservations:
          type: array
          items:
            type: object
            properties:
              relationType:
                type: string
                enum:
                  - OPTIONAL
                  - MANDATORY
                  - INCLUDED
              reservation:
                $ref: '#/components/schemas/ReservationRef'
        ancillaries:
          type: array
          items:
            type: object
            properties:
              relationType:
                type: string
                enum:
                  - OPTIONAL
                  - INCLUDED
              ancillary:
                $ref: '#/components/schemas/AncillaryRef'
    AdmissionRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/admission/2345'
        title:
          type: string
          example: NRT Bruxelles-Amsterdam IC 2ndClass 20200712
    Reservation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        offerPart:
          $ref: '#/components/schemas/OfferPart'
        numericAvailability:
          description: denotes the number of seats available for booking
          type: number
          format: int32
        reservationDetails:
          type: array
          items:
            $ref: '#/components/schemas/ReservationDetails'
        ReservationAssigned:
          $ref: '#/components/schemas/ReservationAssigned'
    ReservationRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/reservation/2345'
        title:
          type: string
          example: Seating ICE Bruxelles-Frankfurt Child 2020-07-12
    IntegratedReservation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        offerPart:
          $ref: '#/components/schemas/OfferPart'
        numericAvailability:
          description: denotes the number of seats available for booking
          type: number
          format: int32
        ancillaries:
          type: array
          items:
            type: object
            properties:
              relationType:
                type: string
                enum:
                  - OPTIONAL
                  - INCLUDED
              ancillary:
                $ref: '#/components/schemas/AncillaryRef'
        reservationDetails:
          $ref: '#/components/schemas/ReservationDetails'
        ReservationAssigned:
          $ref: '#/components/schemas/ReservationAssigned'
    IntegratedReservationRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/integratedReservation/2345'
        title:
          type: string
          example: ICE Bruxelles-Frankfurt child 2020-07-12
    ReservationAssigned:
      type: object
      properties:
        passenger:
          $ref: '#/components/schemas/PassengerRef'
        segmentIndex:
          $ref: '#/components/schemas/SegmentIndex'
        placeNumber:
          type: string
        coachNumber:
          type: string
        direction:
          type: string
          enum:
            - FORWARD
            - BACKWARD
            - UNKNOWN
      description: >-
        Once booked, this element will contain the details of the space
        reserved.
    SegmentIndex:
      type: integer
      description: >-
        Refers to the segment the compartment information relates to by its
        index.
    ReservationDetails:
      type: object
      properties:
        compartment:
          type: object
          properties:
            segmentIndex:
              $ref: '#/components/schemas/SegmentIndex'
            serviceClass:
              $ref: '#/components/schemas/ServiceClassDef'
            serviceLevel:
              $ref: '#/components/schemas/ServiceLevelIdDef'
            compartmentOptions:
              type: array
              items:
                type: object
                properties:
                  commonForAllPassengers:
                    type: boolean
                    description: >-
                      indicates if the option is applicable to the whole
                      passengers party or individually
                  compartmentPreference:
                    type: object
                    properties:
                      codelist:
                        type: string
                        description: the codelist to use for reference
                      code:
                        type: string
                        description: >-
                          the code for the option represented in the given
                          codelist
    Ancillary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        offerPart:
          $ref: '#/components/schemas/OfferPart'
        category:
          type: string
    AncillaryRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/ancillary/2345'
        title:
          type: string
          example: ICE Wifi Onboard 2020-07-11
    OfferPartRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: >-
            http://some.provider/ancillary/2345 or
            http://some.provider/integratedReservation/2345'
        title:
          type: string
          example: ICE wifi onboard 2020-07-11 or ICE Bruxelles-Frankfurt child 2020-07-12
      description: >-
        References all the offerparts elements in an uniform format. an
        offerPartRef can therefore refer to reservation, integrated reservation
        admission or ancillary (in its href)
    FareDef:
      type: object
      properties:
        fareIdentifier:
          description: unique id of the fare item to be included in accountings
          type: string
        fareType:
          description: 'IRT,NRT,RES,ANX'
          type: string
        nameRef:
          description: reference to the offer name
          type: string
        priceRef:
          description: 'reference to the price '
          type: string
        regionalConstraintRef:
          description: reference to the regional validity
          type: string
        serviceConstraintRef:
          type: string
        carrierConstraintRef:
          type: string
        serviceClassRef:
          type: string
        serviceLevelRef:
          type: string
        passengerConstraintRef:
          type: string
        afterSalesRulesRef:
          type: string
        combinationConstraintRef:
          type: string
        fullfillmentConstraintRef:
          type: string
        reductionConstraintRef:
          type: string
        reservationParameterRef:
          type: string
        personalDataConstraintRef:
          type: string
        legacyAccountingIdentifier:
          description: identifier of the fare in the current 301 accounting file data
          type: object
          properties:
            serialId:
              description: sequential number of regional validities
              type: integer
              minimum: 0
              maximum: 99999
            addId:
              description: >-
                sequential number of regional validities (leading positions in
                case the series is too short
              type: integer
              minimum: 0
              maximum: 99
            tariffId:
              description: sequential number of the fares for one regional validity
              type: integer
              minimum: 0
              maximum: 9999
          additionalProperties: false
        fareDetailDescriptionRef:
          description: 'reference to a text with the details of the fare '
          type: string
        salesAvailabilityConstraintRef:
          type: string
        travelValidityConstraintRef:
          type: string
        legacyConversion:
          description: >-
            options for legacy conversion to 108.1: NO ( no conversion) YES
            (conversion allowed), ONLY (fare is provided only for conversion and
            should not be used otherwise 
          type: string
          default: 'NO'
        individualContracts:
          description: >-
            indicates that the fare can be treated independently per person
            although booked for more than one person.
          type: boolean
          default: false
      required:
        - fareType
      additionalProperties: false
    BookingRequest:
      type: object
      properties:
        selectedOfferId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          description: id of the selected offer
        selectedReservationsIds:
          type: array
          items:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
            description: >-
              If relevant, ids of the selected optional reservations.
        selectedAncillaries:
          type: array
          items:
            type: object
            properties:
              ancillaryId:
                type: string
                format: uuid
                example: d290f1ee-6c54-4b01-90e6-d701748f0851
                description: >-
                  If relevant, ids of the selected optional ancillaries.
              passengerIds:
                type: array
                items:
                  type: string
                  format: uuid
                  example: d290f1ee-6c54-4b01-90e6-d701748f0851
                description: >-
                  Id of the passengers the selected optional ancillaries are for.
      required:
        - selectedOfferId
    Booking:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        status:
          type: string
          enum:
            - PREBOOKED
            - BOOKED
            - PAID
            - FULFILLED
            - CANCELLED
            - REFUNDED
            - ERROR
        requestedInformation:
          $ref: '#/components/schemas/RequestedInformation'
        ticketTimeLimit:
          $ref: '#/components/schemas/DateTime'
        fulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
        bookedOffer:
          $ref: '#/components/schemas/OfferRef'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/PassengerRef'
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/TicketRef'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    BookingRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/booking/2345'
        title:
          type: string
          example: booking 2345
    FulfillmentOption:
      type: string
      enum:
        - ETICKET
        - PAPER
        - TICKETLESS
    Ticket:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        status:
          type: string
          enum:
            - ACTIVE
            - CANCELLED
            - TRAVELLED
        offerParts:
          type: array
          items:
            $ref: '#/components/schemas/OfferPartRef'
        refundConditions:
          type: array
          items:
            $ref: '#/components/schemas/RefundCondition'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    TicketRef:
      type: object
      properties:
        href:
          type: string
          format: url
          example: 'http://some.provider/Ticket/2345'
        title:
          type: string
          example: Ticket Paris-Barcelona Andre Dupont 2020-07-23
    RefundCondition:
      type: object
      properties:
        totalFees:
          $ref: '#/components/schemas/CurrencyPriceDef'
        refundableAmount:
          $ref: '#/components/schemas/CurrencyPriceDef'
        fees:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - DISTRIBUTION
                  - CARRIER
                  - PHYSICAL_HANDLING
              amount:
                $ref: '#/components/schemas/CurrencyPriceDef'
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://zalando.github.io/problem/constraint-violation'
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in English and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the problem.
