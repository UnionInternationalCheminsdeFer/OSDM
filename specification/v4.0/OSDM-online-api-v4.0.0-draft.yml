openapi: 3.1.0

info:
  title: UIC 90918-10 - OSDM
  version: 4.0.0-draft
  description: |
    Specifications for the OSDM API standard. The OSDM specification supports two modes of operation: Retailer Mode and Distributor Mode. The API works identically in both modes, except that in distributor mode the API also returns fare information.

    The following resources are key to get started:

      -  [Processes](https://osdm.io/spec/processes/)
      -  [Models](https://osdm.io/spec/models/)
      -  [Getting started](https://osdm.io/spec/getting-started/)

  contact:
    name: OSDM Working Group
    url: 'https://osdm.io'
    email: osdm@uic.org
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: https://s3p-osdm.cloud.sqills.com
    description: |
      Sqills Sandbox
  - url: https://osdm-5.platform.bileto.zone/api
    description: |
      Bileto Sandbox (osdm.cz)
  - url: https://benerail-stg-apim.azure-api.net
    description: |
      benerail Sandbox
  - url: https://api.sandbox.turnit.tech/retailer
    description: |
      Turnit Sandbox      

tags:
  - name: Versions
    description: |
      information about the available versions of the OSDM API
  - name: Places
    description: |
      resources to search for places
  - name: Trips
    description: |
      resources to search for trips
  - name: Offers
    description: |
      resources to get bookable offers
  - name: Offer Overview
    description: |
      resources to get an overview of prices without detailed offer information      
  - name: Availabilities
    description: |
      resources to query availabilities before or after pre-booking
  - name: BookingPart
    description: |
      resources to add and remove offer parts to a pre-booked booking
  - name: Bookings
    description: |
      resources to manipulate bookings
  - name: BookedOffers
    description: |
      resources to manipulate bookings
  - name: Bookings Search
    description: |
      resources to search for bookings
  - name: Bookings Split
    description: |
      resources to split a booking
  - name: Purchaser
    description: |
      resources to manipulate a purchaser's information at every stage of the flow
  - name: Passengers
    description: |
      resources to manipulate a passenger's information at every stage of the flow
  - name: Passenger Categories
    description: |
      optional objects to simplify the entry of passenger specifications
  - name: Fulfillments
    description: |
      resources to retrieve fulfillments, e.g. tickets
  - name: Refund
    description: |
      resources to get and accept a refund offer
  - name: Exchange
    description: |
      resources to get exchange offers and book it
  - name: On Hold
    description: |
      resources to put a pre-booking on hold for a given time limit
  - name: Release
    description: |
      resources to release a fulfillment (two-step refund where the first step is to mark the release date, release allocated seats, invalidate the ticket. Refund of money is performed in the second step.)
  - name: Complaint Management
    description: |
      resources to manage complaints
  - name: Cancel Fulfillments
    description: |
      resources to cancel fulfillments
  - name: Booking Documents
    description: |
      resources to get documents
  - name: Reimbursement Management
    description: |
      resources to manage reimbursements
  - name: Travel Account
    description: |
      resource to get a travel account
  - name: On-Demand Services
    description: |
      resources to handle contiuous on n-demand servces (e.g. scooter)     
  - name: Search
    description: |
      search resources
  - name: Master Data
    description: |
      resources to get master data
  - name: Product
    description: |
      resources to get product and product related master data

paths:
  /versions:
    get:
      summary: Returns all available versions of the OSDM API.
      tags:
        - Versions
      operationId: getVersions
      responses:
        '200':
          description: |
            versions available
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiVersion'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'

  /places:
    get:
      tags:
        - Master Data
      summary: Returns all places.
      operationId: getPlaces
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/ifNoneMatch'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: page
          in: query
          description: |
            can be used for pagination
          schema:
            type: string
      responses:
        '200':
          description: |
            places found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
              description: |
                Resource is fairly persistent and has a medium time to live to allow short-term caching.
            ETag:
              schema:
                type: string
              description: version tag
        '303':
          $ref: '#/components/responses/SeeOtherResponse'
        '304':
          $ref: '#/components/responses/NotModifiedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    post:
      tags:
        - Places
      summary: returns place information for a given place request
      description: |
        Returns places for a given place request based on the OJP specification.
      operationId: postPlaces
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
      requestBody:
        required: true
        description: |
          request for place
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceRequest'
      responses:
        '200':
          description: |
            places found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /places/{placeId}:
    get:
      tags:
        - Places
      summary: returns a place
      operationId: getPlacesId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: placeId
          in: path
          description: |
            id of the place to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            place found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /trips-collection:
    post:
      tags:
        - Trips
      summary: returns a collection of trips for a given OJP trip request
      description: |
        Returns trips for a given trip request based on the OJP specification.
      operationId: postTrips
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: stopBehavior
          in: query
          schema:
            $ref: '#/components/schemas/StopBehavior'
          required: false
      requestBody:
        required: true
        description: |
          request for trips
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripSearchCriteria'
      responses:
        '200':
          description: |
            trips found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripCollectionResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /trips-collections/{tripsCollectionId}:
    get:
      tags:
        - Trips
      summary: Returns a collection of trips.
      description: |
        Returns a collection of trips for a for a given trips collection id.
        The unique codes of the origin and destination can be resolved using the places service.
      operationId: getTripsCollectionId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: tripsCollectionId
          in: path
          description: |
            id of the trips
          required: true
          schema:
            type: string
        - name: stopBehavior
          in: query
          schema:
            $ref: '#/components/schemas/StopBehavior'
          required: false
        - name: page
          in: query
          schema:
            type: string
        - name: embed
          in: query
          description: |
            Influences whether referenced resources are returned in full or as references only.
            Default value: ALL
          schema:
            type: array
            maxItems: 2
            items:
              $ref: '#/components/schemas/TripsCollectionResponseContent'
      responses:
        '200':
          description: |
            trips found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /trips:
    post:
      tags:
        - Trips
      summary:
        Returns a new trip for given OJP parameters based on an already existing
        trip
      description: |
        Returns a new trip for given OJP parameters based on an already existing trip.
      operationId: postTripsChange
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: stopBehavior
          in: query
          schema:
            $ref: '#/components/schemas/StopBehavior'
          required: false
      requestBody:
        description: |
          request for trips
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripChangeCriteria'
      responses:
        '200':
          description: |
            trips changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /trips/{tripId}:
    get:
      tags:
        - Trips
      summary: Returns a trip element representing a travel trip.
      description: |
        A trip consists of one or more legs for a given tripId. Depending on the
        embed either references or full location definitions is returned.
      operationId: getTripsId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: tripId
          in: path
          description: |
            id of the trip to get.
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: stopBehavior
          in: query
          schema:
            $ref: '#/components/schemas/StopBehavior'
          required: false
        - name: embed
          in: query
          description: |
            Influences whether referenced resources are returned in full or as references only.
            Default value: ALL
          schema:
            type: array
            maxItems: 1
            items:
              $ref: '#/components/schemas/TripResponseContent'
      responses:
        '200':
          description: |
            trip found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /offers:
    post:
      tags:
        - Offers
      summary: Returns offers for trips or trip search criteria.
      operationId: createOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferCollectionRequest'
      responses:
        '200':
          description: |
            collection of offers found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/booked-offers/{bookedOfferId}/additional-offers:
    get:
      tags:
        - Offers
      summary:
        Get additional offers of booked offer for a given booking. A provider
        can decide to allow or reject additional offers admissions, reservations
        or ancillaries on an confirmed booking.
      operationId: getBookingBookedOffersAdditionalOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '200':
          description: |
            additional offers found for booked offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalOfferCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/on-hold-offer:
    post:
      tags:
        - On Hold
      summary: Creates an on hold offer.
      description: |
        On hold offer created
      operationId: createOnHoldOffer
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnHoldOfferRequest'
      responses:
        '200':
          description: |
            on-hold offer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnHoldOfferResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'


  /offer-overview-route:
    post:
      tags:
        - Offer Overview
      summary: Returns an overview of prices based on route
      description: |
        Returns an overview of prices for a given route search and criteria.
        The overview does not contain detailed offer information, but only the
        prices.
      operationId: getOfferOverviewRoute
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferOverviewRouteRequest'
      responses:
        '200':
          description: |
            overview of prices found
          headers:
            Content-Language:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferOverviewRouteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'

  /offer-overview-trip:
    post:
      tags:
        - Offer Overview
      summary: Returns an overview of prices based on trips
      description: |
        Returns an overview of prices for a given trip search and criteria.
        The overview does not contain detailed offer information, but only the
        prices.
      operationId: getOfferOverviewTrip
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferOverviewTripRequest'
      responses:
        '200':
          description: |
            overview of prices found
          headers:
            Content-Language:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferOverviewTripResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
          
  /bookings/{bookingId}/on-hold-offer/{onHoldOfferId}:
    patch:
      tags:
        - On Hold
      summary: Confirms the on hold offer.
      operationId: confirmOnHoldOffer
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: onHoldOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnHoldOfferPatchRequest'
      responses:
        '200':
          description: |
            on-hold offer confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnHoldOfferResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - On Hold
      summary: Deletes the on hold offer
      operationId: deleteOnHoldOffer
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: onHoldOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/passengers/{passengerId}:
    get:
      tags:
        - Passengers
      summary: Returns the passenger's information at booking step.
      operationId: getBookingPassengersId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: passengerId
          in: path
          description: |
            id of the passenger
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            passenger found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Passengers
      summary: Allows updating a passenger's information at booking step.
      operationId: patchBookingPassenger
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking the passenger is in.
          required: true
          schema:
            type: string
        - name: passengerId
          in: path
          description: |
            id of the passenger
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerSpecification'
      responses:
        '200':
          description: |
            passenger successfully patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/purchaser:
    get:
      tags:
        - Purchaser
      summary: Returns the purchaser's information at booking step.
      operationId: getBookingPurchaser
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking the purchaser is in.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            purchaser found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaserResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Purchaser
      summary: Allows updating a purchaser's information at booking step.
      operationId: patchBookingPurchaser
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking the purchaser is in.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaserSpecification'
      responses:
        '200':
          description: |
            purchaser patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaserResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    post:
      tags:
        - Purchaser
      summary: Allows creating a purchaser for a booking already existing.
      operationId: postBookingPurchaser
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking the purchaser is in.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchaser'
      responses:
        '200':
          description: |
            purchaser posted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaserResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /bookings/{bookingId}/booked-offers:
    post:
      tags:
        - BookedOffers
      summary: Creates bookedOffers from offers and adds them in a booking.
      operationId: postBookingBookedOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookedOfferRequest'
      responses:
        '200':
          description: |
            booking pre-booked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookedOfferResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /bookings/{bookingId}/booked-offers/{bookedOfferId}:
    get:
      tags:
        - BookedOffers
      summary: Gets a bookedOffer of a booking.
      operationId: getBookingBookedOffersId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '200':
          description: |
            bookedOffer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookedOfferResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - BookedOffers
      summary: Delete a bookedOffer from a booking.
      operationId: deleteBookingBookedOffersId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/booked-offers/{offerId}/passengers/{passengerId}:
    delete:
      tags:
        - BookedOffers
      summary: Delete a passenger from bookedOffer of a booking.
      description: |
        Deletes all booked offer parts of the passenger only if this valid from a tariff point of view. This implies that the offer part are sufficiently partitioned and no repricing is needed.
      operationId: deleteBookingBookedOffersIdPassengerId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: passengerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/booked-offers/{bookedOfferId}/reservations:
    post:
      tags:
        - BookingPart
      summary:
        Adds a reservation to a booking. A provider can decide to allow or
        reject additional admissions, reservations or ancillaries on an
        confirmed booking.
      operationId: createBookingBookedOffersReservations
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookedOfferReservationRequest'
      responses:
        '200':
          description: |
            reservation added to booked offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookedOfferReservationResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/booked-offers/{bookedOfferId}/reservations/{reservationId}:
    delete:
      tags:
        - BookingPart
      summary:
        Removes a reservation from a booking in case the reservation was not yet
        confirmed. On confirmed reservations use the refund.
      operationId: deleteBookingBookedOffersReservations
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: reservationId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/booked-offers/{bookedOfferId}/ancillaries:
    post:
      tags:
        - BookingPart
      summary:
        Adds an ancillary to a booking. A provider can decide to allow or reject
        additional admissions, reservations or ancillaries on an confirmed
        booking.
      operationId: createBookingBookedOffersAncillaries
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookedOfferAncillaryRequest'
      responses:
        '200':
          description: |
            ancillary added to booked offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookedOfferAncillaryResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/booked-offers/{bookedOfferId}/ancillaries/{ancillaryId}:
    delete:
      tags:
        - BookingPart
      summary:
        Removes an ancillary from a booking in case the ancillary is not jet
        confirmed. On confirmed ancillaries use the refund.
      operationId: deleteBookingBookedOffersAncillary
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: ancillaryId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/booked-offers/{bookedOfferId}/admissions/{admissionId}:
    delete:
      tags:
        - BookingPart
      summary:
        Removes an admission from a booking. In case the admission is not
        confirmed. On a confirmed admission use the refund.
      description: |
        Removes an admission from pre-booked booking.It is up to the provider
        to change or remove dependent bookedOfferParts or to reject the request.
        A repricing might occur.
      operationId: deleteBookingBookedOffersAdmission
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: bookedOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: admissionId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings:
    post:
      tags:
        - Bookings
      summary: Creates a booking based on a previously requested offer.
      operationId: postBookings
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '200':
          description: |
            booking pre-booked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}:
    get:
      tags:
        - Bookings
      summary: Returns a booking.
      operationId: getBookingsId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking to get.
          required: true
          schema:
            type: string
        - name: embed
          in: query
          description: |
            Influences whether referenced resources are returned in full or as references only.
            Default value: ALL
          schema:
            type: array
            maxItems: 7
            items:
              $ref: '#/components/schemas/BookingResponseContent'
      responses:
        '200':
          description: |
            booking found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Bookings
      summary: Updates a booking but does *not* confirm the booking.
      description: |
        Updates fulfillment types, place selection and add payment. Does *not* confirm the booking. The booking is confirmed by calling 'POST /bookings/{bookingId}/fulfillments'.

      operationId: updateBooking
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking to be patched
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingPatchRequest'
      responses:
        '200':
          description: |
            booking fulfillment type updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - Bookings
      summary: Deletes a booking.
      description: |
        It is only possible before the booking is confirmed or in case of a technical problem in confirming multiple
        independent bookings within a sales transaction. Deletes on a confirmed booking must be documented
        and evidence on the issue must be provided on request.
        The delete on a confirmed booking is allowed immediately after the confirmation of the booking,
        but must be repeated according to the error handling rules in case the delete fails.
      operationId: deleteBookingsId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking to delete.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/cleanup:
    post:
      tags:
        - Bookings
      summary: Performs a complete cleanup of a booking in a single step
      description: |
        The booking is cleaned up completely: confirmed items are refunded, and unconfirmed items are deleted.
      operationId: postBookingCleanup
      parameters:
        - $ref: '#/components/parameters/requestor'

        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: bookingId
          in: path
          description: |
            id of the booking.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCleanupRequest'
      responses:
        '202':
          $ref: '#/components/responses/CleanupRequestAcceptedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/history:
    get:
      tags:
        - Bookings
      summary: Returns the history of changes to a booking.
      operationId: getBookingsIdHistory
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            booking history found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingHistoryResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings-search:
    post:
      tags:
        - Bookings Search
        - Search
      summary: Search for bookings based on search parameters.
      operationId: searchBookings
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: page
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingSearchRequest'
      responses:
        '200':
          description: |
            booking search results found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingSearchResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/split:
    post:
      tags:
        - Bookings Split
      summary: Split a booking into multiple bookings.
      description: |
        Splits a booking into a set of bookings according to the defined groups of a passenger(s). Only possible if allowed by the underlying tariff, if the bookedOffers are sufficiently partitioned and no pricing is needed.
      operationId: splitBookings
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: bookingId
          in: path
          description: |
            id of the booking to be split
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingSplitRequest'
      responses:
        '200':
          description: |
            booking split
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingSplitResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/fulfillments:
    post:
      tags:
        - Fulfillments
      summary: |
        Confirms the booking a triggers the fulfillment of the booking
        synchronously or asynchronously.
      description: |
        Confirms the booking and triggers the fulfillment of the booking.

        If the fulfillments are created synchronously the service directly returns the fulfillments. The fulfillments are then in state FULFILLED.

        If the fulfillments are created asynchronously the service starts the creation of the fulfillments. The fulfillmentIds may or may not returned. The fulfillments are in stage CONFIRMED. The booking needs to be retrieved later to obtain the fulfillments.
      operationId: postFulfillments
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking to be patched
          required: true
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentPostRequest'
      responses:
        '200':
          description: |
            Fulfillment successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentCollectionResponse'
        '202':
          description: |
            Fulfillment successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Fulfillments
      summary: Optionally finalizes the fulfillments in asynchronous mode.
      description: |
        Optionally finalizes the fulfillment in case of an asynchronous fulfillment mode when the provider doesn't complete the asynchronous fulfillment automatically.

        This step may be used as an indication of the `proof of delivery` to disallow the cancellation of booking.
      operationId: finalizeFulfillments
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking to be patched
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentsPatchRequest'
      responses:
        '200':
          description: |
            Fulfillment successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentCollectionResponse'
        '202':
          $ref: '#/components/responses/FulfillmentRequestAcceptedResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /fulfillments/{fulfillmentId}:
    get:
      tags:
        - Fulfillments
      summary: Returns the fulfillment, aka. ticket for the provided id.
      operationId: getFulfillmentId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: fulfillmentId
          in: path
          description: |
            id of the fulfillment to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            fulfillment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Fulfillments
      summary: Activates a fulfillment, i.e. changes the status to AVAILABLE.
      description: |
        Changes the fulfillment to status AVAILABLE. In the case of multi-journey product, one of the fulfillment is now 'activated' and can be used to travel.
      operationId: patchFulfillmentId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: fulfillmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentPatchRequest'
      responses:
        '200':
          description: |
            fulfillment patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /bookings/{bookingId}/fulfillment-check:          
    get:
      tags:
        - Fulfillments
      summary:
        Check step (step 1 in a two phase commit process) to run before the effective fulfillment endpoint. Provider do all checks to "guarantee" that fullfillment will work.
      description: |
        Step 1 in a two phase commit process. An aggregator can use this to secure that all underlaying provider systems are up and running and the provider booking is ready to be fulfilled.
      operationId: getCheckFulfillments
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking to be patched
          required: true
          schema:
            type: string

      responses:
        '204':
          description: |
            Booking is verified OK for fulfillment
        '400':
          $ref: '#/components/responses/ProblemsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'                    

  /fulfillments/{fulfillmentId}/continuous-service-usage/{continuousServiceUsageId}:
    get:
      tags:
        - Fulfillments
        - On-Demand Services
      summary: return the continuous service usage including latest updates
      operationId: getContinuousServiceUsageId           
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: fulfillmentId
          in: path
          description: |
            id of the fulfillment to get.
          required: true
          schema:
            type: string
        - name: continuousServiceUsageId
          in: path
          description: |
            id of the continuous service usage to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            continuous service usage found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinuousServiceUsage'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Fulfillments
        - On-Demand Services
      summary:
        start or end the usage of a continuous service of an demand vehicle
      description: |
        start or end the usage of a continuous service of an demand vehicle
      operationId: patchContinuousServiceUsageId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: fulfillmentId
          in: path
          required: true
          schema:
            type: string
        - name: continuousServiceUsageId
          in: path
          description: |
            id of the continuous service usage to get.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousServiceUsagePatchRequest'
      responses:
        '200':
          description: |
            fulfillment patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinuousServiceUsage'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /bookings/{bookingId}/refund-offers:
    post:
      tags:
        - Refund
      summary: Initiates a refund process by creating a refundOffer resource.
      description: |
        The RefundOffer contains the required information on the potential operation. One refund offer can then be
        accepted via a PATCH, deleted or left to die at the end of its lifetime.
      operationId: postRefundOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundOfferRequest'
      responses:
        '200':
          description: |
            refund offer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundOfferCollectionResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /bookings/{bookingId}/refund-offers/{refundOfferId}/confirmation-check:        
    get:
      tags:
        - Refund
      summary:
        Verification step (step 1 in a two phase commit process) to run before the effective patch endpoint. Provider do all checks to "guarantee" that refund will work.
      description: |
        Step 1 in a two phase commit process. An aggregator can use this to secure that all underlaying provider systems are up and running and the provider booking is ready to be refunded.
      operationId: getCheckRefundOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: refundOfferId
          in: path
          description: |
            id of the refund offer
          required: true
          schema:
            type: string
            maxLength: 32768

      responses:
        '204':
          description: Succes. OK to refund
        '400':
          $ref: '#/components/responses/ProblemsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'          


  /bookings/{bookingId}/refund-offers/{refundOfferId}:
    get:
      tags:
        - Refund
      summary: Returns the refund offer for the ids provided. Does not return confirmed refunds.
      operationId: getRefundOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: refundOfferId
          in: path
          description: |
            id of the refund offer to get.
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '200':
          description: |
            refund offer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundOfferResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Refund
      summary: Allows to accept and confirm a refund offer.
      operationId: patchRefundOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: refundOfferId
          in: path
          description: |
            id of the refund offer
          required: true
          schema:
            type: string
            maxLength: 32768
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundOfferPatchRequest'
      responses:
        '200':
          description: |
            refund offer confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundOfferResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - Refund
      summary: Deletes a refundOffer without waiting for expiry.
      description: | 
        In case the unconfirmed refund offer is not stored in the booking 
        object the delete request must return an ok (http 204). In case the 
        refund offer is already confirmed and can not be deleted the reply 
        must be an error (http 409 conflict).
      operationId: deleteRefundOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: refundOfferId
          in: path
          description: |
            id of the refund offer
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            refund offer deleted

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/release-offers:
    post:
      tags:
        - Release
      summary: Initiates a release process by creating a releaseOffers resource.
      operationId: postReleaseOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseOfferRequest'
      responses:
        '200':
          description: |
            release offer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseOfferCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/release-offers/{releaseOfferId}:
    get:
      tags:
        - Release
      summary: Returns the release offer for the ids provided.
      operationId: getReleaseOffer
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: releaseOfferId
          in: path
          description: |
            id of the release offer to get.
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '200':
          description: |
            release offer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseOfferResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Release
      summary: |
        Allows to accept and confirm a release offer. When accepted, all associated admissions are invalidated and reserved seats are released. The obtain money refund, refund offer must be used at later stage.
      operationId: patchReleaseOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: releaseOfferId
          in: path
          description: |
            id of the release offer
          required: true
          schema:
            type: string
            maxLength: 32768
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseOfferPatchRequest'
      responses:
        '200':
          description: |
            release offer confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseOfferResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - Release
      summary: Deletes a release offer without waiting for expiry.
      operationId: deleteReleaseOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: releaseOfferId
          in: path
          description: |
            id of the release offer
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '204':
          description: |
            release offer deleted

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/cancel-fulfillments-offers:
    post:
      tags:
        - Cancel Fulfillments
      summary: Initiates a cancel fulfillments process
      description: |
        Initiates a cancel fulfillments process by creating a
        cancelFulfillmentsOffers resource.
      operationId: postCancelFulfillmentsOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelFulfillmentsOfferRequest'
      responses:
        '200':
          description: |
            Refund offer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelFulfillmentsOfferCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/cancel-fulfillments-offers/{cancelFulfillmentsOfferId}:
    get:
      tags:
        - Cancel Fulfillments
      summary: Returns the cancel fulfillments offer for the ids provided.
      operationId: getCancelFulfillmentOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: cancelFulfillmentsOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '200':
          description: |
            RefundOffer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelFulfillmentsOfferResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Cancel Fulfillments
      summary: Allows to accept and confirm a cancel fulfillments offer.
      operationId: patchCancelFulfillmentsOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: cancelFulfillmentsOfferId
          in: path
          description: |
            id of the cancel fulfillment offer
          required: true
          schema:
            type: string
            maxLength: 32768
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelFulfillmentsOfferPatchRequest'
      responses:
        '200':
          description: |
            RefundOffer confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelFulfillmentsOfferResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - Cancel Fulfillments
      summary: Deletes a cancel fulfillments offer without waiting for expiry.
      operationId: deleteCancelFulfillmentOffers
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: cancelFulfillmentsOfferId
          in: path
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/exchange-offers:
    post:
      tags:
        - Exchange
      summary: Returns exchange offers for specified fulfillments or booking parts
      description: |
        Returns exchange offers for specified fulfillments submitted given
        requested new trip characteristics.
      operationId: createExchangeOffersCollection
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: embed
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ExchangeOfferCollectionResponseContent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeOfferRequest'
      responses:
        '200':
          description: |
            Collection of exchange offers found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeOfferCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /bookings/{bookingId}/exchange-operations:
    post:
      tags:
        - Exchange
      summary: Pre-books an exchangeOffer as part of an exchange operation.
      operationId: createBookingsExchangeOperations
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeOperationRequest'
      responses:
        '200':
          description: |
            exchange offer pre-booked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeOperationResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/exchange-operations/{exchangeOperationId}:
    get:
      tags:
        - Exchange
      summary: Returns the exchange operation with the id provided.
      description: |
        Returns the exchange operation with the id provided. It may be a
        provisional or a confirmed exchange.
      operationId: getBookingsExchangeOperations
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking
          required: true
          schema:
            type: string
        - name: exchangeOperationId
          in: path
          description: |
            id of the exchange operation
          required: true
          schema:
            type: string
        - name: embed
          in: query
          description: |
            Influences whether referenced resources are returned in full or as references only.
            Default value: ALL
          schema:
            type: array
            maxItems: 5
            items:
              $ref: '#/components/schemas/ExchangeOperationResponseContent'
      responses:
        '200':
          description: |
            ExchangeOperation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeOperationResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Exchange
      summary: Allows to update an ongoing exchange operation.
      operationId: updateBookingsExchangeOperations
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: bookingId
          in: path
          description: |
            id of the booking to be exchanged.
          required: true
          schema:
            type: string
        - name: exchangeOperationId
          in: path
          description: |
            id of the exchange operation.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeOperationPatchRequest'
      responses:
        '200':
          description: |
            Exchange successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeOperationResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - Exchange
      summary: Cancels an ongoing exchange operation in provisional state.
      operationId: deleteBookingsExchangeOperation
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          description: |
            id of the booking containing the exchange operation
          required: true
          schema:
            type: string
        - name: exchangeOperationId
          in: path
          description: |
            id of the exchangeOperation to delete.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /complaints:
    post:
      tags:
        - Complaint Management
      summary: Allows adding a complaint.
      description: |
        Create a complaint request for part of a booking.
      operationId: createComplaint
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplaintRequest'
      responses:
        '200':
          description: |
            complaint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplaintResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /complaints/{complaintId}:
    get:
      tags:
        - Complaint Management
      summary: Returns a complaint.
      description: |
        Get a complaint including its current state.
      operationId: getComplaint
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: complaintId
          in: path
          description: |
            id of the complaint
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            the requested complaint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplaintResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Complaint Management
      summary: Allows updating a complaint.
      description: |
        Update a complaint request, i.e add missing documents or change state.
      operationId: patchComplaint
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/idempotencyKey'
        - name: complaintId
          in: path
          description: |
            id of the complaint to be patched
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplaintPatchRequest'
      responses:
        '200':
          description: |
            complaint updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplaintResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /coach-deck-layouts:
    get:
      tags:
        - Master Data
      summary: Returns all coach deck layouts.
      description: |
        Retrieve the coach layout description needed for graphical reservation. The coach
        layouts can either be retrieved as a complete list or specificity for a train identified via offerId and reservationId or fareId
      operationId: getCoachDeckLayouts
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/ifNoneMatch'
        - $ref: '#/components/parameters/acceptNamespace'
      responses:
        '200':
          description: |
            coach layouts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachDeckLayoutCollectionResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
              description: |
                Resource is fairly persistent and has a medium time to live to allow short-term caching.
            ETag:
              schema:
                type: string
              description: version tag
        '303':
          $ref: '#/components/responses/SeeOtherResponse'
        '304':
          $ref: '#/components/responses/NotModifiedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /coach-deck-layouts/{layoutId}:
    get:
      tags:
        - Master Data
      summary: Returns a coach deck layout for a provided id.
      description: |
        Retrieve a coach layout description needed for graphical reservation for a given layout id.
      operationId: getCoachDeckLayout
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: layoutId
          in: path
          description: |
            id of the layout
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            coach layouts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachDeckLayoutResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /passenger-categories:
    get:
      tags:
        - Master Data
        - Passenger Categories
      summary: Returns all defined passenger categories.
      description: |
        Provider may *optionally* define passenger categories. These are usually intended for frontend (UI) usage instead of full passenger specification entry when provider works with unified list of passenger categories. For 
        precise entry, or when PassengerCategory is not defined, the full passenger specification must always be supported by the provider.
      operationId: getPassengerCategories
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassengerCategory'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'

  /reduction-card-types:
    get:
      tags:
        - Master Data
      summary: Returns all reduction card definitions.
      description: |
        returns a collection of reduction card definitions
      operationId: getReductionCardTypes
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: page
          in: query
          schema:
            type: string
      responses:
        '200':
          description: |
            Reduction cards provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReductionCardTypeCollectionResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /zones:
    get:
      tags:
        - Master Data
      summary: Returns all zone definitions.
      operationId: getZones
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: page
          in: query
          schema:
            type: string
      responses:
        '200':
          description: |
            zones provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneCollectionResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).
            Expires:
              schema:
                type: string
                description: |
                  Gives the date/time after which the response is considered stale (in 'HTTP-date' format as defined by RFC 7231).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/documents:
    post:
      tags:
        - Booking Documents
      summary: Allows adding a document to a booking.
      operationId: createDocuments
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      responses:
        '200':
          description: |
            booking documents created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/documents/{documentId}:
    get:
      tags:
        - Booking Documents
      summary: Returns a booking document.
      description: |
        booking documents found
      operationId: getDocument
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            booking document found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - Booking Documents
      summary: Delete a document from a booking.
      operationId: deleteBookingsDocumentsId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: |
            In case that a request was successful only status code 204 will be returned but no response content will be provided (aka as return type 'void' in many programming languages).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/reimbursements:
    post:
      tags:
        - Reimbursement Management
      summary: Create reimbursement for a booking.
      description: |
        Create a reimbursement request for part of a booking.
      operationId: createReimbursement
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimbursementRequest'
      responses:
        '200':
          description: |
            Reimbursement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /bookings/{bookingId}/reimbursements/{reimbursementId}:
    get:
      tags:
        - Reimbursement Management
      summary: Get reimbursement of a booking.
      description: |
        Get reimbursement including its current state.
      operationId: getReimbursement
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: reimbursementId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            reimbursement found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - Reimbursement Management
      summary: Update reimbursement of a booking.
      description: |
        Update a reimbursement request, i.e add missing documents or change state.
      operationId: updateReimbursement
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
        - name: reimbursementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimbursementPatchRequest'
      responses:
        '200':
          description: |
            reimbursement updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

        '409':
          $ref: '#/components/responses/ConflictResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /travel-accounts:
    get:
      tags:
        - Travel Account
      summary: Returns a travel account.
      operationId: getTravelAccounts
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: issuer
          in: query
          required: true
          schema:
            type: string
        - name: travelAccount
          in: query
          required: true
          schema:
            type: string
        - name: embed
          in: query
          description: |
            Default value: ALL
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TravelAccountResponseContent'
      responses:
        '200':
          description: |
            travel account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelAccountResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /availabilities/vehicle-place-map:
    post:
      tags:
        - Availabilities
      summary: Get a place map for a requested vehicle including availabilities.
      description: |
        Get a vehicle map including availabilities.
      operationId: getAvailabilitiesVehiclePlaceMap
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceAvailabilityMapRequest'
      responses:
        '200':
          description: |
            place availabilities for the requested fares and offer parts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceAvailabilityMapResponse'

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /availabilities/nearby:
    get:
      tags:
        - Availabilities
      summary: Get availabilities nearby a given place.
      description: |
        Get availabilities nearby a given place.
      operationId: getAvailabilitiesNearby
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: contextId
          in: query
          description: |
            denotes the offerId when contextType is OFFER, bookingId when contextType is BOOKING
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: contextType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ContextType'
        - name: reservationId
          in: query
          description: |
            denotes the reservationId 
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: coachNumber
          in: query
          description: |
            coach number of the referenced place
          required: true
          schema:
            type: string
        - name: placeNumber
          in: query
          description: |
            place number of the referenced place
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            place availabilities found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceAvailabilityCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
  /availabilities/preferences:
    get:
      tags:
        - Availabilities
      summary: Get availabilities for a set of preferences.
      description: |
        Get availabilities for a set of preferences.
      operationId: getAvailabilitiesPreferences
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: contextId
          in: query
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: contextType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ContextType'
        - name: reservationId
          in: query
          required: true
          schema:
            type: string
            maxLength: 32768
      responses:
        '200':
          description: |
            place availabilities found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceAvailabilityCollectionResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /availabilities/on-demand-services:
    post:
      tags:
        - Availabilities
        - On-Demand Services
      summary: Get availabilities of an on-demand service.
      description: |
        Get availabilities of an on-demand services.
      operationId: getAvailabilitiesContinuousServices
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'        
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - name: contextId
          in: query
          required: true
          schema:
            type: string
            maxLength: 32768
        - name: contextType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ContextType'
        - name: reservationId
          in: query
          required: true
          schema:
            type: string
            maxLength: 32768
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousServiceAvailabilityScope'
      responses:
        '200':
          description: |
            pick up places
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinuousServicesAvailabilityResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /products:
    get:
      tags:
        - Master Data
        - Product
      summary: Returns all products.
      operationId: getProducts
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: page
          in: query
          schema:
            type: string
      responses:
        '200':
          description: |
            Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCollectionResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'
          
  /products/{productId}:
    get:
      tags:
        - Master Data
        - Product
      summary: Returns a product for the provided id.
      operationId: getProductsId
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: productId
          in: path
          description: |
            id of the product to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /product-tags:
    get:
      tags:
        - Master Data
        - Product
      summary: Returns all product tags and their grouping.
      operationId: getProductTags
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'

      responses:
        '200':
          description: |
            Product-Tags found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTagsResponse'
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: |
                  Resource is fairly persistent and has a medium time to live to allow short-term caching.
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'

  /products-search:
    post:
      tags:
        - Product
        - Search
      summary: Search for products based on search parameters.
      operationId: searchProducts
      parameters:
        - $ref: '#/components/parameters/requestor'
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/traceParent'
        - $ref: '#/components/parameters/traceState'
        - $ref: '#/components/parameters/acceptNamespace'
        - name: page
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSearchRequest'
      responses:
        '200':
          description: |
            booking search results found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSearchResponse'
          headers:
            Content-Language:
              schema:
                type: string
                description: |
                  The language of translatable strings in the response (see RFC2616-sec14.12).

        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedResponse'
        '503':
          $ref: '#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '#/components/responses/DefaultErrorResponse'


security:
  - oAuth2ClientCredentials: []

webhooks:
  events:
    post:
      description: An event has occurred
      requestBody:
        description: Information about the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationEvent'
      responses:
        "200":
          description: OK
        "400":
          description: bad input parameter
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: no place information found
        "500":
          description: internal server error
        "501":
          description: not implemented
        "503":
          description: service unavailable  

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      description: |
        See https://swagger.io/docs/specification/authentication/oauth2/
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/tbd'
          refreshUrl: 'https://refresh.url/tbd'
          scopes: {}

  parameters:
    acceptLanguage:
      name: Accept-Language
      in: header
      description: |
        Describes the set of natural languages that are preferred for localized text in the response
        to the request (see RFC9110). Supporting English (en) is a must.
      schema:
        type: string

    idempotencyKey:
      name: Idempotency-Key
      in: header
      description: |
        The HTTP Idempotency request header field can be used to carry idempotency key in order to make
        non-idempotent HTTP methods such as POST or PATCH fault-tolerant. Servers should keep the idempotency
        key for as long as the result of the underlying operation is valid. Idempotency keys should be 
        globally unique.
      schema:
        type: string
        format: uuid

    ifNoneMatch:
      name: If-None-Match
      in: header
      description: |
        The HTTP If-None-Match is used to check whether the providing system has a newer version of the requested data.
      schema:
        type: string

    requestor:
      name: Requestor
      in: header
      description: |
        The requestor header contains detailed information about who is calling the API. It can include information such as channel, organization, sales unit or workstation id and be used to configure e.g. the fare range provided to the caller. The content of the string is part of a bilateral contract by the two parties and not standardized by OSDM. It is recommend to encrypt the information transferred.
      schema:
        type: string
      required: false

    traceParent:
      name: traceparent
      in: header
      description: |
        The traceparent header describes the position of the incoming request in its trace graph in a portable,
        fixed-length format. Its design focuses on fast parsing. Every tracing tool MUST properly set
        traceparent even when it only relies on vendor-specific information in tracestate (see W3C Trace Context).
      schema:
        type: string

    traceState:
      name: tracestate
      in: header
      description: |
        The tracestate extends traceparent with vendor-specific data represented by a set of name/value pairs.
        Storing information in tracestate is optional (see W3C Trace Context).
      schema:
        type: string

    acceptNamespace:
      name: x-accept-namespace
      in: header
      description: |
        The x-accept-namespace HTTP header indicates the URN namespace that the client prefers. The provider uses content-negotiation to apply the corresponding namespace(s) where applicable.
      schema:
        type: string
        examples:
          - x_swe
          - uic
          - iata

  responses:
    SeeOtherResponse:
      description: |
        See Other (303)
      headers:
        Location:
          schema:
            type: string
          description: |
            Location (URN) of the response data
        ETag:
          schema:
            type: string
          description: |
            Version tag

    NotModifiedResponse:
      description: |
        Not Modified (304)

    BadRequestResponse:
      description: |
        Bad Request (400)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    CleanupRequestAcceptedResponse:
      description: |
        Cleanup successfully initiated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemCollection'

    ConflictResponse:
      description: |
        Conflict (409)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    DefaultErrorResponse:
      description: |
        default error response
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    ProblemsResponse:
      description: |
        Problems/warnings
      content:
        application/problem+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Problem'

    ForbiddenResponse:
      description: |
        Forbidden (403)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    FulfillmentRequestAcceptedResponse:
      description: |
        Fulfillment successfully initiated, retrieve booking to retrieve the fulfillment documents
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemCollection'

    InternalServerErrorResponse:
      description: |
        Internal Server Error (500)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    NotFoundResponse:
      description: |
        Not Found (404)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    NotImplementedResponse:
      description: |
        Not Implemented (501)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    ServiceUnavailableResponse:
      description: |
        Service Unavailable (503)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    UnauthorizedResponse:
      description: |
        Unauthorized (401)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    UnsupportedMediaTypeResponse:
      description: |
        Unsupported Media Type (415)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

  schemas:
    AbstractBookingPart:
      type: object
      additionalProperties: false
      discriminator:
        propertyName: objectType
      required:
        - objectType
        - partType
        - id
        - createdOn
        - price
        - status
        - refundable
        - exchangeable
      properties:
        objectType:
          description:
            Attribute is used as discriminator for inheritance between data
            types.
          type: string
        partType:  
          $ref: '#/components/schemas/PartType'           
        id:
          type: string
          maxLength: 32768
        summary:
          type: string
        createdOn:
          description: |
            Validity of offer towards passenger
          type: string
          format: date-time
        confirmedOn:
          type:
            - 'string'
            - 'null'
          format: date-time
        confirmedFulfillmentOptions:
          $ref: '#/components/schemas/FulfillmentOption'
        price:
          $ref: '#/components/schemas/Price'
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        summaryProductId:
          type: string
          description: |
            Id of the product representing the commercial attributes of this booking part. Although not currently
            mandatory, this attribute should in all cases be filled in order to allow matching a booking response
            to the data in the booking request
        products:
          description: |
            In offer mode, in almost all cases exactly one product is referenced. Only on some French
            trips consisting of a TGV and a TER two products need to be used.
            In fare mode, no product exists as first needs to created from the different fares.
          type: array
          items:
            $ref: '#/components/schemas/ProductLegAssociation'
        status:
          $ref: '#/components/schemas/BookingPartStatus'
        pricingStatus:
          description: payment status in post-payment scenarios
          type: string
          default: 'PRICING_FINAL'
          x-extensible-enum:
            - 'PRICING_UPCOMING': post payment scenario, no costs yet
            - 'PRICING_ONGOING': post payment scenario, costs are collected
            - 'PRICING_FINAL': pricing is final
        offerMode:
          $ref: '#/components/schemas/OfferMode'
        bookingPartCode:
          type: string
          description: |
            The unique booking code for the part in the provider system.
        passengerIds:
          description: |
            Ids of the passengers
            Providing the passengerIds is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerIds.                
          type: array
          items:
            type: string
          minItems: 1
        availableFulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
        refundable:
          $ref: '#/components/schemas/RefundType'
        exchangeable:
          $ref: '#/components/schemas/ExchangeableType'
        afterSaleConditions:
          description: |
            Fine grained specification of the after sale condition of the booking.
          type: array
          items:
            $ref: '#/components/schemas/AfterSaleCondition'
        afterSalesOverrideDetails:
          $ref: '#/components/schemas/AfterSalesOverrideDetails'
        appliedCorporateCodes:
          type: array
          items:
            $ref: '#/components/schemas/CorporateCode'
        appliedPassengerTypes:
          type: array
          items:
            $ref: '#/components/schemas/AppliedPassengerType'
        appliedPromotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'
        appliedReductions:
          type: array
          items:
            $ref: '#/components/schemas/CardReference'
        indicatedConsumption:
          $ref: '#/components/schemas/IndicatedConsumption'
        accountingRef:
          $ref: '#/components/schemas/AccountingRef'
        grantedReductionAmounts:
          $ref: '#/components/schemas/GrantedReductionAmounts'

    AccountingRef:
      description: |
        reference to accounting data in case the accounting is not provided by the API provider
      type: object
      required:
        - accountingCompany
      properties:
        accountingCompany:
          $ref: '#/components/schemas/CompanyRef'
        accountingIds:
          description: |
            ids of accounting data used to link the booking part with accounting data in the billing send by the accounting company
          type: array
          items:
            type: string

    AbstractOfferPart:
      type: object
      additionalProperties: false
      description: |
        Generic offer object that contains all common information about an offer.
      discriminator:
        propertyName: objectType
      required:
        - objectType
        - partType
        - id
        - createdOn
        - price
        - offerMode
        - refundable
        - exchangeable
        - availableFulfillmentOptions
      properties:
        objectType:
          description:
            Attribute is used as discriminator for inheritance between data
            types.
          type: string
        partType:  
          $ref: '#/components/schemas/PartType'          
        id:
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the Offer.
          type: string
        createdOn:
          type: string
          format: date-time
        price:
          $ref: '#/components/schemas/Price'
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        priceGuaranteedUntil:
          description: |
            Indicates until when the price for the given offer is guaranteed.
          type:
            - 'string'
            - 'null'
          format: date-time
        offerMode:
          $ref: '#/components/schemas/OfferMode'
        isReusable:
          description: |
            Indicates whether the offerId can be used in more than one booking.
          type:
            - 'boolean'
            - 'null'
          default: false
        passengerRefs:
          description: |
            providing the passengerRefs is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerRefs.          
          type: array
          items:
            type: string
          minItems: 1
        numericAvailability:
          description: |
            Total amount of items of this type currently available. For reservation offers, this would be the total number
            of seats available, regardless of their properties.
          type:
            - 'integer'
            - 'null'
          format: int32
        refundable:
          $ref: '#/components/schemas/RefundType'
        exchangeable:
          $ref: '#/components/schemas/ExchangeableType'
        afterSalesConditions:
          type: array
          items:
            $ref: '#/components/schemas/AfterSaleCondition'
        tripTags:
          description: |
            List of tags (and their type) that allow identifying sets of compatible offers when trying to combine multiple offers covering one single trip.
            At least one (not all) tripTags must be in common to allow combination
            If no tag is provided, there is no trip constraint on this specific offer.
          type:
            - 'array'
            - 'null'
          items:
            type: string
        returnTags:
          description: |
            List of tags (and their type) that allow identifying sets of compatible offers when booking a return trip
            involving return-specific fares. All returnTags must be present in the counterpart offer to allow combination
            If no tag is provided, there is no return constraint on this specific offer.
          type:
            - 'array'
            - 'null'
          items:
            type: string
        offerTag:
          $ref: '#/components/schemas/OfferTag'
        requestedInformation:
          $ref: '#/components/schemas/RequestedInformation'
        summaryProductId:
          type: string
          description:
            Id of the product representing the commercial attributes of this
            offer part. Although not currently mandatory, this attribute should
            in all cases be facilitate product based processing at the client
        products:
          description: |
            products must be provided in case they are referenced. Some offer parts (e.g. fares)
            do not have products assigned.
          type: array
          items:
            $ref: '#/components/schemas/ProductLegAssociation'
          minItems: 1
        availableFulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
          minItems: 1
        appliedCorporateCodes:
          type: array
          items:
            $ref: '#/components/schemas/CorporateCode'
        appliedPassengerTypes:
          type: array
          items:
            $ref: '#/components/schemas/AppliedPassengerType'
        appliedPromotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'
        regionalValiditySummary:
          $ref: '#/components/schemas/RegionalValiditySummary'
        indicatedConsumption:
          $ref: '#/components/schemas/IndicatedConsumption'
        grantedReductionAmounts:
          $ref: '#/components/schemas/GrantedReductionAmounts'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    AbstractTravelAccount:
      type: object
      additionalProperties: false
      discriminator:
        propertyName: objectType
      required:
        - objectType
        - issuer
        - validFrom
        - validUntil
        - number
      properties:
        objectType:
          description:
            Attribute is used as discriminator for inheritance between data
            types.
          type: string
        holder:
          $ref: '#/components/schemas/PersonDetail'
        issuer:
          $ref: '#/components/schemas/CompanyRef'
        validFrom:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
        number:
          type: string

    AbstractTravelAccountUnit:
      type: object
      additionalProperties: false
      discriminator:
        propertyName: objectType
      required:
        - objectType
      properties:
        objectType:
          description:
            Attribute is used as discriminator for inheritance between data
            types.
          type: string

    AccommodationSubType:
      type: string
      description: |
        Accommodation sub type definition out of the 
        [Accommodation Sub Type Code List](https://osdm.io/spec/catalog-of-code-lists/#PlaceProperty)
        Listed values here are examples.
      default: 'ANY_SEAT'
      x-extensible-enum:
        - 'ANY_SEAT'
        - 'BISTRO'
        - 'BICYCLE'
        - 'BICYCLE_LOW'
        - 'BICYCLE_MIDDLE'
        - 'BICYCLE_HIGH'
        - 'BUSINESS'
        - 'BUSINESS_COMFORT'
        - 'CABIN8'
        - 'CAR_LARGE'
        - 'CAR_SMALL'
        - 'CARRE'
        - 'CHILDREN_AREA'
        - 'CLUB'
        - 'CLUB_2'
        - 'CLUB_4'
        - 'COMPARTMENT'
        - 'COUCHETTE_2'
        - 'COUCHETTE_4'
        - 'COUCHETTE_5'
        - 'COUCHETTE_6'
        - 'COUCHETTE_COMFORT_4'
        - 'COUCHETTE_COMFORT_5'
        - 'COUCHETTE_COMFORT_6'
        - 'COUCHETTE_PRM_2'
        - 'COUCHETTE_PRM_3'
        - 'COUCHETTE_PRM_4'
        - 'DOUBLE'
        - 'DOUBLE_WC'
        - 'DOUBLE_SWC'
        - 'DOUBLE_S'
        - 'EASY_ACCESS'
        - 'EXCELLENCE'
        - 'FAMILY'
        - 'FRONT_VIEW'
        - 'HISTORIC_COACH'
        - 'KIOSQUE'
        - 'MINI_SUITE'
        - 'MOTOR_CYCLE'
        - 'MOTOR_CYCLE_SC'
        - 'NEAR_ANIMALS'
        - 'NEAR_ASSISTANT_DOG_AREA'
        - 'NEAR_DINING'
        - 'NEAR_PLAY_AREA'
        - 'NEAR_BICYCLE_AREA'
        - 'NEAR_WHEELCHAIR'
        - 'OPEN_SPACE'
        - 'PANORAMA'
        - 'PRAM'
        - 'PRAM_WITH_SEAT'
        - 'PREMIUM'
        - 'RESTAURANT'
        - 'SALON'
        - 'SILENCE'
        - 'SINGLE'
        - 'SINGLE_WC'
        - 'SINGLE_SWC'
        - 'SLEEPERETTE'
        - 'SOLO'
        - 'SOLO_COM'
        - 'SPECIAL_SLEEPER'
        - 'TANDEM'
        - 'TOURIST_SLEEPER_2'
        - 'TOURIST_SLEEPER_3'
        - 'TOURIST_SLEEPER_3_WC'
        - 'TOURIST_SLEEPER_3_SWC'
        - 'TOURIST_SLEEPER_4'
        - 'WHEELCHAIR'
        - 'WHEELCHAIR_AND_SEAT'
        - 'WHEELCHAIR_NO_SEAT'
        - 'WITH_ANIMALS'
        - 'WITH_SMALL_CHILDREN'
        - 'WITHOUT_ANIMALS'

    AccommodationType:
      type: string
      description: |
        Accommodation type definition out of the 
        [Accommodation Type Code List](https://osdm.io/spec/catalog-of-code-lists/#AccomodationType)
        Listed values here are examples.
      default: 'SEAT'
      x-extensible-enum:
        - 'SEAT'
        - 'COUCHETTE'
        - 'BERTH'
        - 'VEHICLE'
        - 'STORAGE'

    ActualPassengerType:
      description: |
        Actual Passenger type according to UIC passenger, i.e. passenger type list. 
        Returns the passenger type according to the underlying fare system. 
        E.g. a passenger of type PERSON is categorized as a ADULT or YOUTH.
        Values from the [Passenger Type Code List](https://osdm.io/spec/catalog-of-code-lists/#PassengerType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'YOUNG_CHILD'
        - 'CHILD'
        - 'YOUTH'
        - 'ADULT'
        - 'SENIOR'
        - 'FAMILY_CHILD'
        - 'ACCOMP_PRM'
        - 'PRM_CHILD'
        - 'WHEELCHAIR'
        - 'PERSON'
        - 'PRM'
        - 'DOG'
        - 'PET'
        - 'LUGGAGE'
        - 'PRM'
        - 'PRM_CHILD'
        - 'BICYCLE'
        - 'PRAM'
        - 'ACCOMP_DOG'
        - 'ACCOMP_PRM'
        - 'CAR'
        - 'MOTOCYCLE'
        - 'TRAILER'
      default: 'PERSON'

    AdditionalOfferCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'

    Address:
      description: |
        A descriptive data associated with a place that can be used to describe the unique geographical context of a
        place for the purposes of identifying it. may be refined as either a road address, a postal address or both.
        Provided by OJP.
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          additionalProperties: false
          properties:
            name:
              description: |
                Name or description of address for use in passenger information.
              type:
                - 'string'
                - 'null'
              examples:
                - Oude Trambaan 7, 2265CA Leidschendam, Nederland
            code:
              description: |
                id of the address
              type:
                - 'string'
                - 'null'
              examples:
                - NL:1916200000022621
            countryName:
              description: |
                Country of the address.
              type:
                - 'string'
                - 'null'
              examples:
                - The Netherlands
            countryCode:
              $ref: '#/components/schemas/CountryCode'
            postCode:
              description: |
                Postal code of the address.
              type:
                - 'string'
                - 'null'
              examples:
                - 2265CA
            city:
              description: |
                City name
              type:
                - 'string'
                - 'null'
              examples:
                - Leidschendam
            topographicPlaceName:
              description: |
                TopographicPlace name of the address. If set it should at least contain the city name.
              type:
                - 'string'
                - 'null'
              examples:
                - Leidschendam
            street:
              description: |
                Street name of the address. Can also contain the house number.
              type:
                - 'string'
                - 'null'
              examples:
                - Oude Trambaan
            houseNumber:
              description: |
                House number of the address. House number can either be in this separate field, or can be
                contained in the street field.
              type:
                - 'string'
                - 'null'
              examples:
                - 7
            ref:
              $ref: '#/components/schemas/AddressRef'

    AddressRef:
      description: |
        Reference to an Address.
      allOf:
        - $ref: '#/components/schemas/PlaceRef'
        - type: object
          additionalProperties: false
          required:
            - addressRef
          properties:
            addressRef:
              type: string

    PostalAddress:
      type: object
      properties:
        countryName:
          description: |
            Country of the address.
          type:
            - 'string'
            - 'null'
          examples:
            - The Netherlands
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        postCode:
          description: |
            Postal code of the address.
          type:
            - 'string'
            - 'null'
          examples:
            - 2265CA
        city:
          description: |
            City name
          type:
            - 'string'
            - 'null'
          examples:
            - Leidschendam
        street:
          description: |
            Street name of the address. Can also contain the house number.
          type:
            - 'string'
            - 'null'
          examples:
            - Oude Trambaan
        houseNumber:
          description: |
            House number of the address. House number can either be in this separate field, or can be
            contained in the street field.
          type:
            - 'string'
            - 'null'
          examples:
            - 7

    Admission:
      description: |
        An admission represents a travel right, or the entitlement to travel onboard a train between
        the given origin and destination, following the given route. It does not include a seat reservation.
      allOf:
        - $ref: '#/components/schemas/AbstractBookingPart'
        - type: object
          additionalProperties: false
          properties:
            validFrom:
              description: |
                 Validity of Booking Part for travel            
              type: string
              format: date-time
            validUntil:
              description: |
                 Validity of Booking Part for travel
              type:
                - 'string'
                - 'null'
              format: date-time          
            regionalValidity:
              $ref: '#/components/schemas/RegionalValidity'
            feeRefs:
              type: array
              items:
                $ref: '#/components/schemas/BookingPartReference'
            reservationRefs:
              type: array
              items:
                $ref: '#/components/schemas/BookingPartReference'
            ancillaryRefs:
              type: array
              items:
                $ref: '#/components/schemas/BookingPartReference'
            regulatoryConditions:
              type: array
              items:
                $ref: '#/components/schemas/RegulatoryCondition'

    AdmissionOfferPart:
      description: |
        An admission represents a travel right, or the entitlement to travel onboard a train between
        the given origin and destination, following the given route. It does not include a seat reservation.
      allOf:
        - $ref: '#/components/schemas/AbstractOfferPart'
        - type: object
          additionalProperties: false
          required:
            - validFrom
          properties:
            validFrom:
              description: |
                 Validity of Booking Part for travel            
              type: string
              format: date-time
            validUntil:
              description: |
                 Validity of Booking Part for travel
              type:
                - 'string'
                - 'null'
              format: date-time  
            regionalValiditySummary:
              $ref: '#/components/schemas/RegionalValiditySummary'
            regionalValidity:
              $ref: '#/components/schemas/RegionalValidity'
            reservations:
              type: array
              items:
                $ref: '#/components/schemas/ReservationRelation'
            ancillaries:
              type: array
              items:
                $ref: '#/components/schemas/AncillaryRelation'
            feeRefs:
              type: array
              items:
                $ref: '#/components/schemas/OfferPartReference'
            regulatoryConditions:
              type: array
              items:
                $ref: '#/components/schemas/RegulatoryCondition'
            throughTicketTags:
              type: array
              items:
                $ref: '#/components/schemas/ThroughTicketTag'

    AfterSaleCondition:
      type: object
      additionalProperties: false
      description: |
        After sale amounts for a given offer.
      properties:
        condition:
          $ref: '#/components/schemas/AfterSaleConditionType'
        validFrom:
          type:
            - 'string'
            - 'null'
          format: date-time
        validUntil:
          type:
            - 'string'
            - 'null'
          format: date-time
        afterSaleFee:
          $ref: '#/components/schemas/Price'
        reimbursementMethod:
          $ref: '#/components/schemas/ReimbursementMethod'

    AfterSaleConditionType:
      type: string
      x-extensible-enum:
        - 'PLACE_CHANGE'
        - 'EXCHANGE'
        - 'REFUND'

    AfterSalesConditionsLink:
      type: object
      additionalProperties: false
      required:
        - conditions
      properties:
        conditions:
          description: |
            Structured description of the after-sales conditions.
          type: array
          items:
            $ref: '#/components/schemas/AfterSaleCondition'
          minItems: 1
        isSupportingIndividualContracts:
          description: |
            Indicates that the after sales of this fare can be treated independently per person.
          type:
            - 'boolean'
            - 'null'
          default: false

    AfterSalesOverrideDetails:
      description: |
        If initial after sales conditions have been overwritten this object provides details on the original
        conditions and an explanation text for the customer
      type: object
      properties:
        initialAftersalesConditions:
          type: array
          items:
            $ref: '#/components/schemas/AfterSaleCondition'
        overrideDescription:
          description:
            Description for the change of conditions for the customer.
          type: string
        validFrom:
          type:
            - 'string'
            - 'null'
          format: date-time
        validUntil:
          type:
            - 'string'
            - 'null'
          format: date-time
        initialExchangeableType:
          $ref: '#/components/schemas/ExchangeableType'
        initialRefundType:
          $ref: '#/components/schemas/RefundType'

    Alight:
      type: object
      additionalProperties: false
      description: |
        Describes the situation at a stop or station at which the passenger alights from a Leg
        of a trip including time-related information. Provided by OJP.
      required:
        - stopPlaceRef
        - stopPlaceName
        - serviceArrival
      properties:
        stopPlaceRef:
          $ref: '#/components/schemas/StopPlaceRef'
        stopPlaceName:
          type: string
          examples:
            - Luzern
        plannedStopPointName:
          description: |
            Name of the bay/quay/terminal where to board/alight from the vehicle. According to
            planned timetable.
          type:
            - 'string'
            - 'null'
          examples:
            - 3
        estimatedStopPointName:
          description: |
            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.
          type:
            - 'string'
            - 'null'
          examples:
            - 8
        serviceArrival:
          $ref: '#/components/schemas/ServiceTime'
        status:
          $ref: '#/components/schemas/StopCallStatus'

    AlightSpecification:
      type: object
      additionalProperties: false
      description: |
        Minimal alight specification
      required:
        - stopPlaceRef
        - serviceArrival
      properties:
        stopPlaceRef:
          $ref: '#/components/schemas/StopPlaceRef'
        replacedPlaceRef:
          description: reference to the original place in case of a replacement (e.g. bus stop of a replacement bus for a train)
          $ref: '#/components/schemas/StopPlaceRef'             
        serviceArrival:
          $ref: '#/components/schemas/ServiceTime'

    Ancillary:
      description: |
        An ancillary is an additional service which may be linked to admissions in a single or a separate offer and enhance their value for the customer. Examples of Ancillary Services include on-board meals, special assistance, Wi-Fi, bike space.
      allOf:
        - $ref: '#/components/schemas/AbstractBookingPart'
        - type: object
          additionalProperties: false
          properties:
            validFrom:
              description: Validity of Booking Part for travel            
              type: string
              format: date-time
            validUntil:
              description: Validity of Booking Part for travel
              type:
                - 'string'
                - 'null'
              format: date-time            
            regionalValiditySummary:
              $ref: '#/components/schemas/RegionalValiditySummary'
            regionalValidity:
              $ref: '#/components/schemas/RegionalValidity'
            reservations:
              type: array
              items:
                $ref: '#/components/schemas/ReservationRelation'
            feeRefs:
              type: array
              items:
                $ref: '#/components/schemas/BookingPartReference'
            category:
              description: |
                Categorization of the ancillary such as 'Meal' or 'Gift'.
              type:
                - 'string'
                - 'null'
            type:
              $ref: '#/components/schemas/AncillaryType'

    AncillaryGroup:
      type: object
      additionalProperties: false
      required:
        - ancillaryRefs
      properties:
        name:
          type: string
        ancillaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/OfferPartReference'
          minItems: 1

    AncillaryOfferPart:
      description: |
        An ancillary is an additional service which may be linked to admissions in a single or a separate offer and enhance their value for the customer. Examples of Ancillary Services include on-board meals, special assistance, Wi-Fi, bike space.
      allOf:
        - $ref: '#/components/schemas/AbstractOfferPart'
        - type: object
          additionalProperties: false
          required:
            - type
          properties:
            validFrom:
              description: |
                 Validity of Booking Part for travel            
              type: string
              format: date-time
            validUntil:
              description: |
                 Validity of Booking Part for travel
              type:
                - 'string'
                - 'null'
              format: date-time            
            regionalValiditySummary:
              $ref: '#/components/schemas/RegionalValiditySummary'
            regionalValidity:
              $ref: '#/components/schemas/RegionalValidity'
            reservations:
              type: array
              items:
                $ref: '#/components/schemas/ReservationRelation'
            feeRefs:
              type: array
              items:
                $ref: '#/components/schemas/OfferPartReference'
            category:
              description: |
                Categorization of the ancillary such as 'Meal' or 'Gift'.
              type:
                - 'string'
                - 'null'
            type:
              $ref: '#/components/schemas/AncillaryType'
            subType:
              $ref: '#/components/schemas/AncillarySubType'

    AncillaryRelation:
      type: object
      additionalProperties: false
      required:
        - minGroupItemsToBeBooked
        - ancillaryGroup
      properties:
        minGroupItemsToBeBooked:
          type: integer
          format: int32
        maxGroupItemsToBeBooked:
          type: integer
          format: int32
        ancillaryGroup:
          $ref: '#/components/schemas/AncillaryGroup'

    AncillarySelection:
      type: object
      additionalProperties: false
      description: |
        Is some cases one out of a set of ancillary offerparts must be booked.
      required:
        - ancillaryId
      properties:
        ancillaryId:
          type: string
          maxLength: 32768
        passengerRefs:
          description: |
            providing the passengerRefs is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerRefs.              
          type: array
          items:
            type: string
          minItems: 1

    AncillaryType:
      description: |
        Values from the [Ancillary Category Code List](https://osdm.io/spec/catalog-of-code-lists/#AncillaryCategory)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'PAYMENT_VOUCHER'
        - 'PRODUCT_ACCESS'
        - 'MERCHANDISE_PRODUCT'
        - 'LUGGAGE'
        - 'LUGGAGE_TRANSFER'
        - 'ON_BOARD_SERVICE'
        - 'STATION_SERVICE'
        - 'FOOD_ON_BOARD'
        - 'DRINKS_ON_BOARD'
        - 'WIFI'
        - 'PARKING'

    AncillarySubType:
      description: |
        Values from the [Ancillary Sub Type List](https://osdm.io/spec/catalog-of-code-lists/#AncillarySubTypes)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'LUNCH'
        - 'DINNER'
        - 'WIFI'
        - 'MUSICAL_INSTRUMENT'

    AnonymousPassengerSpecification:
      type: object
      additionalProperties: false
      description: |
        Minimal specification of a passenger to request offers without any GDPR relevant attributes such as name or address.

        Either the date of birth or the age at the time of travel needs to be set. We recommend to use date of birth as it is more stable than age.
      required:
        - externalRef
        - type
      properties:
        externalRef:
          description: |
            A stable reference to a passenger from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.
          type: string
        dateOfBirth:
          description: |
            Date of birth of the passenger. Only needed for passengers of type persons, family child, PRM
            and wheelchair.
          type:
            - 'string'
            - 'null'
          format: date
        age:
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
        type:
          $ref: '#/components/schemas/PassengerType'
        prmNeeds:
          type: array
          items:
            $ref: '#/components/schemas/PRMNeedType'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CardReference'
        gender:
          $ref: '#/components/schemas/Gender'
        residency:
          $ref: '#/components/schemas/CountryCode'

    ApplicabilityType:
      type: string
      x-extensible-enum:
        - 'BOOKING'
        - 'TRIP'
        - 'OFFERPART'
        - 'SEAT_SELECTION': (https://osdm.io/spec/processes/#SeatSelectionFees)

    AppliedFee:
      description: |
        Fees are used to represent additional costs for services or products. In contrast to other offer parts in OSDM, the customer is not free whether to choose a fee or not: fees are generated and applied to other services or products by the providing system.   
      allOf:
        - $ref: '#/components/schemas/AbstractBookingPart'
        - type: object
          additionalProperties: false
          properties:
            applicability:
              $ref: '#/components/schemas/ApplicabilityType'
            transactionContext:
              $ref: '#/components/schemas/TransactionContextType'


    TransactionContextType:
      type: string
      x-extensible-enum:
        - 'SALES'
        - 'AFTER_SALES'

    ApiNextVersion:
      type: object
      description: |
        Next version of the API.
        The next version is used to indicate the next version of the API that is being used.
        The version is in semantic versioning format, e.g. "4.0.0" and it is a version released at osdm.io.
      properties:
        version:
          type: string
          description: |
            Version of the next API.
          examples: 
            - '4.0.0'
        availableAt:
          type: string
          format: url
          examples: 
            - 'https://api.next.example.com'
        availableFrom:
          type:
            - 'string'
            - 'null'
          format: date-time
          description: |
            Date from which the next version is available.
          examples: 
            - "2025-01-01T00:00:00+01:00"

    ApiVersion:
      type: object
      description: |
        Version of the API.
        The version is used to indicate the version of the API that is being used.
        The version is in semantic versioning format, e.g. "3.0.0" and it is a version released at osdm.io.
      required:
        - version
      properties:
        version:
          type: string
          description: |
            Version of the API
          examples: 
            - '3.0.0'
        sunset:
          type:
            - 'string'
            - 'null'
          format: date-time
          description: |
            Date after which the API version will no longer be available.
          examples: 
            - "2024-12-31T23:59:59+01:00"
        nextVersion:
          anyOf:
            - $ref: '#/components/schemas/ApiNextVersion'
            - type: 'null'

    AppliedPassengerType:
      type: object
      additionalProperties: false
      description: |
        Applied passenger types and reductions per passenger, per offer part and per part of the trip.
      required:
        - passengerRef
        - type
        - description
      properties:
        passengerRef:
          description: |
            id of the passenger.  
            In the offer flow the id refers to the externalRef as the passenger id is created at booking time only.
          type: string
        type:
          $ref: '#/components/schemas/ActualPassengerType'
        description:
          description: |
            Clear text representation of the actual passenger type, suitable to be presented to a client.
          type: string
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        appliedReductions:
          type: array
          items:
            $ref: '#/components/schemas/CardReference'

    AttachableItemType:
      description: |
        Indication of items attached to the car
      type: string
      x-extensible-enum:
        - 'ROOF_RACK'
        - 'BICYCLE_STAND'

    AvailabilityScope:
      type: object
      description:
        fare or offerParts which should be covered by the available seats
      required:
        - reservationIds
      properties:
        singleSelectionMapsRequired:
          description:
            if true the place map must include places for a single reservation
            or fare only
          type: boolean
          default: true
        reservationIds:
          type: array
          minItems: 1
          items:
            description: reference to the reservation offer part or reservation booking part
            type: string


    AvailabilityStatus:
      description: |
        status of the place or coach
      type: string
      enum:
        - 'ALLOCATED'
        - 'FREE'
        - 'RESTRICTED'
      default: 'FREE'

    AvailablePlace:
      type: object
      additionalProperties: false
      description: |
        Describes the details of the available places.
      required:
        - accommodationType
        - accommodationSubType
        - tripLegCoverage
      properties:
        accommodationType:
          $ref: '#/components/schemas/AccommodationType'
        accommodationSubType:
          $ref: '#/components/schemas/AccommodationSubType'
        placeProperties:
          description: |
            Selectable place properties for the offer. For AccommodationSubType=ANY_SEAT all available and bookable properties need to be returned to give a sales tool a list of possible selections.
          type:
            - 'array'
            - 'null'
          items:
            $ref: '#/components/schemas/PlaceProperty'
        numericAvailability:
          description: |
            For the AccommodationSubType=ANY_SEAT the total amount of places for the combination of AccommodationType and AccommodationSubType needs to returned.
          type:
            - 'integer'
            - 'null'
          format: int32
        tripLegCoverage:
          $ref: '#/components/schemas/TripLegCoverage'

    AvailablePlacePreferences:
      type: object
      additionalProperties: false
      properties:
        preferenceGroups:
          description: |
            possible preferences to be requested in reservation without changing the fare
          type: array
          items:
            $ref: '#/components/schemas/PlacePreferenceGroup'
        graphicalReservation:
          description: |
            graphical reservation is supported, interface type 'WITH_FEE', 'NO', (https://osdm.io/spec/processes/#SeatSelectionFees)
          type:
            - 'string'
            - 'null'
          x-extensible-enum:
            - 'WITHOUT_FEE':
                No additional fees will be added during seat selection. All fees
                are already linked with the reservation offer or booking
            - 'WITH_FEE':
                Additional selection fees might be applied in the seat
                selection. In case selection fees are applied this must be
                indicated here
                (https://osdm.io/spec/processes/#SeatSelectionFees)
            - 'NO': No graphical reservation supported

    BackOfficeStatus:
      description: |
        Status of the request sent to the back office.
        Valid Values:
        - 'INITIATED'
        - 'EVALUATING'
        - 'DECIDED'
        - 'SETTLED'
        - 'INFORMATION_MISSING'
        - 'REQUEST_UPDATED': Additional information, i.e. documents have been provided which should trigger reevaluation.
      type: string
      enum:
        - 'INITIATED'
        - 'EVALUATING'
        - 'DECIDED'
        - 'SETTLED'
        - 'INFORMATION_MISSING'
        - 'REQUEST_UPDATED'

    BankAccountReference:
      type: object
      additionalProperties: false
      description: |
        bank account
      properties:
        iban:
          description: |
            IBAN to be used in Europe
          type:
            - 'string'
            - 'null'
          pattern: '[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'
        accountId:
          description: |
            bank account id to be used outside of EU
          type:
            - 'string'
            - 'null'
        bankIdCode:
          $ref: '#/components/schemas/BankIdCode'
        bankId:
          type:
            - 'string'
            - 'null'
        ownerName:
          type:
            - 'string'
            - 'null'
          examples:
            - John Doe

    BankIdCode:
      type: string
      x-extensible-enum:
        - 'SWIFT'

    BarCodeType:
      description: |
        Item according to IRS 90918-9: FCB, TLB, SSB
        Values from the [Barcode Type Code List](https://osdm.io/spec/catalog-of-code-lists/#BarcodeType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'FCB'
        - 'TLB'
        - 'SSB'
        - 'DOSIPAS'

    BaseTripPolicyFilter:
      type: object
      additionalProperties: false
      description: |
        Policies that control the trip search behavior for both public and individual transport.
        Provided by OJP.
      properties:
        noSingleStep:
          description: |
            The user is not able to climb one step, i.e. wheel chair.
          type:
            - 'boolean'
            - 'null'
          default: false
        noSight:
          description: |
            The user is not able to see.
          type:
            - 'boolean'
            - 'null'
          default: false

    Board:
      type: object
      additionalProperties: false
      description: |
        Describes the the situation at a stop or station at which the passenger boards a Leg
        of a trip including time-related information. Provided by OJP.
      required:
        - stopPlaceRef
        - stopPlaceName
        - serviceDeparture
      properties:
        stopPlaceRef:
          $ref: '#/components/schemas/StopPlaceRef'
        stopPlaceName:
          type: string
          examples:
            - Luzern
        plannedStopPointName:
          description: |
            Name of the bay/quay/terminal where to board/alight from the vehicle. According to
            planned timetable.
          type:
            - 'string'
            - 'null'
          examples:
            - 3
        estimatedStopPointName:
          description: |
            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.
          type:
            - 'string'
            - 'null'
          examples:
            - 8
        serviceDeparture:
          $ref: '#/components/schemas/ServiceTime'
        status:
          $ref: '#/components/schemas/StopCallStatus'

    BoardSpecification:
      type: object
      additionalProperties: false
      description: |
        Minimal board specification.
      required:
        - stopPlaceRef
        - serviceDeparture
      properties:
        stopPlaceRef:
          $ref: '#/components/schemas/StopPlaceRef'
        replacedPlaceRef:
          description: reference to the original place in case of a replacement (e.g. bus stop of a replacement bus for a train)
          $ref: '#/components/schemas/StopPlaceRef'             
        serviceDeparture:
          $ref: '#/components/schemas/ServiceTime'

    BookedOffer:
      type: object
      additionalProperties: false
      description: |
        The attribute 'offerSummary' is meaningful at trip-offer-collection response time only.
        The offerSummary must be provided for product based offers. It is not needed for fares.
      required:
        - offerId
      properties:
        offerId:
          type: string
          maxLength: 32768
          description:
            Note that the offerId returned does not necessarily match the
            offerId given in the Booking Request.
        externalRef:
          description: |
            A stable reference to the id of the booked offer in the caller's system. When received in input of a request, it must be persisted and echoed back in the response.
          type: string
        summary:
          description: |
            A human-readable description of the booked offer.
          type:
            - 'string'
            - 'null'
        admissions:
          type: array
          items:
            $ref: '#/components/schemas/Admission'
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        ancillaries:
          type: array
          items:
            $ref: '#/components/schemas/Ancillary'
        continuousServices:
          type: array
          items:
            $ref: '#/components/schemas/ContinuousServiceBookingPart'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/AppliedFee'
        fares:
          type: array
          items:
            $ref: '#/components/schemas/FareBookingPart'
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        appliedThroughTicketTags:
          type: array
          items:
            $ref: '#/components/schemas/ThroughTicketTag'
        products:
          description: |
            products must be provided in case they are referenced in booking or offer parts. Some offer parts (e.g. fares)
            do not have products assigned.        
          type: array
          items:
            $ref: '#/components/schemas/Product'
          minItems: 1

    BookedOfferAncillaryRequest:
      type: object
      additionalProperties: false
      required:
        - offerId
        - ancillaryOfferId
      properties:
        offerId:
          type: string
          maxLength: 32768
        ancillaryOfferId:
          type: string
          maxLength: 32768
        passengerRefs:
          description: |
            providing the passengerRefs is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerRefs.              
          type: array
          items:
            type: string
          minItems: 1
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'

    BookedOfferAncillaryResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        bookedOffers:
          type: array
          items:
            $ref: '#/components/schemas/BookedOffer'

    BookedOfferRequest:
      type: object
      description:
        adding an offer to a booking as pre-booked. additional passengers that
        were not already in the booking are added in additional passengers
        existing passengers are referenced in passengerRef.
      additionalProperties: false
      required:
        - offers
      properties:
        offers:
          type: array
          items:
            $ref: '#/components/schemas/OfferSelection'
          minItems: 1
        additionalPassengerSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/PassengerSpecification'
        promotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'

    BookedOfferReservationRequest:
      type: object
      additionalProperties: false
      required:
        - offerId
        - reservationOfferId
        - placeSelections
      properties:
        offerId:
          type: string
          maxLength: 32768
        reservationOfferId:
          type: string
          maxLength: 32768
        passengerRefs:
          description: |
            providing the passengerRefs is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerRefs.              
          type: array
          items:
            type: string
          minItems: 1
        placeSelections:
          type: array
          items:
            $ref: '#/components/schemas/PlaceSelection'
          minItems: 1
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'

    BookedOfferReservationResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        bookedOffers:
          type: array
          items:
            $ref: '#/components/schemas/BookedOffer'

    BookedOfferResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        bookedOfferIds:
          type: array
          items:
            type: string
            maxLength: 32768
          description: |
            IDs of offers booked by the request. Will be always provided, single of the booked offer may not be provided in bookedOffer attribute.

    BookedOfferSummary:
      type: object
      additionalProperties: false
      required:
        - offerId
        - summary
        - bookingPartSummaries
      properties:
        offerId:
          type: string
          maxLength: 32768
        summary:
          type: string
        bookingPartSummaries:
          type: array
          items:
            $ref: '#/components/schemas/BookingPartSummary'
          minItems: 1

    Booking:
      type: object
      additionalProperties: false
      required:
        - id
        - createdOn
        - passengers
      properties:
        id:
          type: string
        bookingCode:
          type: string
          description:
            The unique booking code in the provider system. Usually refers to an
            order number or PNR.
        externalRef:
          description: |
            The unique booking reference in the provider system. Usually refers to an order number or PNR.
          type:
            - 'string'
            - 'null'
        summary:
          description: |
            A human-readable description of the booking.
          type:
            - 'string'
            - 'null'
          examples:
            - Booking 2345 for Clemens Gantert
        createdOn:
          type: string
          format: date-time
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/Passenger'
          minItems: 1
        purchaser:
          $ref: '#/components/schemas/Purchaser'
        provisionalPrice:
          description: |
            Price of all unconfirmed pre-booked parts in the booking
          $ref: '#/components/schemas/Price'
        confirmedPrice:
          description: |
            Sum of all prices of confirmed parts in the booking minus the sum of all confirmed refund amounts.
          $ref: '#/components/schemas/Price'
        bookedOffers:
          type: array
          items:
            $ref: '#/components/schemas/BookedOffer'
        trips:
          description: |
            This trip will be included in the offer if the offer is part of the booking.
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        requestedInformation:
          $ref: '#/components/schemas/RequestedInformation'
        confirmationTimeLimit:
          description: |
            Time until the booking needs to be confirmed or put on hold. After that, the booking is no longer valid.
          type:
            - 'string'
            - 'null'
          format: date-time
        fulfillmentType:
          $ref: '#/components/schemas/FulfillmentType'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        fulfillmentStatus:
          type: string
          x-extensible-enum:
            - 'PENDING'  : some fulfillmentids are not jet there
            - 'CREATED'  : all fulfillmentids are created
            - 'COMPLETE' : no more documents are to be expected            
        issuedVouchers:
          type: array
          items:
            $ref: '#/components/schemas/VoucherInformation'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
        refundOffers:
          description: |
            Refund offers are created with the details of the to-be-confirmed refund operation.
            One refund offer can then be confirmed, which turns it into a confirmedRefund. 
            Refund offers in state PROPOSED might not be available in the Booking but only 
            via the get endpoint.
          type: array
          items:
            $ref: '#/components/schemas/RefundOffer'
        confirmedRefunds:
          description: |
            Confirmed refund offers must be listed here.
          type: array
          items:
            $ref: '#/components/schemas/ConfirmedRefund'
        releaseOffers:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseOffer'
        confirmedReleases:
          type: array
          items:
            $ref: '#/components/schemas/ConfirmedRelease'
        cancelFulfillmentsOffers:
          type: array
          items:
            $ref: '#/components/schemas/CancelFulfillmentsOffer'
        exchangeOperations:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeOperation'
        onHoldOffer:
          $ref: '#/components/schemas/OnHoldOffer'
        relatedBookingIds:
          description: |
            If this booking has been split, this attribute references the newly created bookingIds.
          type:
            - 'array'
            - 'null'
          items:
            type: string
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    BookingCleanupRequest:
      type: object
      additionalProperties: false
      description: |
        Request to cleanup a complete booking.
        Unconfirmed items will be deleted, any confirmed items will be refunded. There is no confirmation required.
      

    BookingHistoryResponse:
      type: object
      additionalProperties: false
      required:
        - events
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
          minItems: 1

    BookingPartReference:
      type: object
      additionalProperties: false
      description: |
        References all the booking part elements in an uniform format.
        In its part, a BookingPartReference can refer to reservation, admission, ancillary or fee.
      required:
        - id
      properties:
        id:
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the booking part reference.
          type:
            - 'string'
            - 'null'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    BookingPartStatus:
      type: string
      enum:
        - 'PREBOOKED'
        - 'ON_HOLD'
        - 'CONFIRMED'
        - 'FULFILLED'
        - 'CANCELLED'
        - 'RELEASED'
        - 'REFUNDED'
        - 'EXCHANGE_ONGOING'
        - 'EXCHANGED'
        - 'ERROR'

    FeeStatus:
      type: string
      enum:
        - 'PREBOOKED'
        - 'CONFIRMED'
        - 'REFUNDED'

    BookingPartSummary:
      type: object
      additionalProperties: false
      required:
        - id
        - summary
        - productSummaries
        - status
        - type
      properties:
        id:
          type: string
          maxLength: 32768
        summary:
          type: string
        productSummaries:
          type: array
          items:
            $ref: '#/components/schemas/ProductSummary'
          minItems: 1
        status:
          $ref: '#/components/schemas/BookingPartStatus'
        type:
          $ref: '#/components/schemas/BookingPartType'

    BookingPartType:
      type: string
      enum:
        - 'ADMISSION'
        - 'RESERVATION'
        - 'ANCILLARY'
        - 'CONTINUOUS_SERVICE'

    BookingPatchRequest:
      type: object
      additionalProperties: false
      description: |
        Allows setting the required fulfillment type, e.g. value paper
        or e-ticket and preferred fulfillment media.
        The latter is optional and relevant in some cases only.
      properties:
        externalRef:
          type:
            - 'string'
            - 'null'
          description:
            The unique booking reference in the distributor/retailer system.
            Usually refers to an order number or PNR.
        placeSelections:
          type: array
          items:
            $ref: '#/components/schemas/PlaceSelection'
        requestedFulfillmentType:
          $ref: '#/components/schemas/FulfillmentType'
        preferredFulfillmentMedia:
          $ref: '#/components/schemas/FulfillmentMediaType'
        usedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'

    BookingRequest:
      type: object
      additionalProperties: false
      required:
        - offers
        - passengerSpecifications
      properties:
        offers:
          description: |
            The list of offers that need to be provisionally booked, with possibly the reservations and ancillaries associated that should be booked as well.
          type: array
          items:
            $ref: '#/components/schemas/OfferSelection'
          minItems: 1
        passengerSpecifications:
          description: |
            If needed (cf requiredInformation) or desired, this array allows providing the required details on some or all passengers
          type: array
          items:
            $ref: '#/components/schemas/PassengerSpecification'
          minItems: 1
        purchaser:
          $ref: '#/components/schemas/PurchaserSpecification'
        promotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'
        requestedFulfillmentType:
          $ref: '#/components/schemas/FulfillmentType'
        preferredFulfillmentMedia:
          $ref: '#/components/schemas/FulfillmentMediaType'
        embed:
          description: |
            Influences whether referenced resources are returned in full or as references only.
          type: array
          items:
            $ref: '#/components/schemas/BookingResponseContent'
        externalRef:
          type:
            - 'string'
            - 'null'

    BookingResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        booking:
          $ref: '#/components/schemas/Booking'

    BookingResponseContent:
      description: |
        Influences whether referenced resources are returned in full or as references only.
      type: string
      enum:
        - 'ALL'
        - 'BOOKING'
        - 'BOOKING_PASSENGERS'
        - 'BOOKING_PURCHASER'
        - 'BOOKING_TRIPS'
        - 'BOOKING_BOOKEDOFFERS'
        - 'BOOKING_FULFILLMENTS'
        - 'BOOKING_DOCUMENTS'
        - 'BOOKING_REFUNDOFFERS'
        - 'BOOKING_RELEASEOFFERS'
        - 'BOOKING_CANCELFULFILLMENTSOFFER'
        - 'BOOKING_EXCHANGEOPERATIONS'
        - 'NONE'
      default: 'ALL'

    BookingSearchParameters:
      type: object
      additionalProperties: false
      properties:
        numberOfResults:
          type:
            - 'integer'
            - 'null'
          format: int32
          default: 10
        status:
          type: array
          items:
            $ref: '#/components/schemas/BookingPartStatus'

    BookingSearchRequest:
      type: object
      additionalProperties: false
      properties:
        origin:
          $ref: '#/components/schemas/PlaceRef'
        destination:
          $ref: '#/components/schemas/PlaceRef'
        passenger:
          $ref: '#/components/schemas/PersonSearchRequest'
        purchaser:
          $ref: '#/components/schemas/PurchaserSearchRequest'
        bookingId:
          type:
            - 'string'
            - 'null'
        bookingCode:
          description: |
            reference to the booking in the downstream distributor system
          type:
            - 'string'
            - 'null'
        externalRef:
          description: reference to the booking in the retailer system
          type:
            - 'string'
            - 'null'
        fulfillmentId:
          type:
            - 'string'
            - 'null'
        fulfillmentControlNumber:
          type:
            - 'string'
            - 'null'
        travelDateRange:
          $ref: '#/components/schemas/DateRange'
        purchaseDateRange:
          $ref: '#/components/schemas/DateRange'
        parameters:
          $ref: '#/components/schemas/BookingSearchParameters'

    BookingSearchResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        bookingSearchResults:
          type: array
          items:
            $ref: '#/components/schemas/BookingSearchResult'

    BookingSearchResult:
      type: object
      additionalProperties: false
      description: |
        Summary of the booking found by the booking search. For more information, get the booking.
      required:
        - passengers
        - id
        - bookedOfferSummaries
      properties:
        purchaser:
          $ref: '#/components/schemas/Purchaser'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/Passenger'
          minItems: 1
        tripSummaries:
          type: array
          items:
            $ref: '#/components/schemas/TripSummary'
        id:
          type: string
        bookingCode:
          type: string
          description:
            The unique booking code in the provider system. Usually refers to an
            order number or PNR.
        externalRef:
          description: |
            The unique booking reference in the provider system. Usually refers to an order number or PNR.
          type: 
            - string
            - 'null'      
        provisionalPrice:
          description: |
            price of all unconfirmed pre-booked parts in the booking
          $ref: '#/components/schemas/Price'
        confirmedPrice:
          description: |
            sum of all prices of confirmed parts in the booking minus the sum of all confirmed refund amounts.
          $ref: '#/components/schemas/Price'
        bookedOfferSummaries:
          type: array
          items:
            $ref: '#/components/schemas/BookedOfferSummary'
          minItems: 1

    BookingSplit:
      type: object
      additionalProperties: false
      description: |
        Contains the newly created booking
      required:
        - bookingId
      properties:
        bookingId:
          type: string
        passengerIds:
          description: |
            Ids of the passengers
            Providing the passengerIds is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerIds.           
          type: array
          items:
            type: string
          minItems: 1

    BookingSplitGroup:
      type: object
      additionalProperties: false
      description: |
        Group of passenger(s) that is to be split into a separate booking.
      required:
        - passengerIds
      properties:
        passengerIds:
          type: array
          items:
            type: string
          minItems: 1

    BookingSplitRequest:
      type: object
      additionalProperties: false
      required:
        - groups
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/BookingSplitGroup'
          minItems: 1

    BookingSplitResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        bookingSplitResult:
          $ref: '#/components/schemas/BookingSplitResult'

    BookingSplitResult:
      type: object
      additionalProperties: false
      required:
        - bookingSplit
      properties:
        bookingSplit:
          type: array
          items:
            $ref: '#/components/schemas/BookingSplit'
          minItems: 1

    BorderRadius:
      type: object
      additionalProperties: false
      description: |
        Rounds the corners of an element's border edge.
      properties:
        topLeft:
          type: 
            - integer
            - 'null'
          format: int32
        topRight:
          type: 
            - integer
            - 'null'
          format: int32
        bottomRight:
          type: 
            - integer
            - 'null'
          format: int32
        bottomLeft:
          type: 
            - integer
            - 'null'
          format: int32

    Calendar:
      type: object
      additionalProperties: false
      properties:
        from:
          type:
            - 'string'
            - 'null'
          format: date-time
        until:
          type:
            - 'string'
            - 'null'
          format: date-time
        dates:
          description: |
            dates included in the calendar. In case no dates are provided the range is assumed to be valid
          type:
            - 'array'
            - 'null'
          items:
            type: string
            format: date
        utcOffset:
          description: |
            offset to UTC in minutes (number of minutes to be added to get UTC dates)
          type:
            - 'integer'
            - 'null'
          format: int32

    CancelFulfillmentsOffer:
      type: object
      additionalProperties: false
      required:
        - id
        - createdOn
        - validFrom
        - validUntil
        - status
        - fulfillments
      properties:
        id:
          description: |
            id of the cancel fulfillments offer
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the refund offer.
          type:
            - 'string'
            - 'null'
        createdOn:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
        validUntil:
          description: |
            time until the offer can be used
          type: string
          format: date-time
        confirmedOn:
          type:
            - 'string'
            - 'null'
          format: date-time
        status:
          $ref: '#/components/schemas/CancelFulfillmentsStatus'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
          minItems: 1
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    CancelFulfillmentsOfferCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        cancelFulfillmentOffers:
          type: array
          items:
            $ref: '#/components/schemas/CancelFulfillmentsOffer'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    CancelFulfillmentsOfferPatchRequest:
      type: object
      additionalProperties: false
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/CancelFulfillmentsStatus'

    CancelFulfillmentsOfferRequest:
      type: object
      additionalProperties: false
      properties:
        fulfillmentIds:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentId'

    CancelFulfillmentsOfferResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        cancelFulfillmentsOffer:
          $ref: '#/components/schemas/CancelFulfillmentsOffer'

    CancelFulfillmentsStatus:
      type: string
      enum:
        - 'PROPOSED'
        - 'CONFIRMED'

    Car:
      type: object
      additionalProperties: false
      required:
        - weight
        - length
        - width
        - height
        - model
      properties:
        weight:
          type: integer
          format: int32
          minimum: 0
        length:
          type: integer
          format: int32
          minimum: 0
        width:
          type: integer
          format: int32
          minimum: 0
        height:
          type: integer
          format: int32
          minimum: 0
        model:
          description: |
            Free text description of the model (e.g. BMW X5)
          type: string
        attachedItems:
          description: |
            Indication of items attached to the car
          type: array
          items:
            $ref: '#/components/schemas/AttachableItemType'
        licensePlate:
          description: |
            The license plate is a personal data item and must not be provided in an offer request.
            It must be patched into the offer after the customer accepted the offer for booking.
          type:
            - 'string'
            - 'null'

    CardReference:
      type: object
      additionalProperties: false
      description: |
        Number and issuer are needed to identify a travel account, the code identifies a reduction card.
      required:
        - type
      properties:
        code:
          description: |
            Code of the card type according to issuer. E.g. BahnCard50.
            Predefined values from the [Reduction Card Code List](https://osdm.io/spec/catalog-of-code-lists/#ReductionCard)
          type:
            - 'string'
            - 'null'
        number:
          description: |
            Number identifying the travel account, need issuer to be unique.
          type:
            - 'string'
            - 'null'
        issuer:
          $ref: '#/components/schemas/CompanyRef'
        type:
          $ref: '#/components/schemas/TravelAccountType'

    CardTypeReference:
      type: object
      additionalProperties: false
      required:
        - code
      properties:
        issuer:
          $ref: '#/components/schemas/CompanyRef'
        code:
          type: string
        cardName:
          type:
            - 'string'
            - 'null'

    CarrierConstraint:
      type: object
      additionalProperties: false
      description: |
        Either excluded or included carriers can be set.
      properties:
        includedCarriers:
          type:
            - 'array'
            - 'null'
          items:
            type: string
        excludedCarriers:
          type:
            - 'array'
            - 'null'
          items:
            type: string

    CarrierFilter:
      type: object
      additionalProperties: false
      description: |
        Filter for in/exclusion of carriers. Provided by OJP.
      properties:
        exclude:
          description: |
            Whether carrier in list are to include or exclude from search.
          type:
            - 'boolean'
            - 'null'
          default: true
        carriers:
          description: |
            Reference to carrier
          type: array
          items:
            $ref: '#/components/schemas/CompanyRef'

    ClaimedJourneyDetails:
      type: object
      additionalProperties: false
      properties:
        impact:
          $ref: '#/components/schemas/ImpactType'
        finalDelay:
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - PT30M
        onReturn:
          type:
            - 'boolean'
            - 'null'
          default: false
        delayedJourney:
          type: array
          items:
            $ref: '#/components/schemas/ClaimedLeg'

    ClaimedLeg:
      type: object
      additionalProperties: false
      properties:
        trainNumber:
          type:
            - 'string'
            - 'null'
        connectionMissed:
          description: |
            connection missed due to a delay on the previous leg
          type:
            - 'boolean'
            - 'null'
        serviceDegradation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDegradation'
        departureStation:
          $ref: '#/components/schemas/Place'
        arrivalStation:
          $ref: '#/components/schemas/Place'
        plannedDepartureTime:
          type:
            - 'string'
            - 'null'
          format: date-time
        timetabledArrivalTime:
          type:
            - 'string'
            - 'null'
          format: date-time
        observedArrivalTime:
          type:
            - 'string'
            - 'null'
          format: date-time
            
    CoachAvailability:
      type: object
      additionalProperties: false
      required:
        - number
        - travelDirection
      properties:
        number:
          description: |
            Coach number
          type: string
        travelDirection:
          $ref: '#/components/schemas/TravelDirectionType'
        noPassageToNextCoach:
          description: |
            Indicates that there is no passage to the next coach.
          type: 
            - boolean
            - 'null'
          default: false
        decks:
          description: |
            The decks of a coach ordered in ascending order from the lowest to the highest deck. Optional as for some coaches (especially special/not reservable coach types) no coach layout might exist.
          type: array
          items:
            $ref: '#/components/schemas/DeckAvailability'

    CoachDeckLayout:
      type: object
      additionalProperties: false
      description: |
        A deck of a coach.
      required:
        - name
        - dimension
        - id
        - deckLevel
      properties:
        name:
          type: string
          maxLength: 255
        dimension:
          $ref: '#/components/schemas/GridDimension'
        lowFloorEntry:
          description: |
            Typically set on the lowest deck. Empty if unknown.
          type:
            -  boolean
            - 'null'
        id:
          type: string
        deckLevel:
          $ref: '#/components/schemas/CoachDeckLevel'
        placeGroups:
          description: |
            Groups places. No place groups might exist for special coach types (e.g. traction units without seats).
          type: array
          items:
            $ref: '#/components/schemas/PlaceGroup'
        graphicElements:
          type: array
          items:
            $ref: '#/components/schemas/GraphicElement'
        serviceIcons:
          type: array
          items:
            $ref: '#/components/schemas/ServiceIcon'

    CoachDeckLevel:
      type: string
      x-extensible-enum:
        - 'SINGLE_DECK'
        - 'LOWER_DECK'
        - 'MIDDLE_DECK'
        - 'UPPER_DECK'

    CoachDeckLayoutCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        coachDeckLayouts:
          type: array
          items:
            $ref: '#/components/schemas/CoachDeckLayout'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    CoachDeckLayoutResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        coachDeckLayout:
          $ref: '#/components/schemas/CoachDeckLayout'

    CombinationTag:
      type: object
      additionalProperties: false
      description: |
        Tag to indicate that some products from a provider can be sold only when in conjunction
        with product(s) from another provider using the same tag. At least one, not all,
        combinationTags must be in common to allow combination. No combinationTags indicate
        that there are no combination constraints on the product.
      required:
        - id
      properties:
        id:
          type: string
        needsToBeCombined:
          description: |
            If false it means that this product can be sold also when not in conjunction with
            a product with the same tag. This is needed to propose specific products from one
            provider that depend on public ones of another.
          type:
            - 'boolean'
            - 'null'
          default: false

    CompanyDetail:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
        registrationNumber:
          type: string
        legalPostalAddress:
          $ref: '#/components/schemas/PostalAddress'
        taxId:
          type: string

    CompanyRef:
      type: string
      description: |
        Identifies a company. For rail, a RICS company code or compatible ERA company code are used. 
        examples:
            - 'urn:uic:rics:1185:000011'

    CompartmentAvailability:
      type: object
      additionalProperties: false
      description: |
        Area within a coach deck that holds places.
      required:
        - serviceClass
        - accommodationType
        - accommodationSubType
        - places
        - isSelectable
      properties:
        serviceClass:
          $ref: '#/components/schemas/ServiceClassType'
        accommodationType:
          $ref: '#/components/schemas/AccommodationType'
        accommodationSubType:
          $ref: '#/components/schemas/AccommodationSubType'
        places:
          description: |
            Seats or bicycle hooks in a coach compartment that are covered by a requested reservation fare/offerPart/bookingPart. No place availabilities must be returned for places that are NOT covered by a requested offer.
          type: array
          items:
            $ref: '#/components/schemas/SpecificPlaceAvailability'
          minItems: 1
        isSelectable:
          description: |
            Indicates whether the compartment is selectable as a whole only.
          type: boolean
          default: false
        number:
          description: |
            Compartment number as indicated at the compartment in the coach. A compartment number must be set if the compartment is selectable as a whole only.
          type: 
            - string
            - 'null'
        status:
          $ref: '#/components/schemas/AvailabilityStatus'
        reservationRefs:
          description: |
            reservationRefs must be set if the compartment is selectable as a whole only
          type: array
          items:
            type: string
        selectionFee:
          $ref: '#/components/schemas/SelectionFee'

    CompartmentPreSelection:
      type: object
      additionalProperties: false
      description: |
        A preselected compartment
      required:
        - coach
        - compartment
      properties:
        coach:
          description: |
            Coach number
          type: string
        compartment:
          description: |
            Compartment number as indicated at the compartment in the coach.
          type: string


    ComplaintRequest:
      type: object
      additionalProperties: false
      required:
        - customerComplaint
      properties:
        customerComplaint:
          $ref: '#/components/schemas/CustomerComplaint'

    Complaint:
      type: object
      additionalProperties: false
      required:
        - id
        - status
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackOfficeStatus'
        customerComplaint:
          $ref: '#/components/schemas/CustomerComplaint'
        missingInformation:
          description: |
            indication of missing customer information
          type:
            - 'array'
            - 'null'
          items:
            type: string
            maxLength: 32768
        decision:
          $ref: '#/components/schemas/ComplaintDecision'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ComplaintChangeReason:
      description: |
        Known Values:
        - 'BANK_ACCOUNT'
        - 'SETTLED_TIME_LIMIT_EXCEEDED': A distributor settled the claim as the fare provided did not reply in due time. The compensation amount debited is provided.
        - 'PASSENGER_CHANGE'
      type: string
      x-extensible-enum:
        - 'BANK_ACCOUNT'
        - 'SETTLED_TIME_LIMIT_EXCEEDED'
        - 'PASSENGER_CHANGE'

    ComplaintDecision:
      type: object
      additionalProperties: false
      properties:
        compensationAmount:
          $ref: '#/components/schemas/Price'
        refundVoucher:
          $ref: '#/components/schemas/FulfillmentDocument'
        explanation:
          $ref: '#/components/schemas/SupportingDocument'
        shortExplanation:
          type:
            - 'string'
            - 'null'
        delayedJourney:
          description: |
            Allocator or fare provider view on the delays. This might differ from the customer view.
          type: array
          items:
            $ref: '#/components/schemas/Trip'

    ComplaintPatchRequest:
      type: object
      additionalProperties: false
      description: |
        Changes to a claim already made.
        This covers upload of additional supporting documents, changes to  the passenger and claim manager data.
        The patch of the compensation amount requires an agreement between the involved parties and is used in
        case the legal time line for deciding the claim is passed.
      properties:
        reason:
          $ref: '#/components/schemas/ComplaintChangeReason'
        compensationAmount:
          $ref: '#/components/schemas/Price'
        claimManager:
          $ref: '#/components/schemas/PersonDetail'
        affectedPassengers:
          type: array
          items:
            $ref: '#/components/schemas/Passenger'
        supportingDocuments:
          type: array
          items:
            $ref: '#/components/schemas/SupportingDocument'
        bankAccount:
          $ref: '#/components/schemas/BankAccountReference'

    ComplaintResponse:
      type: object
      additionalProperties: false
      required:
        - complaint
      properties:
        complaint:
          $ref: '#/components/schemas/Complaint'
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'

    Condition:
      type: object
      additionalProperties: false
      description: |
        Describes sales, usage and after sales conditions applicable to the product.  See after sales conditions for individual after sales amounts. The language of the text is controlled by the accept-language header, i.e. supporting English is a must.
      required:
        - type
        - description
      properties:
        type:
          $ref: '#/components/schemas/ConditionType'
        description:
          description: |
            human readable documentation of the text.
          type: string
          minLength: 1
        shortDescription:
          description: |
            short description of the condition no longer than 64 characters
          type:
            - 'string'
            - 'null'

    ConditionSpecification:
      type: object
      additionalProperties: false
      description: |
        Describes sales, usage and after sales conditions applicable to the product.  See after sales conditions for individual after sales amounts. The language of the text is controlled by the accept-language header, i.e. supporting English is a must.
      required:
        - type
        - description
      properties:
        type:
          $ref: '#/components/schemas/ConditionType'
        description:
          description: |
            human readable documentation of the text.
          $ref: '#/components/schemas/Text'
        shortDescription:
          description: |
            short description of the condition no longer than 64 characters
          $ref: '#/components/schemas/Text'

    ConditionType:
      type: string
      x-extensible-enum:
        - 'PRE_SALE'
        - 'SALE'
        - 'TRAVEL'
        - 'PLACE_CHANGE'
        - 'FULFILLMENT'
        - 'EXCHANGE'
        - 'REFUND'


    ConfirmedRelease:
      type: object
      additionalProperties: false
      required:
        - id    
        - createdOn
        - confirmedOn
        - releasedFulfillments
      properties:
        id:
          description: |
            id of the release     
          type: string
          maxLength: 32768
        summary:
          description: |         
            A human-readable description of the release.
          type:
            - 'string'
            - 'null'          
          examples:
            - 'Released: Paris-Barcelona Andre Dupont 2022-07-23'     
        createdOn:
          type: string
          format: date-time
        confirmedOn:
          type: string
          format: date-time            
        appliedOverruleCode:
          $ref: '#/components/schemas/OverruleCode'          
        releasedFulfillments:
          description: | 
            fulfillments to be refunded or replaced. This might differ from the requested refund specification in case the original request did not include all related fulfillments or booking parts. It must also incude the references to booking parts and passenger ids which can be omitted in teh request in case all part or passengers related to a fulfillment are refunded. 
          type: array
          items:
            $ref: '#/components/schemas/RefundedFulfillmentSpecification'
          minItems: 1          
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'          

    ConfirmedRefund:
      type: object
      additionalProperties: false
      required:
        - id
        - createdOn
        - confirmedOn
        - refundedFulfillments
        - refundedAmount
      properties:
        id:
          description: |
            id of the confirmed refund
          type: string
          maxLength: 32768
        summary:
          description: |         
            A human-readable description of the refund.
          type:
            - 'string'
            - 'null'
          examples:
            - 'Refund for Paris-Barcelona Andre Dupont 2022-07-23'          
        createdOn:
          type: string
          format: date-time
        confirmedOn:
          type: string
          format: date-time
        reimbursementStatus:
          $ref: '#/components/schemas/ReimbursementStatus'
        reimbursementDateTime:
          type:
            - 'string'
            - 'null'
          format: date-time
        reimbursementMethod:
          $ref: '#/components/schemas/ReimbursementMethod'          
        appliedOverruleCode:
          $ref: '#/components/schemas/OverruleCode'
        refundedFulfillments:
          description: | 
            fulfillments to be refunded or replaced. This might differ from the requested refund specification in case the original request did not include all related fulfillments or booking parts. It must also incude the references to booking parts and passenger ids which can be omitted in teh request in case all part or passengers related to a fulfillment are refunded. 
          type: array
          items:
            $ref: '#/components/schemas/RefundedFulfillmentSpecification'
          minItems: 1 
        issuedFulfillmentIds:
          description:
            IDs of the new fulfillments issued with this refund
          type: array
          items:
            type: string
        issuedVouchers:
          type: array
          items:
            $ref: '#/components/schemas/VoucherInformation'
        refundFeeRefs:
          description: |
            reference to Applied Fees covering the refund fee. Providing the reference
            is mandatory when the refund was confirmed and a fee has been applied
          type: array
          items:
            type: string
            maxLength: 1024
        refundedAmount:
          $ref: '#/components/schemas/Price'
          description: |
            Amount refunded to the purchaser
        refundBreakdown:
          description: |
            breakdown of the refund
          type: array
          items:
            $ref: '#/components/schemas/RefundBreakdownItem'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ContactDetail:
      type: object
      additionalProperties: false
      description: |
        Contact information needed to contact a person. Either an email or a phone number needs to be provided.
      properties:
        summary:
          description: |
            A human-readable description of the contact.
          type:
            - 'string'
            - 'null'
        preferredLanguage:
          description: |
            ISO-639-1 language code
          type:
            - 'string'
            - 'null'
        email:
          type:
            - 'string'
            - 'null'
        phoneNumber:
          description: |
            Preferably a mobile phone number, to be contacted in case changes to the booking
          type:
            - 'string'
            - 'null'

    ContextType:
      type: string
      enum:
        - 'OFFER'
        - 'BOOKING'

    ContinuousLeg:
      type: object
      additionalProperties: false
      description: |
        A leg of a journey that is not bound to a timetable. Provided by OJP.
      required:
        - start
        - end
        - service
      properties:
        start:
          $ref: '#/components/schemas/Place'
        end:
          $ref: '#/components/schemas/Place'
        service:
          $ref: '#/components/schemas/ContinuousService'
        timeWindowStart:
          description: |
            Time at which window begins.
          type:
            - 'string'
            - 'null'
          format: date-time
        timeWindowEnd:
          description: |
            Time at which window ends.
          type:
            - 'string'
            - 'null'
          format: date-time
        duration:
          description: |
            Duration of this leg according to user preferences like walk speed.
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - 'PT10M'
        situationFullRefs:
          type: array
          items:
            $ref: '#/components/schemas/SituationFullRef'
        co2Emission:
          $ref: '#/components/schemas/Quantity'

    ContinuousMode:
      description: |
        Types of modes that run at any time without a timetable. Provided by OJP.
      type: string
      x-extensible-enum:
        - 'WALK'
        - 'DEMAND_RESPONSIVE'
        - 'REPLACEMENT_SERVICE'

    ContinuousService:
      type: object
      additionalProperties: false
      description: |
        A vehicle movement on a continuous, non-timetabled service.
        Service of this leg. May be 'walk' in most cases, but also cycling or taxi etc.
        Provided by OJP.
      required:
        - operatingDayRef
        - journeyRef
        - mode
        - publishedServiceName
        - originText
        - destinationText
      properties:
        continuousMode:
          $ref: '#/components/schemas/ContinuousMode'
        individualMode:
          $ref: '#/components/schemas/IndividualMode'
        operatingDayRef:
          $ref: '#/components/schemas/OperationDayRef'
        journeyRef:
          $ref: '#/components/schemas/JourneyRef'
        mode:
          type: string
          examples:
            - Ask Stefan
        publishedServiceName:
          type: string
          examples:
            - Circle Line
        originText:
          type: string
        destinationText:
          type: string

    ContinuousServiceAvailabilityScope:
      description:
        search parameter so get available pick-up places for continuous on-demand services.
      type: object
      properties:   
        geoLocation:
          $ref: '#/components/schemas/GeoPosition'
        vehicleType:
          $ref: '#/components/schemas/ContinuousServiceVehicleType'  

    ContinuousServiceBookingPart:
      description: |
        A booking part for a continuous on-demand service.
      allOf:
        - $ref: '#/components/schemas/AbstractBookingPart'
        - type: object
          additionalProperties: false
          required:
            - pickUpPlaces
          properties:
            pickUpPlaces:
              description: |
                List of pick-up places for on-demand vehicles.
                The list might include more or other pick up places than mentioned originally in the trip specification.
              type: array
              items:
                $ref: '#/components/schemas/ContinuousServicePickUpPlace'
              minItems: 1
            tipRef:
              description: id of the tip for staff (e.g. taxi)
              type: string
              maxLength: 1024

    ContinuousServiceOfferPart:
      description: |
        An offer part for a continuous on-demand service.
      allOf:
        - $ref: '#/components/schemas/AbstractBookingPart'
        - type: object
          additionalProperties: false
          required:
            - pickUpPlaces
          properties:
            pickUpPlaces:
              description: |
                List of pick up places for on-demand vehicles. The list might include more or other pick up places than mentioned originally in the trip specification.
              type: array
              items:
                $ref: '#/components/schemas/ContinuousServicePickUpPlace'
              minItems: 1
              maxItems: 500

    ContinuousServiceUsage:
      description: Usage of a continuos service vehicle
      type: object
      additionalProperties: false
      required:
        - id
        - status
        - startUsageDescription
        - endUsageDescription
      properties:
        id:
          type: string
          maxLength: 1024
        status:
          $ref: '#/components/schemas/ContinuousServiceUsageStatus'
        geoPosition:
          $ref: '#/components/schemas/GeoPosition'
        startUsageDescription:
          description: start usage procedure description
          type: string
          maxLength: 32768
        endUsageDescription:
          description: end usage procedure description
          type: string
          maxLength: 32768
        startUsageCredentials:
          description: credentials to start the usage, e.g. nfc-enabled pkpass
          $ref: '#/components/schemas/FulfillmentDocument'
        startUsageTimeLimit:
          description: time limit to start the usage
          type: string
          format: date-time
        blockingFeeRef:
          description: id of the fee taken on blocking the vehicle
          type: string
          maxLength: 1024
        tipRef:
          description: id of the tip provided to staff
          type: string
          maxLength: 1024
        consumptionForPostPayment:
          $ref: '#/components/schemas/IndicatedConsumption'
        remainingConsumptionFromPrePayment:
          $ref: '#/components/schemas/IndicatedConsumption'
        estimatedTimeOfArrivalAtPickUpPlace:
          type: string
          format: date-time

    ContinuousServiceUsageStatus:
      description: status of the usage of a vehicle
      type: string
      x-extensible-enum:
        - 'VEHICLE_BLOCKED': vehicle is blocked
        - 'USAGE_STARTED': the traveler started to use the vehicle
        - 'USAGE_ENDED': the traveler ended the to use of the vehicle
        - 'BLOCKING_TIME_OUT':
            the traveler did not start the usage in time and the vehicle is
            available for other customers.
        - 'USAGE_TIME_OUT':
            the traveler did not end the usage but the maximal length of the
            usage was reached.

    ContinuousServiceUsagePatchRequest:
      description: Usage of a continuos service vehicle
      type: object
      additionalProperties: false
      required:
        - id
        - status
      properties:
        id:
          type: string
          maxLength: 1024
        status:
          $ref: '#/components/schemas/ContinuousServiceUsageStatus'
        parkingImage:
          description: |
            base64 encoded binary of the jpg image of the parked vehicle when ending the usage.
          type:
            - 'string'
            - 'null'
          format: byte
          maxLength: 4194304
        tip:
          $ref: '#/components/schemas/Tip'

    ContinuousServiceVehicleSelection:
      type: object
      additionalProperties: false
      required:
        - pickUpPlaceRef
        - vehicleType
      properties:
        pickUpPlaceRef:
          description: id of the selected pick-up place
          type: string
          maxLength: 1024
        vehicleType:
          $ref: '#/components/schemas/ContinuousServiceVehicleType'

    ContinuousServicesAvailabilityResponse:
      type: object
      additionalProperties: false
      required:
        - pickUpPlaces
      properties:
        pickUpPlaces:
          description: |
            list of pick-up places for on-demand vehicles. The list might include more or other pick up places than mentioned originally in the trip specification.
          type: array
          items:
            $ref: '#/components/schemas/ContinuousServicePickUpPlace'
          minItems: 1
          maxItems: 500

    ContinuousServicePickUpPlace:
      description: |
        Pick-up places for on-demand vehicles like taxis, bicycles or scooters
      required:
        - description
        - geoPosition
        - availableVehicles
      properties:
        id:
          description: 'id of the pick-up place'
          type: string
          maxLength: 32768
        description:
          description: 'description of the pick-up place'
          type: string
          maxLength: 32768
        name:
          description: 'name of the pick-up place'
          type: string
          maxLength: 32768
          examples:
            - 'Taxi Stand Main Station East Exit'
        accessDescription:
          description: 'description on how to access the on-demand vehicle'
          type: string
          maxLength: 32768
          examples:
            - 'Scooter to be unlocked by SMS code'
        geoPosition:
          $ref: '#/components/schemas/GeoPosition'
        availableVehicles:
          type: array
          items:
            $ref: '#/components/schemas/ContinuousServiceVehicleAvailability'
          maxItems: 500
        preAllocationTimeLimit:
          description:
            Duration for which the vehicle can be blocked until the usage
            starts.
          type: string
          format: duration
          examples:
            - PT30M
        processIndication:
          description:
            Machine readable indications on how the on-demand process should be
            handled.
          type: array
          items:
            $ref: '#/components/schemas/ContinuousServiceProcessIndication'
        estimatedVehicleArrivalAtPickUp:
          description: |
            Time until when the vehicle is expected to arrive at the pick-up place (taxi,..)
          type: string
          format: date-time
        estimatedUserArrivalAtPickUp:
          description: |
            Time until when the user of the service is expected to arrive at the pick-up place.
          type: string
          format: date-time

    ContinuousServiceProcessIndication:
      description: |
        Process indications for on-demand services  
        [On-Demand Vehicle Process](https://osdm.io/spec/catalog-of-code-lists/#OnDemandVehicleProcesses)
      type: string
      x-extensible-enum:
        - 'PRE_ALLOCATION_REQUIRED'
        - 'SHALLOW_INTEGRATION'
        - 'DEEP_INTEGRATION'
        - 'PREPAID'
        - 'POSTPAID'
        - 'AUTO_START_USAGE':
            usage starts automatically (e.g. by entering a key code at the
            vehicle)
        - 'AUTO_END_USAGE':
            usage ends automatically (e.g. by locking the service), the end of
            the usage does not need to be handled via OSDM
        - 'BLOCKING_TRACKING':
            updates provided before pick-up (e.g. current location of a taxi)
        - 'USAGE_TRACKING':
            updates provided after pick-up (e.g. price for current usage)
        - 'PARKING_IMAGE_REQUIRED':
            parking image required at the end of the usage
        - 'TIP_SUPPORTED': a driver tip is supported

    ContinuousServiceVehicleAvailability:
      description: |
        number and type of available vehicles
      required:
        - vehicleDescription
        - vehicleType
        - availableVehicles
      properties:
        vehicleDescription:
          type: string
          maxLength: 32768
          examples:
            - 'Scooter up to 120 kg traveler weight'
        vehicleType:
          $ref: '#/components/schemas/ContinuousServiceVehicleType'
        availableVehicles:
          description: number of available vehicles
          type: integer
          format: int32

    ContinuousServiceVehicleType:
      description: |
        [Vehicle types from code list of on-demand vehicle types](https://osdm.io/spec/catalog-of-code-lists/#OnDemandVehicleTypes)
      type: string
      x-extensible-enum:
        - 'BICYCLE'
        - 'ELECTRIC_BICYCLE'
        - 'CARGO_BICYCLE'
        - 'SCOOTER'
        - 'TAXI'
        - 'SELF_DRIVING_CAR'

    ControlSecurityType:
      description: |
        Known Values:
        - 'SIP': secure paper tickets
        - 'SID': security in data (signed bar code)
        - 'SIS': security in system
        Values from the [Control Security Type Code List](https://osdm.io/spec/catalog-of-code-lists/#ControlSecurityType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'SIP'
        - 'SID'
        - 'SIS'

    CorporateCode:
      type: object
      additionalProperties: false
      description: |
        The corporate code is a token that reduces the price of an offer or enables  offers that are not available without it. Needs with a commercial agreement between parties.
      required:
        - code
        - issuer
      properties:
        code:
          description: |
            The corporate code issued by the referenced company.
          type: string
          examples:
            - 123-232
        beneficiary:
          description: |
            The name of the party that benefits from the corporate code, intended to be presented to the end user.
          type:
            - 'string'
            - 'null'
          examples:
            - TheDummyCompany
        issuer:
          $ref: '#/components/schemas/CompanyRef'

    CountryCode:
      type: string
      description: |
        ISO 3166-1 alpha-2 2 character country code
      examples:
        - 'DE'

    Currency:
      type: string
      description: |
        ISO 4217 currency codes
      examples:
        - 'CHF'

    CustomerComplaint:
      type: object
      additionalProperties: false
      required:
        - applicationTime
        - journeyDetails
        - affectedPassengers
      description: |
        complaint details provided by the passengers
      properties:
        applicationTime:
          description: |
            date and time when the claim was made. This starts the legal time line to process the claim
          type:
            - 'string'
            - 'null'
          format: date-time
        journeyDetails:
          $ref: '#/components/schemas/ClaimedJourneyDetails'
        claimManager:
          $ref: '#/components/schemas/PersonDetail'
        affectedPassengers:
          type: array
          items:
            $ref: '#/components/schemas/Passenger'
          minItems: 1
        supportingDocuments:
          type: array
          items:
            $ref: '#/components/schemas/SupportingDocument'
        bookingIds:
          description: |
            list of booking Ids
          type:
            - 'array'
            - 'null'
          items:
            type: string
        ticketControlNumber:
          description: |
            list of ticket control number (visible ticket identification for the customer)
          type:
            - 'array'
            - 'null'
          items:
            type: string
        requestedPaymentType:
          $ref: '#/components/schemas/PaymentType'
        bankAccount:
          $ref: '#/components/schemas/BankAccountReference'

    DateRange:
      type: object
      additionalProperties: false
      properties:
        startTime:
          type:
            - 'string'
            - 'null'
          format: date-time
        endDate:
          type:
            - 'string'
            - 'null'
          format: date-time

    DatedJourney:
      type: object
      additionalProperties: false
      description: |
        Vehicle journey that runs at a specific date. Provided by OJP.
      required:
        - vehicleNumbers
        - carriers
      properties:
        operatingDayRef:
          $ref: '#/components/schemas/OperationDayRef'
        mode:
          $ref: '#/components/schemas/Mode'
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        publishedServiceName:
          description: |
            Line name or service description as known to the public
          type:
            - 'string'
            - 'null'
          examples:
            - 'S1'
            - 'Circle Line'
            - 'ICE 488'

        vehicleNumbers:
          type: array
          items:
            $ref: '#/components/schemas/VehicleNumber'
          minItems: 1
        lineNumbers:
          type: array
          items:
            $ref: '#/components/schemas/LineNumber'
        serviceStatus:
          $ref: '#/components/schemas/ServiceStatus'
        situationFullRefs:
          type: array
          items:
            $ref: '#/components/schemas/SituationFullRef'
        carriers:
          type: array
          items:
            $ref: '#/components/schemas/NamedCompany'
          minItems: 1
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/GeneralAttribute'

    DayTravelAccountUnit:
      allOf:
        - $ref: '#/components/schemas/AbstractTravelAccountUnit'
        - type: object
          additionalProperties: false

    DeckAvailability:
      type: object
      additionalProperties: false
      description: |
        A coach deck
      properties:
        layoutId:
          description: |
            Identifies the coach deck layout. It is recommended to import coach deck layout master data periodically by calling GET /coach-deck-layouts
          type: 
            - string
            - 'null'
        compartments:
          description: |
            Only compartments that match a requested place restriction must be returned (e.g. only return bike hook compartments if availabilities for a bicycle reservation offer were requested). Empty if the whole deck contains no compartments (e.g. traction unit) or no places that matches a requested place restriction.
          type: array
          items:
            $ref: '#/components/schemas/CompartmentAvailability'

    DirectionChange:
      type: object
      additionalProperties: false
      description: |
        A StopPlace where the direction of a train changes
      required:
        - stopPlaceRef
        - stopPlaceName
      properties:
        stopPlaceRef:
          description: |
            Reference to the station where the direction changes
          $ref: '#/components/schemas/StopPlaceRef'
        stopPlaceName:
          description: |
                  Name of the station where the direction changes
          type: 
            - string
            - 'null'

    DirectionType:
      description: |
        Direction of a place, defined optional as it might be omitted in
        case of berths in future. 
        Code list according to UIC90918-1
        Valid Values:
        - RIGHT: to right
        - LEFT: to left
        - UP: up (from right side of a coach pointing to the middle of the aisle)
        - DOWN: down (from right side of the coach pointing to the middle of the aisle)
      type: string
      enum:
        - 'RIGHT'
        - 'LEFT'
        - 'UP'
        - 'DOWN'

    DistributionMode:
      description: |
         booking parts in product mode are provided as complete products where the tickets and 
         conditions are prepared by the OSDM provider. Booking parts in fare mode need to be assambled 
         into tickes on the OSDM client side. In fare mode the conditions are defined on the client 
         side the restrictions on conditions and combinability layed down in the booking part (fare). 
         By definition admissions and ancillaries are in PRODUCT_MODE and fares are in _MODE. Reservation 
         might be in PRODUCT_MODE or in _MODE. Offers in _MODE must not be provided unless they are
         requested in the offer part type list.
      type: string
      enum:
        - 'PRODUCT_MODE'
        - 'FARE_MODE'   
      default:  'PRODUCT_MODE'        



    Document:
      type: object
      additionalProperties: false
      description: |
        Non travel document created. Either downloadLink + downloadExpiry or content must be provided.
      required:
        - id
        - type
        - scope
      properties:
        id:
          type: string
        summary:
          type:
            - 'string'
            - 'null'
        passengerRef:
          description: |
            Reference to a passenger, to be specified when the document related to an individual passenger.
          type:
            - 'string'
            - 'null'
        downloadLink:
          type:
            - 'string'
            - 'null'
          format: uri
        downloadExpiry:
          description: |
            Expiration time of the download link, the document will not be available at the given URI  after this time.
          type:
            - 'string'
            - 'null'
          format: date-time
        documentContent:
          $ref: '#/components/schemas/DocumentContent'
        type:
          $ref: '#/components/schemas/DocumentType'
        scope:
          $ref: '#/components/schemas/DocumentScope'

    DocumentContent:
      type: object
      required:
        - content
        - format
      properties:
        content:
          description: |
            base64 encoded binary of the actual fulfillment document. The length restriction of 4 MBytes applies to the encoded
            string, so the raw document cannot exceed 3 MBytes in size.
          type:
            - 'string'
            - 'null'
          format: byte
          maxLength: 4194304
        format:
          $ref: '#/components/schemas/DocumentFormat'

    DocumentCollectionResponse:
      type: object
      additionalProperties: false
      required:
        - documents
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          minItems: 1

    DocumentRequest:
      type: object
      additionalProperties: false
      required:
        - document
      properties:
        document:
          $ref: '#/components/schemas/DocumentSpecification'

    DocumentResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        document:
          $ref: '#/components/schemas/Document'

    DocumentScope:
      type: string
      enum:
        - 'BOOKING'
        - 'PASSENGER'

    DocumentSpecification:
      type: object
      additionalProperties: false
      description: |
        Non travel document created. Either downloadLink + downloadExpiry or content must be provided.
      required:
        - scope
        - type
      properties:
        passengerRef:
          description: |
            Reference to a passenger, to be specified when the document related to an individual passenger.
          type:
            - 'string'
            - 'null'
        content:
          description: |
            base64 encoded binary of the actual fulfillment document. The length restriction of 4 MBytes applies to the encoded
            string, so the raw document cannot exceed 3 MBytes in size.
          type:
            - 'string'
            - 'null'
          format: byte
          maxLength: 4194304
        format:
          $ref: '#/components/schemas/DocumentFormat'
        scope:
          $ref: '#/components/schemas/DocumentScope'
        type:
          $ref: '#/components/schemas/DocumentType'

    DocumentType:
      type: string
      enum:
        - 'BOOKING_RECEIPT'
        - 'CO2_REPORT'
        - 'INFORMATION'
        - 'COMPLAINT_EXPLANATION'

    Event:
      type: object
      additionalProperties: false
      description: |
        Record of an action that occurred in the life cycle of the booking.
      required:
        - id
        - timestamp
        - type
        - details
      properties:
        id:
          description: |
            id of the event
          type: string
        timestamp:
          description: |
            timestamp of the event
          type:
            - 'string'
            - 'null'
          format: date-time
        type:
          $ref: '#/components/schemas/EventType'
        details:
          $ref: '#/components/schemas/EventDetail'

    EventDetail:
      type: object
      additionalProperties: false
      required:
        - summary
        - requestor
        - change
        - resource
      properties:
        summary:
          description: |
            human readable description of the event
          type: string
        requestor:
          description: |
            Contains detailed information about who is calling the API. It can include information such as channel, organization, sales unit or workstation id and be used to configure e.g. the fare range provided to the caller. The content of the string is part of a bilateral contract by the two parties and not standardized by OSDM. It is recommend to encrypt the information transferred.
          type: string
        change:
          $ref: '#/components/schemas/HistoryStatus'
        resource:
          $ref: '#/components/schemas/Resource'

    EventType:
      type: string
      enum:
        - 'BOOKING_REAL_TIME_EVENT_OCCURRED'
        - 'BOOKING_REACCOMMODATED'
        - 'BOOKING_TRIP_CHANGED'
        - 'BOOKING_TRIP_CONFIRMED'
        - 'FULFILLMENT_AVAILABLE'
        - 'DOCUMENT_AVAILABLE'
        - 'FULFILLMENT_REFUNDED'
        - 'FULFILLMENT_EXCHANGED'
        - 'FULFILLMENT_CONTROLLED'
        - 'ACCOMMODATION_RELEASED'
        - 'PURCHASER_CHANGED'
        - 'PASSENGER_CHANGED'
        - 'REFUND_INITIATED'
        - 'EXCHANGE_INITIATED'

    ExchangeOffer:
      type: object
      additionalProperties: false
      required:
        - exchangeFee
        - exchangePrice
        - refundableAmount
        - fulfillments
        - offerId
        - createdOn
        - preBookableUntil
        - admissionOfferParts
      properties:
        exchangeFee:
          $ref: '#/components/schemas/Price'
        accountingRef:
          description: |
            Accounting information for the exchange fee
          $ref: '#/components/schemas/AccountingRef'
        exchangePrice:
          description: | 
            price of the new booking parts 
          $ref: '#/components/schemas/Price'
        refundableAmount:
          description: |
            amount to be paid to the purchaser in case the new products are less expensive. There can not be an amountToBePaid at the same time.        
          $ref: '#/components/schemas/Price'
        amountToBePaid:
          description: |
            amount to be paid by the purchaser in case the new products are more expensive. There can not be a refundableAmount at the same time.  
          $ref: '#/components/schemas/Price'      
        appliedOverruleCode:
          $ref: '#/components/schemas/OverruleCode'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
          minItems: 1
        offerId:
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the offer.
          type: string
        offerSummary:
          description: The offerSummary must be provided for product based offers. It is not needed for fares.
          $ref: '#/components/schemas/OfferSummary'
        createdOn:
          type: string
          format: date-time
        preBookableUntil:
          description: |
            time until the offer can be pre-booked, however its availability is not guaranteed
          type: string
          format: date-time
        passengerRefs:
          description: |
            providing the passengerRefs is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerRefs.              
          type: array
          items:
            type: string
          minItems: 1
        products:
          description: |
            products must be provided in case they are referenced. Some offer parts (e.g. fares)
            do not have products assigned.        
          type: array
          items:
            $ref: '#/components/schemas/Product'
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        exchangeOfferBreakdown:
          description: |
            Breakdown of the exchange offer, including the exchange price, exchange fee, and refundable amount.
          type: array
          items:
            $ref: '#/components/schemas/ExchangeBreakdownItem'
        admissionOfferParts:
          type: array
          items:
            $ref: '#/components/schemas/AdmissionOfferPart'
        reservationOfferParts:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOfferPart'
        ancillaryOfferParts:
          type: array
          items:
            $ref: '#/components/schemas/AncillaryOfferPart'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
        fares:
          type: array
          items:
            $ref: '#/components/schemas/FareOfferPart'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ExchangeBreakdownItem:
      type: object
      required:
        - bookingPartIds
        - exchangeFee
        - exchangePrice
      properties:
        exchangeFee:
          $ref: '#/components/schemas/Price'
        exchangePrice:
          description: | 
            price of the new booking parts 
          $ref: '#/components/schemas/Price'
        refundableAmount:
          description: |
            amount to be paid to the purchaser in case the new products are less expensive. There can not be an amountToBePaid at the same time.        
          $ref: '#/components/schemas/Price'
        amountToBePaid:
          description: |
            amount to be paid by the purchaser in case the new products are more expensive. There can not be a refundableAmount at the same time.  
          $ref: '#/components/schemas/Price'      
        bookingPartIds:
          type: array
          items:
            type: string

    ExchangeOfferRequestParameter:
      type: object
      additionalProperties: false
      description: |
        Basic request parameters for all exchange offer requests.
      properties:                                
        overruleCode:
          $ref: '#/components/schemas/OverruleCode'
        corporateCodes:
          type: array
          items:
            $ref: '#/components/schemas/CorporateCode'
        promotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'
        offerMode:
          $ref: '#/components/schemas/OfferMode'
        currency:
          $ref: '#/components/schemas/Currency'                 
        requestedFulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
        embed:
          type: array
          items:
            $ref: '#/components/schemas/OfferCollectionResponseContent'

    ExchangeOfferRequest:
      description: |
        Request exchange offers 
      type: object
      additionalProperties: false
      required:
          - exchangeParts
          - exchangeParams
      properties:        
        exchangeParts:
          description: |
            the fulfillments or booking parts that should be exchanged.
            The listed parts are an indication. It might be necessary to exchange more parts as there are dependencies to other pats via fulfillments. It is up to the provider to evaluate these dependencies.
          type: array
          maxItems: 1024
          items:
            $ref: '#/components/schemas/ExchangeParts'          
        exchangeParams:
          $ref: '#/components/schemas/ExchangeOfferRequestParameter'
        exchangePassengers:
          $ref: '#/components/schemas/ExchangePassengersOfferRequestSpecification' 
        exchangeService:
          $ref: '#/components/schemas/ExchangeServiceOfferRequestSpecification'   
        exchangeTrip:  
          $ref: '#/components/schemas/ExchangeTripOfferRequestSpecification'      

    ExchangeTripOfferRequestSpecification:
      description: |
          specification to exchange a trip
      type: object
      additionalProperties: false
      properties:
        tripSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/TripSpecification'
        tripIds:
          type: array
          items:
            type:
              - 'string'
              - 'null'
            maxLength: 32768
        tripSearchCriteria:
          $ref: '#/components/schemas/TripSearchCriteria'
        nonTripSearchCriteria:
          $ref: '#/components/schemas/NonTripSearchCriteria'
        requestedSections:
          type: array
          items:
            $ref: '#/components/schemas/Section'                        

    ExchangePassengersOfferRequestSpecification:
      description: |
        specification to remove, add and exchange passengers
      type: object  
      additionalProperties: false
      properties:
            addedPassengerSpecifications:
              description: specifications of new passengers to be added
              type: array
              items:
                $ref: '#/components/schemas/AnonymousPassengerSpecification'    
            removedPassengerIds:
              type: array
              description: | 
                 Ids of passengers to be exchanged. The new offers will not contain these passengers.
                 In case no passengers refs are provided all passengers on the fulfillment will be exchanged.
              maxItems: 1024             
              items:
                type: string    

    ExchangeServiceOfferRequestSpecification:
      desription: |
          specification to exchange the service level or travel class
      type: object
      additionalProperties: false
      properties:
        flexibilities:
          description: |
              Defines the flexibility levels desired of the fares returned.
              This refers to the after sales flexibility levels as defined in IRS-90918-10
          type: array
          items:
            $ref: '#/components/schemas/Flexibility'
        travelClasses:
          description: |
              The classes returned might be different from the requested classes.
          type: array
          items:
            $ref: '#/components/schemas/TravelClass'
        serviceClassTypes:
          description: |
              The classes returned might be different from the requested classes.
          type: array
          items:
            $ref: '#/components/schemas/ServiceClassType'
          maxItems: 4
   


    ExchangeOfferCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        exchangeOffers:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeOffer'
        trips:
          description: |
            Two trips are returned if  round trips are exchanged.
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/Passenger'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ExchangeOfferCollectionResponseContent:
      type: string
      enum:
        - 'ALL'
        - 'EXCHANGEOFFERS'
        - 'TRIP'
        - 'PASSENGERS'
        - 'NONE'
      default: 'ALL'

    ExchangeOperation:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/ExchangeStatus'
        exchangeOffers:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeOffer'
        appliedFeesRefs:
          description: |
            references to the fees applied with this exchange operation. It is mandatory to
            provide the refs when the fees have been applied.
          type: array
          items:
            type: string
            maxLength: 1024
        ticketTimeLimit:
          type:
            - 'string'
            - 'null'
          format: date-time
        fulfillmentType:
          $ref: '#/components/schemas/FulfillmentType'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        issuedVouchers:
          type: array
          items:
            $ref: '#/components/schemas/VoucherInformation'
        trips:
          type: array
          items:
            $ref: '#/components/schemas/Trip'

    ExchangeOperationPatchRequest:
      type: object
      additionalProperties: false
      description: |
        Allows modifying a general setting for the booking:
         * setting the required fulfillment type, e.g. value paper
           or e-ticket and preferred fulfillment media.
           The latter is optional and relevant in some cases only.
         * Provisionally exchanging some of the fulfillments in the booking
      properties:
        requestedFulfillmentType:
          $ref: '#/components/schemas/FulfillmentType'
        preferredFulfillmentMedia:
          $ref: '#/components/schemas/FulfillmentMediaType'
        usedPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'          
        embed:
          description: |
            Influences whether referenced resources are returned in full or as references only.
          type: array
          items:
            $ref: '#/components/schemas/ExchangeOperationResponseContent'

    ExchangeOperationRequest:
      type: object
      additionalProperties: false
      required:
        - exchangeOffers
      properties:
        exchangeOffers:
          type: array
          items:
            $ref: '#/components/schemas/OfferSelection'
          minItems: 1
        promotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'


    ExchangeOperationResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        exchangeOperation:
          $ref: '#/components/schemas/ExchangeOperation'
        appliedFees:
          description: |
            applied fees referenced in the exchange operation. Providing the applied fees is 
            mandatory in case the an exchange operation is returned. The applied fees are stored in the booking and are returned here additionally for convenience.
          type: array
          items:
             $ref: '#/components/schemas/AppliedFee'  


    ExchangeOperationResponseContent:
      description: |
        Influences whether referenced resources are returned in full or as references only.
      type: string
      enum:
        - 'ALL'
        - 'EXCHANGEOPERATION'
        - 'EXCHANGEOPERATION_EXCHANGEOFFERS'
        - 'EXCHANGEOPERATION_FULFILLMENTS'
      default: 'ALL'

    ExchangeStatus:
      type: string
      enum:
        - 'PREBOOKED'
        - 'CONFIRMED'
        - 'FULFILLED'
        - 'ERROR'

    ExchangeParts:
      description: specification of parts to be exchanged
      type: object
      properties:
        fulfillmentId:
          description: |
            ids of the fulfillments where some part(s) should be exchanged
          type: string
          maxLength: 32768
        bookingPartIds:
          description: | 
            Ids of booking parts to be exchanged. The new offers will not contain these parts.
            In case no booking parts are provided all booking parts will be exchanged.
          type: array
          maxItems: 1024
          items:
            type: string
            maxLength: 32768  
            

    ExchangeableType:
      description: |
        If set to YES the offerpart is exchangeable without a fee before the day of departure. 
        NO when not exchangeable or exchangeable with 100% fee, WITH_CONDITIONS in all other cases.
      type: string
      enum:
        - 'YES'
        - 'NO'
        - 'WITH_CONDITION'

    ExcludedTimeRange:
      type: object
      additionalProperties: false
      description: |
        time ranges excluded from the validity (e.g. off peak fulfillments)
      required:
        - from
        - until
        - scope
      properties:
        from:
          description: |
            minutes of the day in the time zone of travel
          type: integer
          format: int32
        until:
          description: |
            minutes of the day in the time zone of travel
          type: integer
          format: int32
        scope:
          $ref: '#/components/schemas/ExclusionScope'

    ExclusionScope:
      type: string
      enum:
        - 'START_OF_TRAVEL'
        - 'COMPLETE_RANGE'


    FareOfferPart:
      type: object
      additionalProperties: false
      description: |
        The online representation of a fare.
        In case the final product requires the indication of carriers it is obligatory to provide a 
        carrierConstraint in the fare directly that includes the list of all carriers in the 
        includedCarrier list. Whether the carrier must be indicated needs to be derived from the requetsted
        total route and the location of the sales points for international sales. 
        Whether the indication of carriers is obligatory is defined
        in the Convention concerning International Carriage by Rail (COTIF).
      allOf:
        - $ref: '#/components/schemas/AbstractOfferPart'
        - type: object
          additionalProperties: false            
          required:
            - type
            - regionalConstraint
            - travelClass
            - afterSalesCondition
            - combinationConstraint
            - travelValidityConstraint
          properties:
            type:
               $ref: '#/components/schemas/FareType'
            regionalConstraint:
               $ref: '#/components/schemas/RegionalConstraint'
            serviceConstraint:
               $ref: '#/components/schemas/ServiceConstraint'
            carrierConstraint:
               $ref: '#/components/schemas/CarrierConstraint'
            regulatoryConditions:
               type: array
               items:
                  $ref: '#/components/schemas/RegulatoryCondition'
            serviceClass:
               $ref: '#/components/schemas/ServiceClass'
            travelClass:
               $ref: '#/components/schemas/TravelClass'
            afterSalesCondition:
               $ref: '#/components/schemas/AfterSalesConditionsLink'
            combinationConstraint:
               type: array
               minItems: 1
               items:
                   $ref: '#/components/schemas/FareCombinationModel'
            fulfillmentConstraint:
                $ref: '#/components/schemas/FulfillmentConstraint'
            travelValidityConstraint:
                $ref: '#/components/schemas/TravelValidity'
            coveredSection:
                $ref: '#/components/schemas/Section'
            passengerConstraints:
               description: |
                  passenger constraint to be included in bar codes
               type: array
               items:
                 $ref: '#/components/schemas/PassengerConstraints'
            involvedTCOs:
               type: array
               items:
                  $ref: '#/components/schemas/CompanyRef'
            luggageConstraint:
               $ref: '#/components/schemas/LuggageConstraint'
            reservationRef:
                description: |
                  reference of the reservatioon offer that manages the places on a train. The referenced reservation is 
                  following the comercial rules of a fare, it needs to be integrated in a fulfillment of the API consumer.
                type: string      
          

    FareBookingPart:
      type: object
      additionalProperties: false
      description: |
        The online representation of a fare.
        In case the final product requires the indication of carriers it is obligatory to provide a 
        carrierConstraint in the fare directly that includes the list of all carriers in the 
        includedCarrier list. Whether the carrier must be indicated needs to be derived from the requetsted
        total route and the location of the sales points for international sales. 
        Whether the indication of carriers is obligatory is defined
        in the Convention concerning International Carriage by Rail (COTIF).
      allOf:
        - $ref: '#/components/schemas/AbstractBookingPart'
        - type: object
          additionalProperties: false            
          required:
            - type
            - regionalConstraint
            - travelClass
            - afterSalesCondition
            - combinationConstraint
            - travelValidityConstraint
          properties:
            type:
               $ref: '#/components/schemas/FareType'
            regionalConstraint:
               $ref: '#/components/schemas/RegionalConstraint'
            serviceConstraint:
               $ref: '#/components/schemas/ServiceConstraint'
            carrierConstraint:
               $ref: '#/components/schemas/CarrierConstraint'
            regulatoryConditions:
               type: array
               items:
                  $ref: '#/components/schemas/RegulatoryCondition'
            serviceClass:
               $ref: '#/components/schemas/ServiceClass'
            travelClass:
               $ref: '#/components/schemas/TravelClass'
            afterSalesCondition:
               $ref: '#/components/schemas/AfterSalesConditionsLink'
            combinationConstraint:
               type: array
               minItems: 1
               items:
                $ref: '#/components/schemas/FareCombinationModel'
            fulfillmentConstraint:
                $ref: '#/components/schemas/FulfillmentConstraint'
            travelValidityConstraint:
                $ref: '#/components/schemas/TravelValidity'
            coveredSection:
                $ref: '#/components/schemas/Section'
            passengerConstraints:
               description: |
                  passenger constraint to be included in bar codes
               type: array
               items:
                 $ref: '#/components/schemas/PassengerConstraints'
            involvedTCOs:
               type: array
               items:
                  $ref: '#/components/schemas/CompanyRef'
            luggageConstraint:
               $ref: '#/components/schemas/LuggageConstraint'
            reservationRef:
                description: |
                  reference of the reservatioon offer that manages the places on a train. The referenced reservation is 
                  following the comercial rules of a fare, it needs to be integrated in a fulfillment of the API consumer.
                type: string               

    FareCombinationModel:
      type: object
      additionalProperties: false
      description: |
        Defines the model according to which the fares can be combined.
      required:
        - model
      properties:
        model:
          description: |
            A distributor needs to support the following models:  SEPARATE_TICKET, SEPARATE_CONTRACT, CLUSTERING, COMBINING.
          type: string
        combinableCarriers:
          description: |
            List of all carriers where the model can be applied, in case the list is empty
            all combinations are allowed.
          type: array
          items:
            $ref: '#/components/schemas/CompanyRef'
        isValidOnlyWhenCombined:
          description: |
            This combination model applies only in case the fare is combined with another carrier
          type:
            - 'boolean'
            - 'null'
        referenceCluster:
          description: |
            In case of CLUSTERING model: the cluster to which the fare belongs
          type:
            - 'string'
            - 'null'
        allowedClusters:
          description: |
            In case of CLUSTERING model: the other clusters that allow a combination
          type:
            - 'array'
            - 'null'
          items:
            type: string
        allowedCommonContracts:
          description: |
            List of carriers where a common contract with separate fulfillments are allowed.
          type: array
          items:
            $ref: '#/components/schemas/CompanyRef'

    FareConnectionPoint:
      description: |
        Connection point connecting two fare regimes. The connection is possible between stations of the two provided station sets.
        A legacy border point code (id) might be provided as an additional code within the stations (code list BORDER_POINT provided in URN).
        In case the connection point is a real station this station is indicated.
        In case the connection point is between stations for each side of the border real stations must be provided.
        Multiple sets of station can be provided in the rare case that the connection point connects more than two station (A-B and A-C).
        Multiple stations within a set at one side of the border might be provided in case of changes (new stations build near the border).

        Providing the UIC code for the station is mandatory.
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          additionalProperties: false
          required:
            - stationSets
          properties:
            name:
              type:
                - 'string'
                - 'null'
            stationSets:
              type: array
              items:
                $ref: '#/components/schemas/StationSet'
              minItems: 1

    FareConnectionPointRef:
      description: |
        Reference to a Fare Connection Point.
      allOf:
        - $ref: '#/components/schemas/PlaceRef'
        - type: object
          additionalProperties: false
          properties:
            name:
              type:
                - 'string'
                - 'null'

    FareReferenceStation:
      type: object
      additionalProperties: false
      description: |
        Reference to a list of stations jointly valid in a fare. The fare
        reference station defines a set of station that are equivalent from
        a tariff point of view. The code is issued by the carrier. Needed to
        generate bar codes as well as fulfillments.
      required:
        - name
        - code
        - carrier
        - stations
      properties:
        name:
          type: string
        code:
          type: string
        carrier:
          $ref: '#/components/schemas/CompanyRef'
        stations:
          type: array
          items:
            $ref: '#/components/schemas/StopPlaceRef'
          minItems: 1

    FareType:
      description: |
        Basic UIC fare types used in 90918-10, 90918-4, and 90918-9.
        Values from the [Fare Type Code List](https://osdm.io/spec/catalog-of-code-lists/#FareType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'ADMISSION'
        - 'RESERVATION'
        - 'ANCILLARY'

    Fee:
      description: |
        Fees are used to represent additional costs for services or products. In contrast to other offer parts in OSDM, the customer is not free whether to choose a fee or not: fees are generated and applied to other services or products by the providing system.      
      allOf:
        - $ref: '#/components/schemas/AbstractOfferPart'      
        - type: object
          additionalProperties: false
          properties:
            applicability:
              $ref: '#/components/schemas/ApplicabilityType'
            transactionContext:
              $ref: '#/components/schemas/TransactionContextType'

    Flexibility:
      type: string
      x-extensible-enum:
        - 'FULL_FLEXIBLE'
        - 'SEMI_FLEXIBLE'
        - 'NON_FLEXIBLE'

    Fulfillment:
      type: object
      additionalProperties: false
      description: |
        A fulfillment is a document (or part of a document in distributor mode) that
        - allows the passenger to prove its travel right
        - provides easier access to trains and stations
        - allows an exchange for other services (voucher)
        A fulfillment refers to services of one or multiple offer parts or a fare (distributor mode).
      required:
        - id
        - status
        - bookingRef
        - createdOn
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/FulfillmentStatus'
        bookingRef:
          description: |
            the id of the booking the fulfillment is part of
          type: string
        summary:
          description: |
            A human-readable description of the fulfillment.
          type:
            - 'string'
            - 'null'
        createdOn:
          type: string
          format: date-time
        controlNumber:
          description: |
            Ticket Control Number.
          type:
            - 'string'
            - 'null'
        bookingParts:
          type: array
          items:
            $ref: '#/components/schemas/BookingPartReference'
        availableUsage:
          $ref: '#/components/schemas/FulfillmentUsage'
        issuer:
          $ref: '#/components/schemas/CompanyRef'
        fulfillmentDocuments:
          description: |
            Final document created for fulfillment.
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentDocument'
        issuingLanguage:
          type: string
          description: the issuing language (ISO-639-1 language code).
        fulfillmentParts:
          description: |
            Fulfillment items to be integrated into tickets (distributor mode).
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentPart'
        contentComplete:
          type:
            - 'boolean'
            - 'null'
          default: false
          description: |
            Indicates whether the fulfillment has all documents or parts generated (if any needed) or they are still pending generation.
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        continuousServiceUsage:
          $ref: '#/components/schemas/ContinuousServiceUsage'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    FulfillmentPatchRequest:
      type: object
      additionalProperties: false
      description: |
        Changes the fulfillment to status AVAILABLE. In the case of multi-journey  product, one of the fulfillment is
        now 'activated' and can be used to travel. Selects on-demand vehicles. Selects pick-up place and vehicle type for continuous services.
      required:
        - startOfUsage
      properties:
        selectedZoneIds:
          type:
            - 'array'
            - 'null'
          items:
            type: string
        travelDates:
          type:
            - 'array'
            - 'null'
          items:
            type: string
            format: date
        startOfUsage:
          type: string
          format: date-time
        fromPlace:
          $ref: '#/components/schemas/PlaceRef'
        stockControlNumbers:
          description: |
            The ids of the secure paper stock that identifies the blank secure paper stock used for printing.

            The stock control number is only used for secure paper stock and triggers a printing of the stock control number in the ticket layout. This establishes a link between paper stock and ticket that is used to control the usage of blank secure paper stock at offices as secure paper has otherwise no intrinsic protection against internal fraud.
          type:
            - 'array'
            - 'null'
          items:
            type: string
        continuousServiceVehicleSelection:
          description: | 
              selection of a pick-up place and vehicle type for continuous services.
          $ref: '#/components/schemas/ContinuousServiceVehicleSelection'

    FulfillmentCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
        issuedVouchers:
          type: array
          items:
            $ref: '#/components/schemas/VoucherInformation'

    FulfillmentConstraint:
      type: object
      additionalProperties: false
      required:
        - acceptedControlSecurityTypes
      properties:
        acceptedControlSecurityTypes:
          type: array
          items:
            $ref: '#/components/schemas/ControlSecurityType'
          minItems: 1
        acceptedBarCodes:
          description: |
            for SiD fulfillment one of the listed bar codes is required
          type: array
          items:
            $ref: '#/components/schemas/BarCodeType'
        requiredBarCodes:
          description: |
            One of the listed bar codes must be provided.
          type: array
          items:
            $ref: '#/components/schemas/BarCodeType'
        requiredSiS:
          type: array
          items:
            $ref: '#/components/schemas/SiSType'
        isIndividualTicketingForbidden:
          description: |
            a separate fulfillment per passenger is forbidden
          type:
            - 'boolean'
            - 'null'
          default: false

    FulfillmentDocument:
      type: object
      additionalProperties: false
      description: |
        Document created for fulfillment. Either downloadLink + downloadExpiry or content must
        be provided.
      required:
        - medium
        - type
        - format
      properties:
        medium:
          $ref: '#/components/schemas/FulfillmentMediaType'
        type:
          $ref: '#/components/schemas/FulfillmentDocumentType'
        downloadLink:
          type:
            - 'string'
            - 'null'
          format: uri
        downloadExpiry:
          description: |
            Expiration time of the download link, the document will not be available at the given URI
            after this time.
          type:
            - 'string'
            - 'null'
          format: date-time
        content:
          description: |
            base64 encoded binary of the actual fulfillment document. The length restriction of 4 MBytes applies to the encoded
            string, so the raw document cannot exceed 3 MBytes in size.
          type:
            - 'string'
            - 'null'
          format: byte
          maxLength: 4194304
        format:
          $ref: '#/components/schemas/DocumentFormat'
        applicationProvider:
          $ref: '#/components/schemas/CompanyRef'

    FulfillmentDocumentType:
      description: |
        The type of fulfillment document.
        Values from the [Fulfillment Document Type Code List](https://osdm.io/spec/catalog-of-code-lists/#FulfillmentDocumentType)
      type: string
      enum:
        - 'BOARDING_PASS'
        - 'BOOKING_RECEIPT'
        - 'INFORMATION'
        - 'TICKET'
        - 'VOUCHER'

    DocumentFormat:
      description: |
        Physical format of the document provided in the content field in Mime-Type format, e.g.
        application/pdf, image/jpeg, etc. Must be filled if the 'content' field is present.
      type: string
      enum:
        - 'application/pdf'
        - 'application/vnd.apple.pkpass'
        - 'image/jpeg'
        - 'image/png'
        - 'text/calendar'
        - 'text/html'

    FulfillmentId:
      type: string

    FulfillmentItemSecurityFeature:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/SecurityFeatureType'
        data:
          description: |
            base64 encoded data. The length restriction of 4 MBytes applies to the encoded
            string, so the raw data cannot exceed 3 MBytes in size.
          type:
            - 'string'
            - 'null'
          format: byte
          maxLength: 4194304

    FulfillmentItemSecurityFeatureLinks:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/SecurityFeatureType'
        uri:
          description: |
            link to download the security feature
          type:
            - 'string'
            - 'null'
          format: uri

    FulfillmentMediaType:
      description: |
        Fulfillment types. RCT2, RCCST and UIC_PDF are official UIC standards.
        Values from the [Fulfillment Media Type Code List](https://osdm.io/spec/catalog-of-code-lists/#FulfillmentMediaType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'DISTRIBUTOR_APP'
        - 'RETAILER_APP'
        - 'FULFILLMENT_PARTS'
        - 'PDF_A4'
        - 'PKPASS'
        - 'RCCST'
        - 'RCT2'
        - 'UIC_PDF'
        - 'TICKETLESS'

    FulfillmentOption:
      type: object
      additionalProperties: false
      description: |
        CIT paper implies printing on value paper which is stock controlled.
      required:
        - type
        - media
      properties:
        type:
          $ref: '#/components/schemas/FulfillmentType'
        media:
          $ref: '#/components/schemas/FulfillmentMediaType'

    FulfillmentPart:
      type: object
      additionalProperties: false
      description: |
        Fulfillment items to be integrated in to tickets,
        e.g. visual security elements, additional bar codes, control keys.
      properties:
        fulfillmentMedia:
          description: |
            list of fulfillment media where this item applies
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentMediaType'
        passengerRef:
          description: |
            reference to a passenger
          type:
            - 'string'
            - 'null'
        controlId:
          type:
            - 'string'
            - 'null'
        securityFeatures:
          description: |
            'visual elements, bar codes'
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentItemSecurityFeature'
        securityFeatureLinks:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentItemSecurityFeatureLinks'
        fulfillmentInformationTexts:
          type: array
          items:
            $ref: '#/components/schemas/TextElement'
        isMandatory:
          description: |
            The use of the provided features is mandatory.
          type:
            - 'boolean'
            - 'null'
          default: false
        securePaperOnly:
          description: |
            The security feature must be used on secure paper.
          type:
            - 'boolean'
            - 'null'
          default: false

    FulfillmentStatus:
      description: |
        Individual fulfillments of a multi journey booking need an separate patch to create the usable fulfillment in status FULFILLED before they are in an intermediate state AVAILABLE where they don't provide a document for travel. Fulfillments can be ON_HOLD in case they are booked but not yet available (e.g. a booking providing two journeys per week) or passed in case the fulfillment was not patched for usage within the required time.
      type: string
      enum:
        - 'AVAILABLE'
        - 'ON_HOLD'
        - 'CONFIRMED'
        - 'FULFILLED'
        - 'CHECKEDIN'
        - 'CANCELLED'
        - 'RELEASED'
        - 'REFUNDED'
        - 'EXCHANGED'
        - 'EXPIRED'

    FulfillmentsPatchRequest:
      type: object
      additionalProperties: false
      description: |
        Changes the fulfillment to status FULFILLED.
      properties:
        fulfillmentUpdates:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentId'

    FulfillmentPostRequest:
      type: object
      additionalProperties: false
      description: |
        Creates the fulfillment in the requested language
      properties:
        issuingLanguage:
          type: string
          description:
            the desired issuing language (ISO-639-1 language code). If not
            provided or not available, will default to (one of) the language(s)
            of the issuing country

    FulfillmentResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'

    FulfillmentType:
      description: |
        Values from the [Fulfillment Type Code List](https://osdm.io/spec/catalog-of-code-lists/#FulfillmentType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'ETICKET'
        - 'CIT_PAPER'
        - 'PASS_CHIP'
        - 'PASS_REFERENCE'

    FulfillmentUsage:
      type: object
      additionalProperties: false
      description: |
        In case of multi-journey products describe parameters to be used to change the a fulfillment in status AVAILABLE to FULFILLED so it can be used by the passenger.
      required:
        - maxAvailableZones
      properties:
        fromPlaceRequired:
          type:
            - 'boolean'
            - 'null'
          default: false
        travelDates:
          description: |
            Travel dates that can be selected. Note: date only is used to cover properly the case of passes including
            multiple time zones.
          type:
            - 'array'
            - 'null'
          items:
            type: string
        travelValidityRanges:
          type: array
          items:
            $ref: '#/components/schemas/TravelValidityRange'
        maxAvailableZones:
          description: |
            upper limit to the number of selected zones
          type: integer
          format: int32
        availableZones:
          type: array
          items:
            $ref: '#/components/schemas/ZoneDefinition'

    Gender:
      description: |
        The gender of the passenger, which is important in the case of night trains.
        Values from the [Gender Code List](https://osdm.io/spec/catalog-of-code-lists/#Gender)
      type:
        - 'string'
        - 'null'
      enum:
        - 'MALE'
        - 'FEMALE'
        - 'X'

    GeneralAttribute:
      type: object
      additionalProperties: false
      required:
        - text
      properties:
        text:
          type:
            - 'string'
            - 'null'
        code:
          type:
            - 'string'
            - 'null'
        url:
          type:
            - 'string'
            - 'null'

    GeoPosition:
      type: object
      additionalProperties: false
      description: |
        WGS84 coordinates position. Provided by OJP.
      required:
        - longitude
        - latitude
      properties:
        longitude:
          $ref: '#/components/schemas/Longitude'
        latitude:
          $ref: '#/components/schemas/Latitude'

    GeoPositionRef:
      description: |
        Reference to a GeoPosition consisting of latitude and longitude.
      allOf:
        - $ref: '#/components/schemas/PlaceRef'
        - type: object
          additionalProperties: false
          required:
            - latitude
            - longitude
          properties:
            latitude:
              $ref: '#/components/schemas/Latitude'
            longitude:
              $ref: '#/components/schemas/Longitude'

    GrantedReductionAmounts:
      type: object
      additionalProperties: false
      description: |
        granted reduction amounts
      properties:
        grantedReductionAmount:
          type: array
          items:
            $ref: '#/components/schemas/GrantedReductionAmount'

    GrantedReductionAmount:
      type: object
      additionalProperties: false
      description: |
        Applied passenger types and reductions per passenger, per offerpart, booking part and per part of the trip. 
        Passengers might be omitted in case the reduction applies to the complete booking part.
      required:
        - grantedAmount
        - description
      properties:
        description:
          description: |
            Clear text representation of the actual passenger type, suitable to be presented to a client.
          type: string
        grantedAmount:
          $ref: '#/components/schemas/Price'
        passengerRefs:
          description: |
            ids of the passengers that were granted the reduction
          type: array
          items:
            type: string
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        appliedPassengerTypes:
          type: array
          items:
            $ref: '#/components/schemas/ActualPassengerType'
        appliedReductions:
          type: array
          items:
            $ref: '#/components/schemas/CardReference'
        appliedCorporateCodes:
          type: array
          items:
            $ref: '#/components/schemas/CorporateCode'
        appliedPromotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'

    GraphicElement:
      type: object
      additionalProperties: false
      description: |
        An element in the coach deck layout (e.g. table, stair, toilet etc.).
      required:
        - rectangle
        - orientation
        - code
      properties:
        rectangle:
          $ref: '#/components/schemas/RectangleGeometry'
        orientation:
          $ref: '#/components/schemas/Orientation'
        code:
          $ref: '#/components/schemas/GraphicElementCode'

    GraphicElementCode:
      type: string
      description: |
        See https://osdm.io/spec/catalog-of-code-lists/#GraphicsItems
      examples: 
        - DRIVER_AREA

    GridDimension:
      type: object
      additionalProperties: false
      description: |
        Describes the dimension of a grid element.
      required:
        - width
        - height
      properties:
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        borderRadius:
          $ref: '#/components/schemas/BorderRadius'

    GridPosition:
      type: object
      additionalProperties: false
      description: |
        Describes the position in a 3D grid on which the element must be placed. The grid origin (x=0, y=0) is on the top left, the x coordinate increases to the right, the y coordinate increases downwards and the z coordinate increases towards the foreground.
      required:
        - x
        - y
        - z
      properties:
        x:
          type: integer
          format: int32
        y:
          type: integer
          format: int32
        z:
          type: integer
          format: int32

    HistoryStatus:
      type: string
      enum:
        - 'PREBOOKED'
        - 'ON_HOLD'
        - 'CONFIRMED'
        - 'FULFILLED'
        - 'CANCELLED'
        - 'RELEASED'
        - 'REFUNDED'
        - 'EXCHANGED'
        - 'EXCHANGE_ONGOING'
        - 'ERROR'
        - 'AVAILABLE'
        - 'CHECKED_IN'

    IdentificationCard:
      type: object
      additionalProperties: false
      description: |
        Person identification information  to be exchanged for border control if legally required.

        It is not allowed to send personal information not required in the offer reply.
        It is legally not allowed to send these personal data already in the offer request.
      required:
        - id
        - type
      properties:
        id:
          description: |
            Identifier on the document.
          type: string
        type:
          description: |
            Refer to code list for values
          type: string
        name:
          description: |
            ICAO transliteration identical as written in the document
          type:
            - 'string'
            - 'null'
        nationality:
          description: |
            ISO 3166-1 alpha-2 2 character country code
          type:
            - 'string'
            - 'null'
        birthCity:
          type:
            - 'string'
            - 'null'
        issuingCity:
          description: |
            place where the document is issued
          type:
            - 'string'
            - 'null'
        residenceCity:
          type:
            - 'string'
            - 'null'
        birthCountryCode:
          $ref: '#/components/schemas/CountryCode'
        issuingCountryCode:
          $ref: '#/components/schemas/CountryCode'
        residenceCountryCode:
          $ref: '#/components/schemas/CountryCode'
        issuingDate:
          type:
            - 'string'
            - 'null'
          format: date-time
        gender:
          $ref: '#/components/schemas/Gender'
        expirationDate:
          type:
            - 'string'
            - 'null'
          format: date

    ImpactType:
      description: |
        Known Values:
        - DELAY: delayed arrival
        - JOURNEY_ABANDONED: trip way abandoned during the travel
        - JOURNEY_NOT_STARTED: trip was not started due to the delay
        - SERVICE_DEGRADED: e.g. service class not provided
      type: string
      x-extensible-enum:
        - 'DELAY'
        - 'JOURNEY_ABANDONED'
        - 'JOURNEY_NOT_STARTED'
        - 'SERVICE_DEGRADED'

    IndicatedConsumption:
      type: object
      additionalProperties: false
      required:
        - amount
      properties:
        unit:
          $ref: '#/components/schemas/AbstractTravelAccountUnit'
        amount:
          type: integer
          format: int32

    IndicatedTravelAccountConsumption:
      type: object
      additionalProperties: false
      required:
        - amount
      properties:
        amount:
          type: integer
          format: int32
        scale:
          type:
            - 'integer'
            - 'null'
          format: int32
          default: 2

    IndividualMode:
      description: |
        Modes which an individual powers themselves (such as walk, cycle). Provided by OJP.
      type: string
      x-extensible-enum:
        - 'WALK'
        - 'CYCLE'
        - 'TAXI'
        - 'SELF_DRIVE_CAR'
        - 'OTHERS_DRIVE_CAR'
        - 'MOTORCYCLE'
        - 'TRUCK'
        - 'SCOOTER'
        - 'RIDE_POOL_CAR'
        - 'CAR_SHARING'
        - 'CYCLE_SHARING'
        - 'SCOOTER_SHARING'
        - 'BICYCLE'
        - 'ELECTRIC_BICYCLE'
        - 'CARGO_BICYCLE'
        - 'SCOOTER'

    InitialPlaceInput:
      type: object
      additionalProperties: false
      description: |
        Initial input for the place information request. This input defines what is originally looked for.
        Provided by OJP.
      properties:
        name:
          description: |
            Name of the place object which is looked after. This is usually the user's input. If not given,
            the name of the resulting place objects is not relevant.
          type:
            - 'string'
            - 'null'
          examples:
            - Bern Bärengraben
        geoPosition:
          $ref: '#/components/schemas/GeoPosition'

    Intermediate:
      type: object
      additionalProperties: false
      description: |
        Describes the situation at a stop or station that lies between the Board and
        Alight stop or station including time-related information. Provided by OJP.
      required:
        - stopPlaceRef
        - stopPlaceName
        - serviceArrival
        - serviceDeparture
      properties:
        stopPlaceRef:
          $ref: '#/components/schemas/StopPlaceRef'
        stopPlaceName:
          type: string
          examples:
            - Luzern
        plannedStopPointName:
          description: |
            Name of the bay/quay/terminal where to board/alight from the vehicle. According to
            planned timetable.
          type:
            - 'string'
            - 'null'
          examples:
            - 3
        estimatedStopPointName:
          description: |
            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.
          type:
            - 'string'
            - 'null'
          examples:
            - 8
        serviceArrival:
          $ref: '#/components/schemas/ServiceTime'
        serviceDeparture:
          $ref: '#/components/schemas/ServiceTime'
        status:
          $ref: '#/components/schemas/StopCallStatus'

    IntermediateSpecification:
      type: object
      additionalProperties: false
      description: |
        Minimal intermediate specification.
      required:
        - stopPlaceRef
        - serviceArrival
        - serviceDeparture
      properties:
        stopPlaceRef:
          $ref: '#/components/schemas/StopPlaceRef'
        serviceArrival:
          $ref: '#/components/schemas/ServiceTime'
        serviceDeparture:
          $ref: '#/components/schemas/ServiceTime'

    JourneyRef:
      type:
        - 'string'
        - 'null'
      description: |
        Reference to a journey. Provided by OJP.
      examples:
        - ServiceJourney:1

    Latitude:
      type: number
      format: double
      description: |
        Latitude from equator. -90 (South) to +90 (North). Decimal degrees. e.g. 56.356.
      minimum: -90
      maximum: 90
      examples:
        - 47.37818

    LegAttribute:
      type: object
      additionalProperties: false
      description: |
        Attributes that are not valid on the whole service, but only on section of a trip made on a single mode without interchange between boarding and alighting.
      required:
        - text
      properties:
        text:
          description: |
            Text of the attribute to be shown to the user.
          type: string
        code:
          description: |
            Internal code of the attribute. Can be used for detection of double occurrences. Refers to Service Facilities / Leg Attributes from the Catalog of Code Lists
          type:
            - 'string'
            - 'null'
        fromStopSeqNumber:
          description: |
            The attribute is valid from the stop point with this sequence number within the leg. If missing it is valid from the beginning of the leg.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
        toStopSeqNumber:
          description: |
            The attribute is valid to the stop point (inclusively) with this sequence number within the leg. If missing it is valid to the end of the leg.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0

    LegacyAccountingIdentifier:
      type: object
      additionalProperties: false
      description: |
        identifier of the fare in the current 301 accounting file
      required:
        - serialId
      properties:
        serialId:
          description: |
            sequential number of regional validities
          type: integer
          format: int32
          minimum: 0
          maximum: 99999
        addId:
          description: |
            Sequential number of regional validities (leading positions in case the series
            is too short).
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
          maximum: 99
        tariffId:
          description: |
            Tariff id for the old series format.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
          maximum: 9999

    LegacyReservationParameter:
      type: object
      additionalProperties: false
      description: |
        reservation parameter to support the UIC 90918-1 interface for booking
      required:
        - travelClass
        - serviceLevelCode
        - serviceCode
      properties:
        travelClass:
          description: |
            90918-1 class code in reservation
          type: string
        serviceLevelCode:
          description: |
            service level code defined in UIC 90918-1
          type: string
        serviceCode:
          description: |
            service code to be used in reservation
          type: string
        berthType:
          description: |
            berth type code in UIC 90918-1 to be used in reservation
          type:
            - 'string'
            - 'null'
        coachTypeCode:
          description: |
            coach type code in UIC 90918-1 to be used in reservation
          type:
            - 'string'
            - 'null'
        compartmentTypeCode:
          description: |
            compartment type code in UIC 90918-1 to be used in reservation
          type:
            - 'string'
            - 'null'
        tariffs:
          description: |
            tariff according to UIC 90918-1 to be used for booking
          type: array
          items:
            $ref: '#/components/schemas/LegacyReservationTariff'

    LegacyReservationTariff:
      type: object
      additionalProperties: false
      description: |
        Legacy tariff code and number of items or persons in case UIC 90918-1 is used for booking.
      properties:
        number:
          description: |
            number of items with this tariff code
          type:
            - 'integer'
            - 'null'
          format: int32
        code:
          description: |
            legacy tariff code
          type:
            - 'integer'
            - 'null'
          format: int32
    Line:
      type: object
      additionalProperties: false
      description: |
        terminalStation - in case the product requires a destination within the zone (e.g. local ticket
        to go to the main rail station).
        entryStation - Station to enter the zone in case the product requires to enter the zone via a
        specific station (e.g. local zone ticket to start from the main rail station).
      required:
        - carrier
      properties:
        binaryLineId:
          description: |
            Id to support local traffic standards (e.g. VDV,...).
          type:
            - 'string'
            - 'null'
          format: byte
        carrier:
          $ref: '#/components/schemas/CompanyRef'
        city:
          type:
            - 'integer'
            - 'null'
          format: int32
        entryStation:
          $ref: '#/components/schemas/StopPlace'
        lineIds:
          type:
            - 'array'
            - 'null'
          items:
            type: string
        terminalStation:
          $ref: '#/components/schemas/StopPlace'
        nutsCode:
          description: |
            Nomenclature des units territoriales statistiques
             COMMISSION REGULATION (EU) No 31/2011
          type:
            - 'string'
            - 'null'

    LineNumber:
      type:
        - 'string'
        - 'null'
      description: |
        Especially on regional traffic, a vehicle is defined by a line number.
        E.g. the line numbers of 'S 52' or 'B 19'.
      examples:
        - 52
        - B 19

    Link:
      type: object
      additionalProperties: false
      description: |
        The underlying system may provide links for pagination of links pointing on
        further information (such as HTML download links, web sites or extended APIs).
        Mechanism to add flexible extensions specific to an underlying system. Implemented
        the JSON-HAL specification.
      required:
        - rel
        - href
      properties:
        rel:
          description: |
            the 'rel' field in HATEOAS navigation.
          type: string
          examples:
            - self
        href:
          description: |
            Allows to provide a value to the link, for example id of the targeted resource or displayable representation for the link.
          type: string
          maxLength: 32768
          format: uri
        type:
          description: |
            Hint to indicate the media type expected when dereferencing the target resource.
          type:
            - 'string'
            - 'null'
          examples:
            - application/json
        value:
          description: |
            Allows to provide a value to the link, for example id of the targeted resource or displayable representation for the link.
          type:
            - 'string'
            - 'null'
          maxLength: 32768

    Longitude:
      type: number
      format: double
      description: |
        Longitude from Greenwich Meridian. -180 (West) to +180 (East). Decimal degrees. eg 2.356.
      minimum: -180
      maximum: 180
      examples:
        - 8.54021

    LuggageConstraint:
      type: object
      additionalProperties: false
      description: |
        Constraint on the luggage allowed by a passenger to on board.
      properties:
        maxHandLuggage:
          description: |
            standard hand luggage pieces
          type:
            - 'integer'
            - 'null'
          format: int32
        maxLargeLuggage:
          description: |
            standard non-hand luggage pieces
          type:
            - 'integer'
            - 'null'
          format: int32
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/LuggageRestriction'
        restrictionRules:
          type: array
          items:
            $ref: '#/components/schemas/LuggageRestrictionRuleEnum'

    LuggageDimension:
      type: object
      additionalProperties: false
      required:
        - dimension
        - value
      properties:
        dimension:
          $ref: '#/components/schemas/LuggageDimensionEnum'
        value:
          description: |
            Value of the dimension: weight in kg, length in cm, volume in liter.
          type: string

    LuggageDimensionEnum:
      description: |
        Type of the dimension. Combined sizes are the sum of the sizes.
        Explanation:  WIDTH_HEIGHT_LENGTH = sum of width, hight and length in cm (= linear equivalent).
      type: string
      enum:
        - 'HEIGHT'
        - 'LENGTH'
        - 'WEIGHT'
        - 'WIDTH'
        - 'WIDTH_HEIGHT'
        - 'WIDTH_HEIGHT_LENGTH'
        - 'VOLUME'

    LuggageRestriction:
      type: object
      additionalProperties: false
      required:
        - dimensionRestrictions
        - numberOfItems
      properties:
        dimensionRestrictions:
          description: |
            The dimension apply to the luggage items as upper limits.
          type: array
          items:
            $ref: '#/components/schemas/LuggageDimension'
          minItems: 1
        numberOfItems:
          description: |
            Number of luggage items allowed with this restriction.
          type: integer
          format: int32
        registrationIds:
          description: |
            The registrationIds to be included in a bar code on the fulfillment (UIC IRS 90918-4) (e.g. on a luggage tag).
          type:
            - 'array'
            - 'null'
          items:
            type: string

    LuggageRestrictionRuleEnum:
      description: |
        Named luggage restriction rule.
        Valid Values:
        - CAN_CARRY: Weight is ok if you can carry it yourself.
      type: string
      enum:
        - 'CAN_CARRY'

    Mode:
      type: object
      additionalProperties: false
      description: |
        A method of transportation such as bus, rail, etc. Provided by OJP.
      required:
        - ptMode
      properties:
        ptMode:
          $ref: '#/components/schemas/PTMode'
        name:
          description: |
            Name of the mode
          type:
            - 'integer'
            - 'null'
          examples:
            - rail
        shortName:
          description: |
            Short name or acronym of the mode
          type:
            - 'integer'
            - 'null'
          examples:
            - S
        description:
          description: |
            Additional text that further describes the mode
          type:
            - 'integer'
            - 'null'

    ModeFilter:
      type: object
      additionalProperties: false
      description: |
        List of public transport modes to include or exclude. Provided by OJP.
      properties:
        exclude:
          description: |
            Whether modes in list are to include or exclude from search.
          type:
            - 'boolean'
            - 'null'
          default: true
        transportModes:
          description: |
            List of Transport modes to include/exclude.
          type: array
          items:
            $ref: '#/components/schemas/Mode'

    MoneyTravelAccountUnit:
      allOf:
        - $ref: '#/components/schemas/AbstractTravelAccountUnit'
        - type: object
          additionalProperties: false
          required:
            - currency
          properties:
            currency:
              $ref: '#/components/schemas/Currency'
            scale:
              type:
                - 'integer'
                - 'null'
              format: int32
              default: 2

    MotorCycle:
      type: object
      additionalProperties: false
      properties:
        isSideCarIncluded:
          type:
            - 'boolean'
            - 'null'
          default: false
        licensePlate:
          description: |
            The license plate is a personal data item and must not be provided in an offer request.
            It must be patched into the offer after the customer accepted the offer for booking
          type:
            - 'integer'
            - 'null'

    MultiRideAccount:
      allOf:
        - $ref: '#/components/schemas/AbstractTravelAccount'
        - type: object
          additionalProperties: false
          required:
            - regionalConstraintSummary
            - balance
          properties:
            regionalConstraint:
              $ref: '#/components/schemas/RegionalConstraint'
            regionalConstraintSummary:
              type: string
            balance:
              $ref: '#/components/schemas/MultiRideBalance'
            consumptions:
              type: array
              items:
                $ref: '#/components/schemas/TravelAccountConsumption'

    MultiRideBalance:
      type: object
      additionalProperties: false
      description: |
        The balance of the travel account.
      required:
        - total
        - remaining
        - unit
      properties:
        total:
          type: integer
          format: int32
        remaining:
          type: integer
          format: int32
        unit:
          $ref: '#/components/schemas/AbstractTravelAccountUnit'

    NamedCompany:
      type: object
      additionalProperties: false
      description: |
        Provides the reference and name of a company.
      required:
        - ref
      properties:
        ref:
          $ref: '#/components/schemas/CompanyRef'
        name:
          description: |
            Textual representation of the carrier to be displayed unless the application is able to indicate the name by the carrier references.
          type:
            - 'string'
            - 'null'
          examples:
            - 'RhB'

    NamedTravelAccountUnit:
      allOf:
        - $ref: '#/components/schemas/AbstractTravelAccountUnit'
        - type: object
          additionalProperties: false
          required:
            - name
          properties:
            name:
              type: string

    NonTripSearchCriteria:
      type: object
      additionalProperties: false
      description: |
        Defines the requested validity when searching specifically for a non-trip Offer. 

        The geographical validity can either be specified by a list of nutsCodes, by a list of places (e.g. stations) with the semantics that trips between either of any of the listed stations are covered (e.g. Frankfurt (Main) Hbf, Friedberg(Hess) and Hanau Hbf, which would imply that any travel between these stations is to be covered), or a list of zones (e.g. with carrier urn:vdv:rmv, the zones with the ids 50, 2501 and 3001 would cover the same area as the list of stations above).
      properties:
        validFrom:
          type:
            - 'integer'
            - 'null'
          format: date-time
        nutsCodes:
          description: |
            Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011
          type:
            - 'array'
            - 'null'
          items:
            type: string
        zones:
          type: array
          items:
            $ref: '#/components/schemas/ZoneDefinition'
        places:
          type: array
          items:
            $ref: '#/components/schemas/PlaceRef'

    NotVia:
      type: object
      additionalProperties: false
      description: |
        Not-via restrictions for a trip, i.e. scheduled stop points or stop places that the trip is not allowed to pass through.  Provided by OJP.
      properties:
        notViaPlace:
          type: array
          items:
            $ref: '#/components/schemas/PlaceRef'

    Offer:
      type: object
      additionalProperties: false
      required:
        - offerId
        - createdOn
        - preBookableUntil
      properties:
        offerId:
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the offer.
          type:
            - 'integer'
            - 'null'
        offerSummary:
          $ref: '#/components/schemas/OfferSummary'
        createdOn:
          type: string
          format: date-time
        preBookableUntil:
          description: |
            time until the offer can be pre-booked, however its availability is not guaranteed
          type: string
          format: date-time
        passengerRefs:
          description: |
            providing the passengerRefs is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerRefs.              
          type: array
          items:
            type: string
          minItems: 1
        products:
          description: |
            products must be provided in case they are referenced. Some offer parts (e.g. fares)
            do not have products assigned.        
          type: array
          items:
            $ref: '#/components/schemas/Product'
        tripCoverage:
          $ref: '#/components/schemas/TripCoverage'
        admissionOfferParts:
          type: array
          items:
            $ref: '#/components/schemas/AdmissionOfferPart'
        reservationOfferParts:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOfferPart'
        ancillaryOfferParts:
          type: array
          items:
            $ref: '#/components/schemas/AncillaryOfferPart'
        continuousServiceOfferParts:
          type: array
          items:
            $ref: '#/components/schemas/ContinuousServiceOfferPart'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
        fares:
          type: array
          items:
            $ref: '#/components/schemas/FareOfferPart'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    OfferCollectionRequest:
      type: object
      additionalProperties: false
      description: |
        Defines the parameters needed to request an offer. Either a tripSearchCriteria, a list of trip specifications, or a list of tripIds can be passed in to request offers.

        If you are searching for fares you pass in the complete trip and the use the requestedSections attribute to define which part(s) you need fares (including virtual border points).

      properties:
        tripSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/TripSpecification'
        tripIds:
          type:
            - 'array'
            - 'null'
          items:
            type: string
            maxLength: 32768
        tripSearchCriteria:
          $ref: '#/components/schemas/TripSearchCriteria'
        tripResponseParameters:
          $ref: '#/components/schemas/TripResponseParameters'
        nonTripSearchCriteria:
          $ref: '#/components/schemas/NonTripSearchCriteria'
        requestedSections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
        offerSearchCriteria:
          $ref: '#/components/schemas/OfferSearchCriteria'
        anonymousPassengerSpecifications:
          description: |
            providing the anonymous passenger specification is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omitt the anounymousPassengerSpecification. 
          type: array
          items:
            $ref: '#/components/schemas/AnonymousPassengerSpecification'
          minItems: 1
        corporateCodes:
          type: array
          items:
            $ref: '#/components/schemas/CorporateCode'
        promotionCodes:
          type: array
          items:
            $ref: '#/components/schemas/PromotionCode'
        requestedFulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
        embed:
          description: |
            Influences whether referenced resources are returned in full or as references only. Proposed default ALL
          type: array
          items:
            $ref: '#/components/schemas/OfferCollectionResponseContent'

    OfferCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
        anonymousPassengerSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/AnonymousPassengerSpecification'
        trips:
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        _links:
          description: |

            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    OfferCollectionResponseContent:
      type: string
      enum:
        - 'ALL'
        - 'OFFERS'
        - 'TRIPS'
        - 'NONE'
      default: 'ALL'

    OfferOverviewRoute:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        travelClass:
          $ref: '#/components/schemas/TravelClass'
        flexibility:
          $ref: '#/components/schemas/Flexibility'
        startDateTime:
          type: string
          format: date-time
          nullable: false
        routeSpecification:
          $ref: '#/components/schemas/RouteSpecification'

    OfferOverviewTrip:
      type: object
      required:
        - price
        - tripIds
      properties:
        price:
          $ref: '#/components/schemas/Price'
        tripIds:
          type: array
          items:
            type: string
        travelClass:
          $ref: '#/components/schemas/TravelClass'
        flexibility:
          $ref: '#/components/schemas/Flexibility'

    OfferOverviewTripRequest:
      type: object
      description: |
        Defines the parameters needed to request an offer overview for a trip. One of tripSearchCriteria, a list of trip specifications, or a list of tripIds must be passed in to request offers. Travel class and flexibility are optional parameters to filter the desired offers.
      required:
        - passengerSpecifications
      properties:
        tripSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/TripSpecification'
        tripIds:
          type: array
          items:
            type: string
            maxLength: 32768
            nullable: false
          nullable: true
        tripSearchCriteria:
          $ref: '#/components/schemas/TripSearchCriteria'
        tripResponseParameters:
          $ref: '#/components/schemas/TripResponseParameters'
        passengerSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/AnonymousPassengerSpecification'
          minItems: 1
        travelClass:
          $ref: '#/components/schemas/TravelClass'
        flexibility:
          $ref: '#/components/schemas/Flexibility'

    OfferOverviewTripResponse:
      type: object
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        trips:
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        offerOverviews:
          type: array
          items:
            $ref: '#/components/schemas/OfferOverviewTrip'

    OfferOverviewRouteRequest:
      type: object
      description: |
        Defines the parameters needed to request an offer overview for a route. Travel class and flexibility are optional parameters to filter the desired offers.
      required:
        - routeSpecification
        - passengerSpecifications
        - startDateTime
        - endDateTime
      properties:
        routeSpecification:
          $ref: '#/components/schemas/RouteSpecification'
        passengerSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/AnonymousPassengerSpecification'
          minItems: 1
        startDateTime:
          type: string
          format: date-time
          nullable: false
        endDateTime:
          type: string
          format: date-time
          nullable: false
        timeFrameSegmentation:
          allOf:
            - $ref: '#/components/schemas/TimeFrameSegmentation'
          default: 'DAY'
          description: |
            Defines the segmentation of the time frame for the offer overview. The default is DAY, which means that one price offer overview is given for 
            each day of the requested time frame (provided there aren't more than one travel classes or flexibilities for one time segment).
        travelClass:
          $ref: '#/components/schemas/TravelClass'
        flexibility:
          $ref: '#/components/schemas/Flexibility'

    OfferOverviewRouteResponse:
      type: object
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        offerOverviews:
          type: array
          items:
            $ref: '#/components/schemas/OfferOverviewRoute'
            
    OfferMode:
      description: |
        Offer mode applied to provide offers for given criteria. 

        Individual offer mode means that each passenger is given individual admissions and reservations  to allow to refund individual passengers booked in a single booking.

        If collective mode is not supported, reverts back to the other mode and provides problem with warning message instead.

      type: string
      enum:
        - 'COLLECTIVE'
        - 'INDIVIDUAL'

    OfferPartReference:
      type: object
      additionalProperties: false
      description: |
        References all the offer part elements in an uniform format.
        In its part, an OfferPartReference can refer to reservation, admission, ancillary or fee.
      required:
        - id
      properties:
        id:
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the offer part reference.
          type:
            - 'string'
            - 'null'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    PartType:
      description: |
        Allows to request offer-parts of a certain type and indicates the type of the received booking part. For H/H converters use ['FARE_RESERVATION'].
        Default is to get search for offers of all types.
      type: string
      x-extensible-enum:
        - 'ADMISSION'
        - 'RESERVATION'
        - 'ANCILLARY'
        - 'FARE_ADMISSION'
        - 'FARE_RESERVATION'
        - 'FARE_ANCILLARY'
        - 'CONTINUOUS_SERVICE'
        - 'FEE'
        - 'ALL'

    OfferSearchCriteria:
      type: object
      additionalProperties: false
      properties:
        requestedOfferParts:
          description: |
            Allows to request offer-parts of a certain type.
            To support H/H use ['RESERVATION', 'ANCILLARY'].
            Default is to get search for offers of all types.        
          type: array
          items:
            $ref: '#/components/schemas/PartType'
        productTags:
          type:
            - 'array'
            - 'null'
          items:
            $ref: '#/components/schemas/ProductTag'
        productSelections:
          description: |
            preselection of products where offers are requested
          type: array
          items:
            description: |
              product selection by product code or product tag for an offer request. The number of items indicates the quantity to be required. Passengers must be referenced in case the product is intended for passengers.            
            $ref: '#/components/schemas/ProductRequestOfferSelection'
        flexibilities:
          description: |
            Defines the flexibility levels desired of the fares returned.
            This refers to the after sales flexibility levels as defined in IRS-90918-10
          type: array
          items:
            $ref: '#/components/schemas/Flexibility'
        travelClasses:
          description: |
            The classes returned might be different from the requested classes.
          type: array
          items:
            $ref: '#/components/schemas/TravelClass'
        serviceClassTypes:
          description: |
            The classes returned might be different from the requested classes.
          type: array
          items:
            $ref: '#/components/schemas/ServiceClassType'
          maxItems: 4
        offerMode:
          $ref: '#/components/schemas/OfferMode'
        currency:
          $ref: '#/components/schemas/Currency'

    OfferSelection:
      type: object
      additionalProperties: false
      description: |
        The Ids of the offers to be booked need to be passed in.
      required:
        - offerId
      properties:
        offerId:
          description: |
            id of the selected offer or exchangeOffer
          type: string
          maxLength: 32768
        externalRef:
          description: |
            A stable reference to the id of the offer in the caller's system. When received in input of a request, it must be persisted and echoed back in the response.
          type: string
        ancillarySelections:
          type: array
          items:
            $ref: '#/components/schemas/AncillarySelection'
        reservationSelections:
          description: |
            Selected reservations for booking.
          type: array
          items:
            $ref: '#/components/schemas/PlaceSelection'
        afterSaleByRetailerOnly:
          description: |
            in case the distributor has proposed this offer in conjunction with an offer of another provider constrained
            by a combinationTag, this flag must be set to true to indicate to the provider that after-sale must be done
            on the totality of the distributor's booking. Only after-sale requests triggered by the distributor can be
            safely processed on this offer. When the flag is not set, standard provider logic applies.
          type:
            - 'boolean'
            - 'null'
          default: false
        appliedRegulatoryCondition:
          $ref: '#/components/schemas/RegulatoryCondition'
        passengerRefs:
          description: |
            providing the passengerRefs is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerRefs.              
          type:
            - 'array'
            - 'null'
          items:
            type: string
          minItems: 1
        throughTicketTags:
          type: array
          items:
            $ref: '#/components/schemas/ThroughTicketTag'

    OfferSummary:
      type: object
      additionalProperties: false
      description: |
        The offer summary indicates the most relevant service class, level, flexibility or accommodation
        that describe this offer, but this does not imply that these values exactly apply to all parts of
        the offer.
        Let's consider, as a simplified example, a trip composed of two legs, one with both 1st and
        2nd class, and one with only 2nd.
        On this trip, the railway is expected to propose one offer with overallServiceClass FIRST composed
        of one admission in 1st class on the first legs and one admission in 2nd class on the second one,
        plus a second offer with overallServiceClass SECOND composed of two second class admissions.
        Likewise for all 'overall' attributes. The purpose of these attributes is to convey to the client
        system the service class, level, flexibility and accommodation that best represent this offer so to
        facilitate presentation to the final user.
        The offerSummary must be provided for product based offers. It is not needed for fares.
      required:
        - minimalPrice
        - overallServiceClass
        - overallFlexibility
      properties:
        minimalPrice:
          $ref: '#/components/schemas/Price'
        overallServiceClass:
          $ref: '#/components/schemas/ServiceClass'
        overallTravelClass:
          $ref: '#/components/schemas/TravelClass'
        overallAccommodationType:
          $ref: '#/components/schemas/AccommodationType'
        overallAccommodationSubType:
          $ref: '#/components/schemas/AccommodationSubType'
        overallFlexibility:
          $ref: '#/components/schemas/Flexibility'
        minimalIndicatedConsumption:
          $ref: '#/components/schemas/IndicatedConsumption'

    OfferTag:
      type: object
      additionalProperties: false
      description: |
        The offerTag can/must (depending on the mandatory flag) be used in some cases to restrict the
        set of offers returned in a subsequent and related offer search to only compatible ones.
        Note the offerTag does not need to be unique.
      properties:
        id:
          type:
            - 'string'
            - 'null'
        isMandatory:
          type:
            - 'boolean'
            - 'null'
          default: false

    OnHoldOffer:
      type: object
      additionalProperties: false
      required:
        - id
        - summary
        - createdOn
        - validFrom
        - validUntil
        - onHoldFee
        - deposit
        - increasedTTL
      properties:
        id:
          type: string
          maxLength: 32768
        summary:
          type: string
        createdOn:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
        confirmedOn:
          type:
            - 'string'
            - 'null'
          format: date-time
        onHoldFee:
          $ref: '#/components/schemas/Fee'
        deposit:
          $ref: '#/components/schemas/Price'
        increasedTTL:
          description: |
            Increased time-to-live.
          type: string
          format: date-time
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    OnHoldOfferPatchRequest:
      type: object
      additionalProperties: false

    OnHoldOfferRequest:
      type: object
      additionalProperties: false
      description: |
        Confirming the offer puts into the 'On-hold' state.
      required:
        - increaseTTL
      properties:
        increaseTTL:
          description: |
            increase of time to live (in minutes)
          type: integer
          format: int32

    OnHoldOfferResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        onHoldOffer:
          $ref: '#/components/schemas/OnHoldOffer'

    OperatingDays:
      type: object
      additionalProperties: false
      description: |
        Day of public transport operation of which the characteristics are defined in a specific
        service calendar and which may last more than 24 hours. Provided by OJP.
      required:
        - from
        - until
        - pattern
      properties:
        from:
          description: |
            Start date of period
          type: string
          format: date-time
        until:
          description: |
            End date of period
          type: string
          format: date-time
        pattern:
          description: |
            Bit pattern for operating days between start date and end date.
            The length of the pattern is equal to the number of days from
            start date to end date. A bit value of '1' indicates that an event
            actually happens on the day that is represented by the bit position.
          type: string

    OperationDayRef:
      type:
        - 'string'
        - 'null'
      description: |
        Reference to an operating day. Provided by OJP.
      examples:
        - OperatingDay:12345

    Orientation:
      type: integer
      format: int32
      description: |
        Orientation angle in degrees
      default: 0
      examples: 
        - 90

    OsmTag:
      type: object
      additionalProperties: false
      description: |
        Structure of an Open Street Map tag. Provided by OJP.
      required:
        - tag
        - value
      properties:
        tag:
          description: |
            Name of Open Street Map tag (amenity, leisure, tourism, bike, ...)
          type: string
          examples:
            - amenity
        value:
          description: |
            Value for Open Street Map tag (charging_station, hostel, yes, ...)
          type: string
          examples:
            - Rozenrust

    OverruleCode:
      description: |
        Reason for and type of an after sale, code list in IRS 90918-10.
        The PRM_SUPPORT_UNAVAILABLE overrule code shall only be used by the UIC PRM ABT tool.
        Values from the [Overrule Codes Code List](https://osdm.io/spec/catalog-of-code-lists/#OverruleCode)
        Listed values here are examples.   
        - 'CONNECTION_BROKEN'
        - 'DEATH'
        - 'EQUIPMENT_FAILURE'
        - 'PAYMENT_FAILURE'
        - 'PRM_SUPPORT_UNAVAILABLE'
        - 'SALES_STAFF_ERROR'
        - 'STOP_NOT_SERVED'
        - 'STRIKE'
        - 'TECHNICAL_FAILURE'
        - 'TICKET_NOT_USED'
        - 'INABILITY_TO_TRAVEL': Inability to travel due to accident or sickness.
        - 'EXTERNAL_COMPENSATION': Offer has been compensated outside of the provider system in another way.
        - 'DISRUPTION': Inability to operate due to disruption.
        - 'JOURNEY_OBSOLETE': Due to external factors it's senseless to start the trip, thus the travel is obsolete.
        - 'CERTIFIED_MEDICAL_CONDITION': A medical certificate certifies that the passenger is unable to travel.
        - 'DELAY_COMPENSATION': Allows to override conditions in context of passenger rights regulation (PRR).
      type: string
      x-extensible-enum:
        - 'CONNECTION_BROKEN'
        - 'DEATH'
        - 'EQUIPMENT_FAILURE'
        - 'PAYMENT_FAILURE'
        - 'PRM_SUPPORT_UNAVAILABLE'
        - 'SALES_STAFF_ERROR'
        - 'STOP_NOT_SERVED'
        - 'STRIKE'
        - 'TECHNICAL_FAILURE'
        - 'TICKET_NOT_USED'
        - 'INABILITY_TO_TRAVEL'
        - 'EXTERNAL_COMPENSATION'
        - 'DISRUPTION'
        - 'JOURNEY_OBSOLETE'
        - 'CERTIFIED_MEDICAL_CONDITION'
        - 'DELAY_COMPENSATION'

    PRMNeedType:
      type: string
      x-extensible-enum:
        - 'NEED_PRM_SUPPORT'
        - 'WHEELCHAIR'
        - 'ACCOMPANYING_DOG'
        - 'COMPANION_SEAT'
        - 'COMPANION'

    PTMode:
      description: |
        TAP-TSI/UIC contains a sensible subset of SIRI Transport Modes.
        Values from the [Transport Mode Code List](https://osdm.io/spec/catalog-of-code-lists/#TransportMode)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'HIGH_SPEED_TRAIN'
        - 'HISTORIC_TRAIN'
        - 'INTERCITY'
        - 'REGIONAL'
        - 'INTERREGIONAL'
        - 'URBAN'
        - 'TRAIN'
        - 'TRAM'
        - 'UNDERGROUND'
        - 'NIGHT_TRAIN'
        - 'SHARED_TAXI'
        - 'MOTOR_RAIL'
        - 'MOUNTAIN_TRAIN'
        - 'PLANE'
        - 'COACH_GROUP'
        - 'SHIP'
        - 'BUS'
        - 'ON_DEMAND_SERVICE'
        - 'BICYCLE'
        - 'SCOOTER'
        - 'TAXI'        

    Passenger:
      type: object
      additionalProperties: false
      description: |
        Information about a passenger.

        Either the date of birth or the age at the time of travel needs to be set. We recommend to use date of birth as it is more stable than age.
      required:
        - id
        - externalRef
        - type
      properties:
        id:
          type: string
        summary:
          description: |
            A human-readable description of the passenger.
          type:
            - 'string'
            - 'null'
        externalRef:
          description: |
            A stable reference to a passenger from other elements, or from caller system.
            When passed in passenger specification in an offer request, it must be echoed back in the
            response.
          type: string
        dateOfBirth:
          description: |
            date of birth of the passenger
          type:
            - 'string'
            - 'null'
          format: date
        age:
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
        type:
          $ref: '#/components/schemas/PassengerType'
        cards:
          description: |
            reduction or loyalty cards owned by the passenger
          type: array
          items:
            $ref: '#/components/schemas/CardReference'
        gender:
          $ref: '#/components/schemas/Gender'
        detail:
          $ref: '#/components/schemas/PersonDetail'
        identificationCard:
          $ref: '#/components/schemas/IdentificationCard'
        transportableDetails:
          $ref: '#/components/schemas/Transportable'
        prmNeeds:
          description: |
            For the persons with reduced mobility (PRMs) its specific needs for support are expressed.
          type: array
          items:
            $ref: '#/components/schemas/PRMNeedType'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    PassengerCategory:
      type: object
      description: |
        Passenger Category predefines a set of passenger specification properties that result to offer of a specific passenger type. 
        `title` is the localized name of the passenger category and `specification` describes exact passenger specification that may results into offer for selected
        passenger category. Passenger category specification doesn't guarante availability of expected passenger type on offered trip. `appliedPassengerType` must always be checked in the offer response.
      additionalProperties: false
      required:
        - title
        - specification
      properties:
        base:
          type: 
            - 'boolean'
            - 'null'
          default: false
          description: |
            Indicate whether this passenger category should be preselected 
            as a default option in the passenger selection. Usually results 
            to a "full fare" or "adult fare" offers.
        additional:
          type:
            - 'boolean'
            - 'null'
          default: false
          description: |
            Indicate whether this passenger category should be always visible in UI or folded into "additional" section.
        title:
          description: |
            Default and localized name of the passenger category.
          $ref: '#/components/schemas/Text'
        specification:
          description: |
            Exact passenger specification to be used in order to request an offer for given passenger category.
          $ref: '#/components/schemas/AnonymousPassengerSpecification'

    PassengerConstraints:
      type: object
      additionalProperties: false
      properties:
        number:
          description: |
            number of passengers with this constraint
          type:
            - 'integer'
            - 'null'
          format: int32
        upperAgeLimit:
          type:
            - 'integer'
            - 'null'
          format: int32
        lowerAgeLimit:
          type:
            - 'integer'
            - 'null'
          format: int32

    PassengerResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        passenger:
          $ref: '#/components/schemas/Passenger'

    PassengerSpecification:
      type: object
      additionalProperties: false
      description: |
        Minimal specification of a passenger to request offers.
        Either the date of birth or the age at the time of travel needs to be set. We recommend to use date of birth as it is more stable than age.
      required:
        - externalRef
        - type
      properties:
        externalRef:
          description: |
            A stable reference to a passenger from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.
          type: string
          examples:
            - TK-id-12345
        dateOfBirth:
          description: |
            Date of birth of the passenger. Only needed for passengers of type persons, family child, PRM
            and wheelchair.
          type:
            - 'string'
            - 'null'
          format: date
        age:
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
        cards:
          description: |
            reduction or loyalty cards owned by the passenger
          type: array
          items:
            $ref: '#/components/schemas/CardReference'
        prmNeeds:
          description: |
            For the persons with reduced mobility (PRMs) its specific needs for support are expressed.
          type: array
          items:
            $ref: '#/components/schemas/PRMNeedType'
        detail:
          $ref: '#/components/schemas/PersonDetail'
        type:
          $ref: '#/components/schemas/PassengerType'
        gender:
          $ref: '#/components/schemas/Gender'

    PassengerType:
      description: |
        Passenger type according to UIC passenger, i.e. passenger type list.
        Values from the [Passenger Type Code List](https://osdm.io/spec/catalog-of-code-lists/#PassengerType)
        Listed values here are examples.   
        Proposed default PERSON
      type: string
      x-extensible-enum:
        - 'YOUNG_CHILD'
        - 'CHILD'
        - 'YOUTH'
        - 'ADULT'
        - 'SENIOR'
        - 'FAMILY_CHILD'
        - 'ACCOMP_PRM'
        - 'PRM_CHILD'
        - 'WHEELCHAIR'
        - 'PERSON'
        - 'PRM'
        - 'DOG'
        - 'PET'
        - 'LUGGAGE'
        - 'BICYCLE'
        - 'PRAM'
        - 'ACCOMP_DOG'
        - 'CAR'
        - 'MOTOCYCLE'
        - 'TRAILER'
      default: 'PERSON'

    PaymentMethod:
      type: object
      additionalProperties: false
      description: |
        Method of payment used by the customer to the distributor. On input of voucher the remaining sum attribute is not present.
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/PaymentType'
        voucherInformation:
          $ref: '#/components/schemas/VoucherInformation'
        remainingVoucherAmount:
          $ref: '#/components/schemas/Price'
        transactionId:
          type:
            - 'string'
            - 'null'

    PaymentType:
      type: string
      x-extensible-enum:
        - 'CARD'
        - 'CASH'
        - 'DIRECT_DEBIT'
        - 'ELECTRONIC_PAYMENT'
        - 'INVOICE'
        - 'VOUCHER'
        - 'TRAVEL_ACCOUNT'

    PersonDetail:
      type: object
      additionalProperties: false
      description: |
        Personal information potentially needed at booking step. To support privacy by design,
        it is not permitted to send personal information not required to create a valid booking.
      required:
        - firstName
        - lastName
      properties:
        summary:
          description: |
            A human-readable description of the person.
          type:
            - 'string'
            - 'null'
        firstName:
          type: string
        lastName:
          description: full last names of the person
          type: string
          examples:
            - 'Diaz Lopez'
        firstFamilyName:
          description:
            first family name in case of multiple family names. The element
            lastName includes all family names.
          type: string
          examples:
            - 'Diaz'
        secondFamilyName:
          description:
            second family name in case of multiple family names. The element
            lastName includes all family names.
          type: string
          examples:
            - 'Lopez'
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
          description: |
            Address of the physical person for issuing an invoice or receipt
        contact:
          $ref: '#/components/schemas/ContactDetail'
        taxId:
          type:
            - 'string'
            - 'null'
          description:
            Tax identification of the physical person for issuing an invoice or
            receipt
          examples:
            - CZ1234567890

    PersonSearchRequest:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type:
            - 'string'
            - 'null'
        lastName:
          type:
            - 'string'
            - 'null'
        dateOfBirth:
          type:
            - 'string'
            - 'null'
          format: date
        phoneNumber:
          type:
            - 'string'
            - 'null'
        email:
          type:
            - 'string'
            - 'null'

    Place:
      type: object
      additionalProperties: false
      description: |
        A geographic place of any type which may be specified as the origin or destination of a trip. Provided by OJP.
      discriminator:
        propertyName: objectType
      required:
        - objectType
        - id
      properties:
        objectType:
          description:
            Attribute is used as discriminator for inheritance between data
            types.
          type: string
        id:
          description: |
            id  defining the place. The code is provided as URN, relative URNs are allowed with base path urn:uic:stn '0850000'
          type: string
          examples:
            - urn:uic:stn:8500000
        alternativeIds:
          description: |
            For a place with ids in different reference systems, the alternative ids can be returned. 
            The reference system is encoded in the string. E.g.: 'urn:uic:std:80000', 'x_swe:stn:10000', 'ch:1:sloid:343434'
          type:
            - 'array'
            - 'null'
          items:
            type: string
        geoPosition:
          $ref: '#/components/schemas/GeoPosition'
        ref:
          description: |
            Reference to another a place, e.g. to link address information. Provided by OJP.
          $ref: '#/components/schemas/PlaceRef'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    PlaceAllocation:
      type: object
      additionalProperties: false
      description: |
        Describes the details of the reserved place(s).
      required:
        - accommodationType
        - accommodationSubType
        - reservedPlaces
        - tripLegCoverage
      properties:
        accommodationType:
          $ref: '#/components/schemas/AccommodationType'
        accommodationSubType:
          $ref: '#/components/schemas/AccommodationSubType'
        reservedPlaces:
          description: |
            Reserved places in a confirmed reservation.
            Multiple place packs are needed to combined person and bicycle reservations
          type: array
          items:
            $ref: '#/components/schemas/ReservedPlace'
          minItems: 1
        tripLegCoverage:
          $ref: '#/components/schemas/TripLegCoverage'

    PlaceAvailabilityCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        availablePlaces:
          type: array
          items:
            $ref: '#/components/schemas/AvailablePlace'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'          
        
    PlaceAvailabilityMapRequest:
      type: object
      additionalProperties: false
      description: |
        Reservation offer/bookingParts or reservation fares for which place availabilities shall be returned.
      required:
        - placeRestrictions
      properties:
        placeRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/PlaceRestriction'
          minItems: 1

    PlaceAvailabilityMapResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        vehicle:
          $ref: '#/components/schemas/VehicleAvailability'

    PlaceGroup:
      type: object
      additionalProperties: false
      description: |
        A place group groups places by service class and optionally by accommodation sub type. A place group not necessarily needs to be visualized (e.g. as a rectangle). Visualization can be done using ServiceIcons and GraphicElements.
         
        Nevertheless, a place group can be useful for rendering of coach decks/places for which no place availabilities were returned, as further information (service class, accommodation sub type) can be displayed .
         
        If availabilities were returned for a certain place, travel class and accommodation sub type values returned in the availability response must be displayed (they replace the static travel class / accommodation sub type defined on the place group). Reason: travel class and accommodation sub type values can dynamically change for each vehicle run.
         
        Example 1: Class upgrade
        A customer with a second class reservation ticket might be placed on a first class seat.
         
        Example 2: New/more specific AccommodationSubType
        AccommodationSubType=BUSINESS defined in static master data might be changed into AccommodationSubType=BUSINESS_COMFORT on certain vehicle runs.
      required:
        - serviceClass
        - places
      properties:
        serviceClass:
          $ref: '#/components/schemas/ServiceClassType'
        accommodationType:
          $ref: '#/components/schemas/AccommodationType'
        accommodationSubType:
          $ref: '#/components/schemas/AccommodationSubType'
        places:
          description: |
            Seats or bicycle hooks in a coach compartment.
          type: array
          items:
            $ref: '#/components/schemas/PlaceLayout'
          minItems: 1

    PlaceLayout:
      type: object
      additionalProperties: false
      description: |
        A place (e.g. a seat or bicycle hook)
      required:
        - number
        - rectangle
        - orientation
      properties:
        number:
          description: |
            The place number (unique per coach deck).
          type: string
        rectangle:
          $ref: '#/components/schemas/RectangleGeometry'
        orientation:
          $ref: '#/components/schemas/Orientation'
        placeProperties:
          description: |
            Static place properties
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty'

    PlaceParam:
      type: object
      additionalProperties: false
      description: |
        More parameters for restricting the request. Provided by OJP.
      properties:
        type:
          $ref: '#/components/schemas/PlaceType'
        usage:
          $ref: '#/components/schemas/PlaceUsage'
        ptModes:
          $ref: '#/components/schemas/ModeFilter'
        serviceBrandFilter:
          $ref: '#/components/schemas/ServiceBrandFilter'
        carrierFilter:
          $ref: '#/components/schemas/CarrierFilter'
        pointOfInterestFilter:
          $ref: '#/components/schemas/PointOfInterestFilter'
        numberOfResults:
          description: |
            Maximum number of results to be returned. The service is allowed to return fewer objects if reasonable
            or otherwise appropriate.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 1


    PlacePreSelection:
      type: object
      additionalProperties: false
      required:
        - coach
        - place
      properties:
        reservationId:
          description: |
            id of the reservation in case the places have already been selected and the customer now wants to change the selection.
          type: string
        coach:
          type: string
        place:
          type: string

    PlacePreferenceGroup:
      type: object
      additionalProperties: false
      required:
        - preferenceGroup
        - preferences
      properties:
        preferenceGroup:
          description: |
            Values from the [Reservation Preference Group Code List](https://osdm.io/spec/catalog-of-code-lists/#ReservationPreferenceGroup)
          type: string
          x-extensible-enum:
            - 'COMPARTMENT_TYPE'
            - 'SPECIAL_COMPARTMENT_TYPE'
            - 'PLACE_OR_COMPARTMENT_POSITION'
            - 'PLACE_OR_COMPARTMENT_ALIGNMENT'
            - 'PLACE_OR_COMPARTMENT_FEATURE'
            - 'PLACE_OR_COMPARTMENT_LOCATION'
        preferences:
          description: |
            Place preferences in the group. 
            Values from the [Place Property Code List](https://osdm.io/spec/catalog-of-code-lists/#PlaceProperty)
          type: array
          items:
            type: string
          minItems: 1
          x-extensible-enum:
            - 'AISLE_SEAT'
            - 'AIR-CONDITIONED'
            - 'BISTRO'
            - 'BICYCLE'
            - 'BICYCLE_LOW'
            - 'BICYCLE_MIDDLE'
            - 'BICYCLE_HIGH'
            - 'BUSINESS'
            - 'BUSINESS_COMFORT'
            - 'CABIN8'
            - 'CARRE'
            - 'CHILDREN_AREA'
            - 'CLUB_2'
            - 'CLUB_4'
            - 'COMPARTMENT'
            - 'CONNECTING_DOOR'
            - 'EASY_ACCESS'
            - 'FACE_2_FACE'
            - 'EXCELLENCE'
            - 'FAMILY'
            - 'FRONT_VIEW'
            - 'HISTORIC_COACH'
            - 'INCLUDING_MEAL'
            - 'INCLUDING_DRINK'
            - 'KIOSQUE'
            - 'LADIES'
            - 'LOWER_BED'
            - 'LOWER_DECK'
            - 'MEN'
            - 'MIDDLE_BED'
            - 'MIDDLE_DECK'
            - 'MIDDLE_SEAT'
            - 'MIXED'
            - 'NEAR_ANIMALS'
            - 'NEAR_ASSISTANT_DOG_AREA'
            - 'NEAR_DINING'
            - 'NEAR_PLAY_AREA'
            - 'NEAR_BICYCLE_AREA'
            - 'NEAR_WHEELCHAIR'
            - 'OPEN_SPACE'
            - 'PANORAMA'
            - 'PHONE'
            - 'POWER'
            - 'PREMIUM'
            - 'RESTAURANT'
            - 'SALON'
            - 'SILENCE'
            - 'SIDE_BY_SIDE'
            - 'SOLO'
            - 'SOLO_COM'
            - 'TABLE'
            - 'TANDEM'
            - 'UPPER_BED'
            - 'UPPER_DECK'
            - 'VIDEO'
            - 'WHEELCHAIR'
            - 'WHEELCHAIR_AND_SEAT'
            - 'WHEELCHAIR_NO_SEAT'
            - 'WIFI'
            - 'WINDOW_SEAT'
            - 'WITH_ANIMALS'
            - 'WITH_SMALL_CHILDREN'
            - 'WITHOUT_ANIMALS'

    PlaceProperty:
      type: string
      description: |
        Values from the [Place Property Code List](https://osdm.io/spec/catalog-of-code-lists/#PlaceProperty)
      default: 'ANY_SEAT'
      x-extensible-enum:
        - 'AISLE_SEAT'
        - 'AIR-CONDITIONED'
        - 'ANY_SEAT'
        - 'BISTRO'
        - 'BICYCLE'
        - 'BICYCLE_LOW'
        - 'BICYCLE_MIDDLE'
        - 'BICYCLE_HIGH'
        - 'BUSINESS'
        - 'BUSINESS_COMFORT'
        - 'CABIN8'
        - 'CAR_LARGE'
        - 'CAR_SMALL'
        - 'CARRE'
        - 'CHILDREN_AREA'
        - 'CLUB'
        - 'CLUB_2'
        - 'CLUB_4'
        - 'COMPARTMENT'
        - 'COMPLETE'
        - 'CONFERENCE'
        - 'CONNECTING_DOOR'
        - 'COUCHETTE_2'
        - 'COUCHETTE_4'
        - 'COUCHETTE_5'
        - 'COUCHETTE_6'
        - 'COUCHETTE_COMFORT_4'
        - 'COUCHETTE_COMFORT_5'
        - 'COUCHETTE_COMFORT_6'
        - 'COUCHETTE_PRM_2'
        - 'COUCHETTE_PRM_3'
        - 'COUCHETTE_PRM_4'
        - 'DOUBLE'
        - 'DOUBLE_WC'
        - 'DOUBLE_SWC'
        - 'DOUBLE_S'
        - 'EASY_ACCESS'
        - 'FACE_2_FACE'
        - 'EXCELLENCE'
        - 'FAMILY'
        - 'FRONT_VIEW'
        - 'HISTORIC_COACH'
        - 'INCLUDING_MEAL'
        - 'INCLUDING_DRINK'
        - 'KIOSQUE'
        - 'LADIES'
        - 'LOWER_BED'
        - 'LOWER_DECK'
        - 'MEN'
        - 'MIDDLE_BED'
        - 'MIDDLE_DECK'
        - 'MIDDLE_SEAT'
        - 'MINI_SUITE'
        - 'MIXED'
        - 'MOTOR_CYCLE'
        - 'MOTOR_CYCLE_SC'
        - 'NEAR_ANIMALS'
        - 'NEAR_ASSISTANT_DOG_AREA'
        - 'NEAR_DINING'
        - 'NEAR_PLAY_AREA'
        - 'NEAR_BICYCLE_AREA'
        - 'NEAR_WHEELCHAIR'
        - 'OPEN_SPACE'
        - 'PANORAMA'
        - 'PHONE'
        - 'POWER'
        - 'PRAM'
        - 'PRAM_WITH_SEAT'
        - 'PREMIUM'
        - 'RESTAURANT'
        - 'SALON'
        - 'SILENCE'
        - 'SINGLE'
        - 'SINGLE_WC'
        - 'SINGLE_SWC'
        - 'SIDE_BY_SIDE'
        - 'SLEEPERETTE'
        - 'SOLO'
        - 'SOLO_COM'
        - 'SPECIAL_SLEEPER'
        - 'TABLE'
        - 'TANDEM'
        - 'TOURIST_SLEEPER_2'
        - 'TOURIST_SLEEPER_3'
        - 'TOURIST_SLEEPER_3_WC'
        - 'TOURIST_SLEEPER_3_SWC'
        - 'TOURIST_SLEEPER_4'
        - 'UPPER_BED'
        - 'UPPER_DECK'
        - 'VIDEO'
        - 'WHEELCHAIR'
        - 'WHEELCHAIR_AND_SEAT'
        - 'WHEELCHAIR_NO_SEAT'
        - 'WIFI'
        - 'WINDOW_SEAT'
        - 'WITH_ANIMALS'
        - 'WITH_SMALL_CHILDREN'
        - 'WITHOUT_ANIMALS'

    PlaceRef:
      type: object
      additionalProperties: false
      discriminator:
        propertyName: objectType
      required:
        - objectType
      properties:
        objectType:
          description:
            Attribute is used as discriminator for inheritance between data
            types.
          type: string

    PlaceRequest:
      type: object
      additionalProperties: false
      description: |
        Initial input for the place information request. This input defines what is originally looked for.
        Provided by OJP.
      properties:
        placeInput:
          $ref: '#/components/schemas/InitialPlaceInput'
        restrictions:
          $ref: '#/components/schemas/PlaceParam'

    PlaceResponse:
      type: object
      additionalProperties: false
      required:
        - places
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        places:
          type: array
          items:
            $ref: '#/components/schemas/Place'
          minItems: 1

    PlaceRestriction:
      type: object
      additionalProperties: false
      description: |
        Reservation based place selection criteria. Each requested place selection criterion will only be considered if it is covered by the referenced reservation offerPart/bookingPart. E.g. place selection criterion serviceClass=HIGH will only be considered if reservationRef references a first/high class offer.
      required:
        - reservationRef
      properties:
        reservationRef:
          type: string
        serviceClass:
          $ref: '#/components/schemas/ServiceClassType'
        accommodationSubTypes:
          description: |
            Specifies the accommodation sub types for which place availabilities shall be returned.
          type: array
          items:
            $ref: '#/components/schemas/AccommodationSubType'

    PlaceSelection:
      type: object
      additionalProperties: false
      description: |
        Place selection options and selected options in an offer
        - reference place for adjacent reservation
        - selected optional place properties
        - selected places from a graphical place selection
      required:
        - reservationId
      properties:
        reservationId:
          type: string
        referencePlace:
          $ref: '#/components/schemas/SelectedReferencePlace'
        accommodations:
          type: array
          items:
            $ref: '#/components/schemas/SelectedAccommodation'
        places:
          type: array
          items:
            $ref: '#/components/schemas/SelectedPlace'

    PlaceType:
      description: |
        Provided by OJP.
      type: string
      enum:
        - 'STOP'
        - 'ADDRESS'
        - 'POI'
        - 'GEO_COORDINATE'
        - 'TOPOGRAPHIC_PLACE'

    PlaceUsage:
      description: |
        Provided by OJP.
      type: string
      enum:
        - 'ORIGIN'
        - 'VIA'
        - 'DESTINATION'

    PointOfInterest:
      description: |
        A type of place to or through which passengers may wish to navigate as part of
        their journey and which is modelled in detail by journey planners. Provided by OJP.
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          additionalProperties: false
          required:
            - name
            - code
          properties:
            name:
              description: |
                Name or description of point of interest for use in passenger information.
              type: string
              examples:
                - Park Rozenrust
            code:
              description: |
                id of the Point of Interest.
              type: string
            ref:
              $ref: '#/components/schemas/PointOfInterestRef'

    PointOfInterestCategory:
      type: object
      additionalProperties: false
      description: |
        A categorization of points of interest in respect of the activities undertaken at them (defined by key-value-pairs). Provided by OJP.
      properties:
        osmTags:
          description: |
            Open Street Map tag structure (key-value)
          type: array
          items:
            $ref: '#/components/schemas/OsmTag'
        pointOfInterestClassifications:
          description: |
            Classification of the POI (when it is not from OSM). The codification of the
            classification Id may include de codification source (for example
            'IGN:[classificationCode]')
          type:
            - 'array'
            - 'null'
          items:
            type: string

    PointOfInterestFilter:
      type: object
      additionalProperties: false
      description: |
        Filter POIs by category. Provided by OJP.
      properties:
        exclude:
          description: |
            Whether carriers are to be included or excluded from the filtering.
          type:
            - 'boolean'
            - 'null'
          default: true
        pointOfInterestCategory:
          description: |
            These POI categories can be used to filter POIs. If more than one is given the filtering
            is by logical 'OR' (when Exclude=FALSE) and logical 'AND' (when Exclude=TRUE).
          type: array
          items:
            $ref: '#/components/schemas/PointOfInterestCategory'

    PointOfInterestRef:
      description: |
        Reference to a Point of Interest. Provided by OJP.
      allOf:
        - $ref: '#/components/schemas/PlaceRef'
        - type: object
          additionalProperties: false
          required:
            - pointOfInterestRef
          properties:
            pointOfInterestRef:
              type: string

    Polygon:
      type: object
      additionalProperties: false
      required:
        - edges
      properties:
        edges:
          type: array
          items:
            $ref: '#/components/schemas/GeoPosition'
          minItems: 1

    Price:
      type: object
      additionalProperties: false
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          description: |
            amount in cents
          type: integer
          format: int32
        scale:
          description: |
            scale of the amount - the number of positions after the comma
          type:
            - 'integer'
            - 'null'
          format: int32
          default: 2
        vats:
          type: array
          items:
            $ref: '#/components/schemas/VAT'
        appliedCurrenyConversion:
            $ref: '#/components/schemas/CurrencyConversion'
          
    CurrencyConversion:
      description: | 
        details on a currency conversion applied
      required:  
        - originalCurrency
        - origionalAmount
      properties:
        description:
          description: |
            description of the conversion, e.g. rate, rounding rules, reference to rules
          type: string
        originalCurrency:
          $ref: '#/components/schemas/Currency'
        originalAmount:
          description: |
            amount in cents
          type: integer
          format: int32
        scale:
          description: |
            scale of the amount - the number of positions after the comma
          type: 
            - integer
            - 'null'
          format: int32
          default: 2
        appliedRate:
          type: number         
        originalVats:
          type: array
          items:
            $ref: '#/components/schemas/VAT'     

    Problem:
      type: object
      additionalProperties: false
      description: |
        Problem Details for HTTP APIs (RFC 9457) defines a 'problem detail' as a way
        to carry machine-readable details of errors in a HTTP response to avoid
        the need to define new error response formats for HTTP APIs.
        See: https://tools.ietf.org/html/rfc9457
      properties:
        code:
          description: |
            optional in version 3.1, will be made mandatory in upcoming releases
          type:
            - 'string'
            - 'null'
        type:
          description: |
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          type:
            - 'string'
            - 'null'
          format: uri
          default: 'about:blank'
          examples:
            - https://example.com/probs/passenger-too-young
        title:
          description: |
            A short, summary of the problem type. Written in English and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized);
          type:
            - 'string'
            - 'null'
          examples:
            - Service Unavailable
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 100
          maximum: 599
          examples:
            - 503
        detail:
          description: |
            A human readable explanation specific to this occurrence
            of the problem.
          type:
            - 'string'
            - 'null'
          examples:
            - Connection to database timed out
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
          type:
            - 'string'
            - 'null'
          format: uri
        pointers:
          type:
            - 'array'
            - 'null'
          items:
            $ref: '#/components/schemas/ProblemPointer'


    ProblemCollection:
      type: object
      required:
        - problems
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'

    ProblemPointer:
      type: object
      additionalProperties: false
      description: |
        Problem Details for HTTP APIs (RFC 9457) defines a 'problem detail' as a way
        to carry machine-readable details of errors in a HTTP response to avoid
        the need to define new error response formats for HTTP APIs.
        See: https://tools.ietf.org/html/rfc9457
      properties:
        code:
          description: |
            optional in version 3.1, will be made mandatory in upcoming releases
          type:
            - 'string'
            - 'null'
        type:
          description: |
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          type:
            - 'string'
            - 'null'
          format: uri
          default: 'about:blank'
          examples:
            - https://example.com/probs/passenger-too-young
        title:
          description: |
            A short, summary of the problem type. Written in English and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized);
          type:
            - 'string'
            - 'null'
          examples:
            - Service Unavailable
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 100
          maximum: 599
          examples:
            - 503
        detail:
          description: |
            A human readable explanation specific to this occurrence
            of the problem.
          type:
            - 'string'
            - 'null'
          examples:
            - Connection to database timed out
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
          type:
            - 'string'
            - 'null'
          format: uri
        requestPointer:
          description: |
            A pointer to the attribute in the request for the problem.
          type:
            - 'string'
            - 'null'
          examples:
            - '#/offers[1]/reservationSelections[1]/reservationId'
        responsePointer:
          description: |
            A pointer to the attribute in the response for the problem.
          type:
            - 'string'
            - 'null'
          examples:
            - '#/booking/bookedOffers[4]/reservations[1]/id'
        originator:
          description: |
            Identifier to the origin server for this occurrence of the problem.
          type:
            - 'string'
            - 'null'
          examples:
            - IMS1

    Product:
      type: object
      additionalProperties: false
      description: |
        Structured description of the product, its name, comfort and sales / after-sales conditions
      required:
        - id
        - code
        - owner
        - flexibility
      properties:
        id:
          description: |
            id of the product
          type: string
        summary:
          description: |
            A human-readable description of the product.
          type:
            - 'string'
            - 'null'
        type:
          $ref: '#/components/schemas/ProductType'
        code:
          description: |
            The product code expressed in the provider system (could be a
            mapping from an even lower-level provider).
          type: string
          examples:
            - PT00AD
        description:
          description: |
            Textual description of the product.
          type:
            - 'string'
            - 'null'
        owner:
          $ref: '#/components/schemas/CompanyRef'
        conditions:
          description: |
            Structured description of the sales or after-sales conditions.
          type: array
          items:
            $ref: '#/components/schemas/Condition'
        flexibility:
          $ref: '#/components/schemas/Flexibility'
        serviceClass:
          $ref: '#/components/schemas/ServiceClass'
        travelClass:
          $ref: '#/components/schemas/TravelClass'
        fulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
        isTrainBound:
          type:
            - 'boolean'
            - 'null'
          default: false
        isReturnProduct:
          type:
            - 'boolean'
            - 'null'
          default: false
        serviceConstraintText:
          type:
            - 'string'
            - 'null'
        carrierConstraintText:
          type:
            - 'string'
            - 'null'
        descriptiveTexts:
          type: array
          items:
            $ref: '#/components/schemas/TextElement'
        tariff:
          description: |
            Mapping to Tariff 42 of IRS-90918-3 (Hermes/Hosa). Helps the H2O converter in mapping
            offers to a requested tariff. See legacyReservationParameter.tariff in OSDM offline.
          type:
            - 'string'
            - 'null'
        combinationTags:
          type: array
          items:
            $ref: '#/components/schemas/CombinationTag'
        productTags:
          description:
            product tags associated with the product that can be used to search
            for offers. This can be omitted outside of the product master data
            service
          type:
            - 'array'
            - 'null'
          items:
            type: string
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ProductRequestOfferSelection:
      type: object
      additionalProperties: false        
      description: |
        product selection by product code or product tag for an offer request (exactly one of `productCode` and `productTag` must be provided). The number of items indicates the quantity 
        to be required. Passengers must be referenced in case the product is intended for passengers.
      properties:
          productCode:
            type: string
            examples:
             - PT00AD                    
          productTag:
            type: string
          numberOfItmes:
            type: 
              - integer
              - 'null'
            format: int32
            minValue: 1
          externalPassengerRefs:
            type: array
            items:
              type: string

    ProductSpecification:
      type: object
      additionalProperties: false
      description: |
        Structured description of the product, its name, comfort and sales / after-sales conditions
      required:
        - id
        - code
        - owner
        - flexibility
      properties:
        id:
          description: |
            id of the product
          type: string
        summary:
          description: |
            A human-readable description of the product.
          $ref: '#/components/schemas/Text'
        type:
          $ref: '#/components/schemas/ProductType'
        code:
          description: |
            The product code expressed in the provider system (could be a
            mapping from an even lower-level provider).
          type: string
          examples:
            - PT00AD
        description:
          description: |
            Textual description of the product.
          $ref: '#/components/schemas/Text'
        owner:
          $ref: '#/components/schemas/CompanyRef'
        conditions:
          description: |
            Structured description of the sales or after-sales conditions.
          type: array
          items:
            $ref: '#/components/schemas/ConditionSpecification'
        flexibility:
          $ref: '#/components/schemas/Flexibility'
        serviceClass:
          $ref: '#/components/schemas/ServiceClass'
        travelClass:
          $ref: '#/components/schemas/TravelClass'
        fulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
        isTrainBound:
          type:
            - 'boolean'
            - 'null'
          default: false
        isReturnProduct:
          type:
            - 'boolean'
            - 'null'
          default: false
        serviceConstraintText:
          $ref: '#/components/schemas/Text'
        carrierConstraintText:
          $ref: '#/components/schemas/Text'
        descriptiveTexts:
          type: array
          items:
            $ref: '#/components/schemas/Text'
        combinationTags:
          type: array
          items:
            $ref: '#/components/schemas/CombinationTag'
        productTags:
          description:
            product tags associated with the product that can be used to search
            for offers. This can be omitted outside of the product master data
            service
          type: 'array'
          items:
            type: string
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ProductTag:
      description: |
        Values from the [Product Tags Code List](https://osdm.io/spec/catalog-of-code-lists/#ProductTags)
        Known values:
        - SPLIT_RESERVATION
          Indicate for the provider that the distributor is prepared to get reservations including a split inside the reservation
          Without this indication the provider is not allowed to use the SplitSection Object inside a reservation. 
          The implementation of SPLIT_RESERVATION is not recommended. To provide reservations that do not cover a full leg 
          multiple reservations as offerParts should be created.
        - CARD_LOST
          Tag used to request a non-trip offer to replace a lost card. This applies to physical cards only.
        - TICKET_LOST
          Tag used to request a non-trip offer to replace a lost ticket. This applies to physical tickts only.
        - Product Types
          All product types can be used as Product Tags in the search
      type: string
      x-extensible-enum:
        - 'SPLIT_RESERVATION'
        - 'CARD_LOST'
        - 'TICKET_LOST'
        - 'ADMISSION_MULTI_RIDE'
        - 'ADMISSION_POINT2POINT'
        - 'ADMISSION_PASS'
        - 'UPGRADE_PASS'
        - 'UPGRADE_POINT2POINT'
        - 'UPGRADE_MULTI_RIDE'
        - 'RESERVATION'
        - 'ANCILLARY_SERVICE'
        - 'ANCILLARY_ITEM'
        - 'REDUCTION_CARD'

    ProductType:
      description: |
        General product types harmonized across fare providers. (More to be added, use null for types not listed yet.)
        Values from the [Product Type Code List](https://osdm.io/spec/catalog-of-code-lists/#ProductTypes)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'ADMISSION_PASS'
        - 'ADMISSION_MULTI_RIDE'
        - 'ADMISSION_POINT2POINT'
        - 'UPGRADE_PASS'
        - 'UPGRADE_MULTI_RIDE'
        - 'UPGRADE_POINT2POINT'
        - 'RESERVATION'
        - 'ANCILLARY_SERVICE'
        - 'ANCILLARY_ITEM'
        - 'REDUCTION_CARD'

    ProductCategory:
      type: object
      additionalProperties: false
      description: |
        Product category based on NeTEx/SIRI. A product category is a classification for vehicle journeys
        to express some common properties of journeys for marketing and fare products. Provided by OJP.
      required:
        - name
        - shortName
        - productCategoryRef
      properties:
        name:
          description: |
            Full name of this product category, e.g. 'TGV Lyria' in Switzerland and France.
            UIC: Long name of Service Brand
          type: string
          examples:
            - TGV Lyria
        shortName:
          description: |
            Short name or acronym of the product category, likely to be published, e.g. 'TGV'
            UIC: Abbreviation of Service Brand
          type: string
          examples:
            - TGV
        productCategoryRef:
          $ref: '#/components/schemas/ProductCategoryRef'

    ProductCategoryRef:
      type:
        - 'string'
        - 'null'
      description: |
        Reference to a product category. Product categories should be defined once and used
        uniformly in all channels (e.g. NeTEx, SIRI, OJP). Provided by OJP.
      examples:
        - urn:uic:sbc:76

    ProductCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        products:
          description: |
            The list of all products available to the caller.
          type: array
          items:
            $ref: '#/components/schemas/ProductSpecification'

    ProductLegAssociation:
      type: object
      additionalProperties: false
      description: |
        In offer mode, in almost all cases exactly one product is referenced. Only on some French
        trips consisting of a TGV and a TER two products need to be used.
        In fare mode, no product exists as first needs to created from the different fares.
      required:
        - productId
      properties:
        productId:
          type: string
        legIds:
          description: |
            indices of the legs in the trip given by the provider of the offer
          type:
            - 'array'
            - 'null'
          items:
            type: string

    ProductResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        product:
          $ref: '#/components/schemas/Product'

    ProductSearchRequest:
      type: object
      additionalProperties: false
      description: |
        Search criteria to search for products
      properties:
        id:
          description: |
            id of the product
          type: 
            - string
            - 'null'
        types:
          type: array
          items:          
            $ref: '#/components/schemas/ProductType'
        codes:
          description: |
            The product codees to be searched.
          type: array
          items:      
            type: string
        flexibilities:
          type: array
          items: 
            $ref: '#/components/schemas/Flexibility'
        serviceClasses:
          type: array
          items:           
            $ref: '#/components/schemas/ServiceClass'
        travelClasses:
          type: array
          items:           
            $ref: '#/components/schemas/TravelClass'
        fulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
        productTags:
          description:
            product tags associated with the product
          type: array
          items:
            type: 
              - string
              - 'null'

    ProductSearchResponse:
      type: object
      additionalProperties: false
      description: |
        Result of a product search
      required:
        - products
      properties:
        products:
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/Product'
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'             
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ProductTagsResponse:
      type: object
      additionalProperties: false
      description: |
        Result of a product search
      required:
        - productTagNames
        - productTagGroups
      properties:
        productTagNames:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/ProductTagName'        
        productTagGroups:
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/ProductTagGroup'
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'             


    ProductTagName:
      description: |
        Product tags including a description,  The short text of the description should serve as a name on a button.
      required:
        - tag
        - description  
      properties:
        tag:
          $ref: '#/components/schemas/ProductTag'  
        description:
          $ref: '#/components/schemas/Text'              

    ProductTagGroup:
      description: |
        Group of product tags with a description. 
      required:
        - code
        - description          
      properties:
        code:
          type: string  
          maxLength: 1024          
        description:
          $ref: '#/components/schemas/Text'
        productTags:
          type: array
          minItems: 1
          maxItems: 10000
          items:
            $ref: '#/components/schemas/ProductTag'      

    ProductSummary:
      type: object
      additionalProperties: false
      description: |
        Summary of the booking's underlining products.
      required:
        - id
        - description
        - code
      properties:
        id:
          type: string
        description:
          type: string
        code:
          type: string

    PromotionCode:
      type: object
      additionalProperties: false
      description: |
        The promotion code is a token that reduces the price at POST booking time OR
        Token that reduces the price at POST trip-offer-collection time OR
        Token to receive offers that are not available without it.
      required:
        - code
      properties:
        code:
          description: |
            The code issued by the issuer
          type: string
          examples:
            - SPRING_DISCOUNT
        issuer:
          description: |
            The party that issues the promotion code, in case of a railway it's its RICS code
          type:
            - 'string'
            - 'null'

    Purchaser:
      type: object
      additionalProperties: false
      description: |
        Purchaser information. Exactly one of `detail` or `companyDetails` must be provided.
      properties:
        externalRef:
          description: |
            A stable reference to a purchaser from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.
          type:
            - 'string'
            - 'null'
        detail:
          $ref: '#/components/schemas/PersonDetail'
        companyDetails:
          $ref: '#/components/schemas/CompanyDetail'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    PurchaserResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        purchaser:
          $ref: '#/components/schemas/Purchaser'

    PurchaserSearchRequest:
      type: object
      additionalProperties: false
      properties:
        companyName:
          type:
            - 'string'
            - 'null'
        companyRef:
          $ref: '#/components/schemas/CompanyRef'
        firstName:
          type:
            - 'string'
            - 'null'
        lastName:
          type:
            - 'string'
            - 'null'
        dateOfBirth:
          type:
            - 'string'
            - 'null'
          format: date
        phoneNumber:
          type:
            - 'string'
            - 'null'
        email:
          type:
            - 'string'
            - 'null'

    PurchaserSpecification:
      type: object
      additionalProperties: false
      description: |
        Minimal specification of a purchaser to request booking of an offer. Exactly one of `detail` or `companyDetails` must be provided.
      properties:
        externalRef:
          description: |
            A stable reference to a purchaser from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.
          type:
            - 'string'
            - 'null'
        detail:
          $ref: '#/components/schemas/PersonDetail'
        companyDetails:
          $ref: '#/components/schemas/CompanyDetail'

    Quantity:
      type: object
      additionalProperties: false
      description: |
        Generic entity to model a quantity.
      required:
        - value
        - unit
      properties:
        value:
          type: number
          format: float
        unit:
          type: string
          examples:
            - kg

    RectangleGeometry:
      type: object
      additionalProperties: false
      description: |
        Describes a two-dimensional rectangle
      required:
        - position
        - dimension
      properties:
        position:
          $ref: '#/components/schemas/GridPosition'
        dimension:
          $ref: '#/components/schemas/GridDimension'

    ReductionCardAccount:
      allOf:
        - $ref: '#/components/schemas/AbstractTravelAccount'
        - type: object
          additionalProperties: false
          required:
            - type
          properties:
            type:
              $ref: '#/components/schemas/ReductionCardType'

    ReductionCardTypeCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        reductionCardTypes:
          type: array
          items:
            $ref: '#/components/schemas/ReductionCardType'

    ReductionCardType:
      type: object
      additionalProperties: false
      required:
        - code
        - issuer
        - name
      properties:
        code:
          type: string
        shortCode:
          description: |
            reduction card code to be used in bar codes. The code is defined within
            the context of the issuer and is required to be very short (usually 1-4 positions).
            The code is used in ticket bar codes to indicate required checks of this reduction card during travel.
          type:
            - 'string'
            - 'null'
        issuer:
          $ref: '#/components/schemas/CompanyRef'
        name:
          $ref: '#/components/schemas/Text'
        cardIdRequired:
          description: |
            the card id must be delivered in online sales
          type:
            - 'boolean'
            - 'null'
          default: false
        includedCardTypes:
          description: |
            This card includes the listed cards
          type: array
          items:
            $ref: '#/components/schemas/CardTypeReference'
        serviceClassTypes:
          description: |
            list of service classes where this card applies
          type: array
          items:
            $ref: '#/components/schemas/ServiceClassType'
          maxItems: 4
        travelClassTypes:
          description: |
            list of travel classes where this card applies
          type: array
          items:
            $ref: '#/components/schemas/TravelClass'
          maxItems: 2
        reductionsGranted:
          description: reductions that will be granted by this reduction card type
          type: array
          items:
             $ref: '#/components/schemas/ReductionGranted'
          minItems: 1
          maxItems: 500            
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ReductionGranted:
      type: object
      additionalProperties: false
      description: |
        reductions granted by a reduction card type. Eigther carrier or country must be provided. 
      required:
        - description
      properties:
        carrier:
          $ref: '#/components/schemas/CompanyRef'
        country:
          $ref: '#/components/schemas/CountryCode'
        transportModes:
          description: transport modes where the reduction is granted, any mode of the carrier in case the list is not provided.       
          type: array
          items:
            $ref: '#/components/schemas/Mode'        
        serviceBands:
          description: ServiceBrands where the reduction is granted, any service brand of the carrier in case the list is not provided.
          type: array
          items:
            $ref: '#/components/schemas/ServiceBrandCode'
        description:
          description:
            text describing the reduction granted. In the context of master data translations should be provided.
          $ref: '#/components/schemas/Text'
        percentage:
          type:  "number"
          format: float

    RefundOffer:
      type: object
      additionalProperties: false
      required:
        - id
        - createdOn
        - validFrom
        - validUntil
        - status
        - refundedFulfillments
        - refundFee
        - refundableAmount
      properties:
        id:
          description: |
            id of the refund offer
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the refund offer.
          type:
            - 'string'
            - 'null'
          examples:
            - Refund Offer for Paris-Barcelona Andre Dupont 2022-07-23
        createdOn:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
        validUntil:
          description: |
            time until the offer can be used
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/RefundStatus'
        reimbursementStatus:
          $ref: '#/components/schemas/ReimbursementStatus'
        appliedOverruleCode:
          $ref: '#/components/schemas/OverruleCode'
        refundedFulfillments:
          description: | 
            fulfillments to be refunded or replaced. This might differ from the requested refund specification in case the original request did not include all related fulfillments or booking parts. It must also incude the references to booking parts and passenger ids which can be omitted in teh request in case all part or passengers related to a fulfillment are refunded. 
          type: array
          items:
            $ref: '#/components/schemas/RefundedFulfillmentSpecification'
          minItems: 1          
        refundFee:
          $ref: '#/components/schemas/Price'
          description: |
            Total Amount kept by the carrier and/or distributor
        refundableAmount:
          $ref: '#/components/schemas/Price'
          description: |
            Amount refunded to the purchaser
        refundOfferBreakdown:
          description: |
            breakdown of the refund offer
          type: array
          items:
            $ref: '#/components/schemas/RefundBreakdownItem'
        reimbursementMethod:
          $ref: '#/components/schemas/ReimbursementMethod'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    RefundBreakdownItem:
      type: object
      required:
        - refundFee
        - refundableAmount
        - bookingParts
      properties:
        refundFee:
          description: Amount kept by the carrier and/or the distributor
          $ref: '#/components/schemas/Price'
        refundAmount:
          description: Amount to be returned to the purchaser
          $ref: '#/components/schemas/Price'
        bookingParts:
          type: array
          items:
            $ref: '#/components/schemas/BookingPartReference'

    RefundOfferCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        refundOffers:
          type: array
          items:
            $ref: '#/components/schemas/RefundOffer'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    RefundOfferPatchRequest:
      type: object
      additionalProperties: false
      description: |
        Changes the refund offer to status CONFIRMED. De-confirmation by setting PROPOSED status is not supported by API.
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/RefundStatus'

    RefundOfferRequest:
      type: object
      additionalProperties: false
      description: |
        Request for a refund offer.
        Fulfillments can be provided in case the booking contains multiple individual fulfillments.
      required:
        - refundSpecifications
      properties:
        refundSpecifications:
          description: |
            Specification of Fulfillment IDs to refund.
            To do a partial refund, include booking part IDs to refund from the fulfillment.
          type: array
          items:
            $ref: '#/components/schemas/RefundSpecification'
          minItems: 1
        overruleCode:
          $ref: '#/components/schemas/OverruleCode'
        refundDate:
          description: |
            Indicates for passes the date taken as reference to compute possible partial refund. It is also the date taken
            as reference to invalidate the pass partially refunded.
          type:
            - 'string'
            - 'null'
          format: date-time

    RefundOfferResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        refundOffer:
          $ref: '#/components/schemas/RefundOffer'
        appliedFees:
          description: |
            applied fees referenced in the refund offer. Providing the applied fees is 
            mandatory in case the refund offer is confirmed. The applied fees are stored in the booking and are returned here additionally for convenience.
          type: array
          items:
             $ref: '#/components/schemas/AppliedFee'   

    RefundedFulfillmentSpecification:
      type: object
      description: |
        description of fulfillments, booking parts and passenger ids included in a refund.
      required:
        - fulfillmentId
      properties:
        fulfillmentId:
          description: |
            id of the fulfillment where some part(s) should be removed
          type: string
        fulfillmentSummary:
          description: A human-readable description of the fulfillment.
          type: string
        bookingPartIds:
          description: ids of booking parts to be removed from the fulfillment
          type: array
          items:
            type: string
            maxLength: 32768
        passengerIds:
          type: array
          description: ids of passengers to be removed from the fulfillment
          items:
            type: string      

    RefundSpecification:
      type: object
      required:
        - fulfillmentId
      properties:
        fulfillmentId:
          description: |
            id of the fulfillment where some part(s) should be removed
          type: string
        bookingPartIds:
          description: ids of booking parts to be removed from the fulfillment
          type: array
          items:
            type: string
            maxLength: 32768
        passengerIds:
          type: array
          description: ids of passengers to be removed from the fulfillment
          items:
            type: string

    RefundStatus:
      type: string
      enum:
        - 'PROPOSED'
        - 'CONFIRMED'

    RefundType:
      type: string
      enum:
        - 'YES'
        - 'NO'
        - 'WITH_CONDITION'

    RegionalConstraint:
      type: object
      additionalProperties: false
      description: |
        Regional constraint of the fare- offline bulk data use the id of connection points whereas  in an online environment the connection point is included
      required:
        - regionalValidities
      properties:
        entryConnectionPoint:
          $ref: '#/components/schemas/FareConnectionPoint'
        exitConnectionPoint:
          $ref: '#/components/schemas/FareConnectionPoint'
        regionalValidities:
          type: array
          items:
            $ref: '#/components/schemas/RegionalValidity'
          minItems: 1
        distance:
          description: |
            Distance in km for statistics
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0

    RegionalValidity:
      type: object
      additionalProperties: false
      description: |
        One of the elements Zone, ViaStation, TrainLink, Line, or Polygon defining the regional validity
      properties:
        seqNb:
          description: |
            order number of the list item
          type:
            - 'integer'
            - 'null'
          format: int32
        zone:
          $ref: '#/components/schemas/Zone'
        route:
          $ref: '#/components/schemas/Route'
        trainLink:
          $ref: '#/components/schemas/TrainLink'
        line:
          $ref: '#/components/schemas/Line'
        polygon:
          $ref: '#/components/schemas/Polygon'
        serviceConstraint:
          $ref: '#/components/schemas/ServiceConstraint'

    RegionalValiditySummary:
      type: object
      additionalProperties: false
      required:
        - description
        - shortDescription
      properties:
        description:
          type: string
          minLength: 1
        shortDescription:
          type:
            - 'string'
            - 'null'
          minLength: 1

    RegulatoryCondition:
      description: |
        General conditions applied to cover legal regulations within the area of validity. Allocators must
        reflect these terms and conditions in the conditions of combined offers and indicate them to the customer
        where required. Which indications are mandatory to be shown to the customer is defined in the SCICs.

        Valid Values:
        - CIV: terms and conditions according to COTIV regulation
        - MD: terms and conditions according to SMPS regulation
        - EU_PRR: terms and conditions according to EU-PRR regulation
      type: string
      x-extensible-enum:
        - 'CIV'
        - 'MD'
        - 'EU_PRR'

    Reimbursement:
      type: object
      additionalProperties: false
      description: |
        Customers who have bought a ticket which allows reimbursement and which have not traveled or traveled partially only can claim to be reimbursed. The customer must prove that he has not or only partially used the ticket. A partial use might be a only a part of the trip was traveled or only some of the travelers were traveling or a combination of both.
      required:
        - id
        - request
        - status
      properties:
        id:
          type: string
        request:
          $ref: '#/components/schemas/ReimbursementRequest'
        status:
          $ref: '#/components/schemas/BackOfficeStatus'
        missingInformation:
          type:
            - 'array'
            - 'null'
          items:
            type: string
        decision:
          $ref: '#/components/schemas/ReimbursementDecision'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ReimbursementDecision:
      type: object
      additionalProperties: false
      description: |
        Decision whether or not the reimbursement is granted. Contains information on the amount reimbursed.
      properties:
        amount:
          $ref: '#/components/schemas/Price'
        voucher:
          $ref: '#/components/schemas/FulfillmentDocument'
        explanation:
          $ref: '#/components/schemas/SupportingDocument'
        shortExplanation:
          type:
            - 'string'
            - 'null'

    ReimbursementMethod:
      description: |
        reimbursement methods to inform on restrictions of the payment method
      type: object
      properties:
        paymentMethod:
          description: |
            payment method to be used for the reimbursement
          type: string
          x-extensible-enum:
            - 'VOUCHER'
            - 'ORIGINAL_ACCOUNT'

    ReimbursementPatchRequest:
      type: object
      additionalProperties: false
      required:
        - additionalDocuments
        - updatedStatus
      properties:
        additionalDocuments:
          type: array
          items:
            $ref: '#/components/schemas/SupportingDocument'
          minItems: 1
        updatedStatus:
          $ref: '#/components/schemas/BackOfficeStatus'

    ReimbursementReason:
      description: |
        Reason why the booking should be reimbursed.
      type: string
      x-extensible-enum:
        - 'STRIKE'
        - 'TICKET_NOT_USED'
        - 'CONTINUOUS_SERVICE_VEHICLE_BATTRY_EMPTY'
        - 'CONTINUOUS_SERVICE_VEHICLE_BROKEN'
        - 'CONTINUOUS_SERVICE_VEHICLE_NOT_FOUND'
        - 'CONTINUOUS_SERVICE_VEHICLE_DID_NOT_ARRIVE'
        - 'CONTINUOUS_SERVICE_USAGE_STARTING_FAILED'
        - 'CONTINUOUS_SERVICE_USAGE_ENDING_FAILED'
        - 'CONTINUOUS_SERVICE_USAGE_REPORT_WRONG'
    ReimbursementRequest:
      type: object
      additionalProperties: false
      description: |
        The reimbursement process is used to support refunds which are not covered by the online refund/exchange processes, e.g.: Partial refund of a trip (Trip was Hamburg - Munich, but only Hamburg - Kassel was used), Refund outside of rules due to good will. This is a manual back office process within the provider's organization which is triggered by this request. State changes can be signaled by web hook events.
      required:
        - reimbursementReason
        - fulfillmentIds
      properties:
        reimbursementReason:
          $ref: '#/components/schemas/ReimbursementReason'
        reimbursementDate:
          type:
            - 'string'
            - 'null'
          format: date-time
        reimbursedPassengerIds:
          description: |
            Ids of the passengers
            Providing the passengerIds is required for passenger transport. There are uses cases (e.g. sale of merchandising articles) where no passenger is involved. Only in these cases it is allowed to omit the passengerIds.           
          type: array
          items:
            type: string
          minItems: 1
        tripSections:
          type: array
          items:
            $ref: '#/components/schemas/TripSection'
        fulfillmentIds:
          type: array
          items:
            type: string
          minItems: 1
        supportingDocuments:
          type: array
          items:
            $ref: '#/components/schemas/SupportingDocument'

    ReimbursementResponse:
      type: object
      additionalProperties: false
      description: |
        Response to a reimbursement request, containing a state and a decision.
      required:
        - reimbursement
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        reimbursement:
          $ref: '#/components/schemas/Reimbursement'

    ReimbursementStatus:
      type: string
      enum:
        - 'IMMEDIATE'
        - 'DELAYED'
      default: 'IMMEDIATE'

    ReleaseOffer:
      type: object
      additionalProperties: false
      required:
        - id
        - createdOn
        - validFrom
        - validUntil
        - releasedFulfillments
      properties:
        id:
          description: |
            id of the release offer
          type: string
          maxLength: 32768
        summary:
          description: |
            A human-readable description of the release offer.
          type:
            - 'string'
            - 'null'
        createdOn:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
        validUntil:
          description: |
            time until the offer can be used
          type: string
          format: date-time
        releasedFulfillments:
          description: | 
            fulfillments to be refunded or replaced. This might differ from the requested refund specification in case the original request did not include all related fulfillments or booking parts. It must also incude the references to booking parts and passenger ids which can be omitted in teh request in case all part or passengers related to a fulfillment are refunded. 
          type: array
          items:
            $ref: '#/components/schemas/RefundedFulfillmentSpecification'
          minItems: 1 
        appliedOverruleCode:
          $ref: '#/components/schemas/OverruleCode'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ReleaseOfferCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        releaseOffers:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseOffer'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ReleaseOfferPatchRequest:
      type: object
      additionalProperties: false
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/ReleaseStatus'

    ReleaseOfferRequest:
      type: object
      additionalProperties: false
      properties:
        releaseSpecifications:
          description: |
            To do a partial release provide the fulfillmentIds affected and point out what to release
          type: array
          items:
            $ref: '#/components/schemas/ReleaseSpecification'
        overruleCode:
          $ref: '#/components/schemas/OverruleCode'

    ReleaseOfferResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        releaseOffer:
          $ref: '#/components/schemas/ReleaseOffer'

    ReleaseSpecification:
      type: object
      required:
        - fulfillmentId
      properties:
        fulfillmentId:
          description: |
            id of the fulfillment where some part(s) should be removed
          type: string
        bookingPartIds:
          description: ids of booking parts to be removed from the fulfillment
          type: array
          items:
            type: string
            maxLength: 32768
        passengerIds:
          type: array
          description: ids of passengers to be removed from the fulfillment
          items:
            type: string

    ReleaseStatus:
      type: string
      enum:
        - 'PROPOSED'
        - 'CONFIRMED'

    RemarkType:
      description: |
        Remark concerning the place (e.g. to be used in a tool tip).
        Code list according to UIC90918-1
        Known Values:
        - MIGHT_HAVE_TABLE: place might have a table
        - MIGHT_NOT_HAVE_TABLE: table at the place might be missing
        - MIGHT_HAVE_DIFFERENT_DIRECTION: place might have a different direction
        - MIGHT_HAVE_TABLE_AND_DIFFERENT_DIRECTION: place might have a table and a different direction
        - MIGHT_NOT_HAVE_TABLE_AND_MIGHT_HAVE_DIFFERENT_DIRECTION: table at the place might be missing and place might have a different direction
        - MIGHT_BE_IN_COMPARTMENT: place might be in compartment
        - MIGHT_BE_IN_OPEN_SPACE: place might be in open space
      type: string
      x-extensible-enum:
        - 'MIGHT_HAVE_TABLE'
        - 'MIGHT_NOT_HAVE_TABLE'
        - 'MIGHT_HAVE_DIFFERENT_DIRECTION'
        - 'MIGHT_HAVE_TABLE_AND_DIFFERENT_DIRECTION'
        - 'MIGHT_NOT_HAVE_TABLE_AND_MIGHT_HAVE_DIFFERENT_DIRECTION'
        - 'MIGHT_BE_IN_COMPARTMENT'
        - 'MIGHT_BE_IN_OPEN_SPACE'

    RequestedInformation:
      type:
        - 'string'
        - 'null'
      maxLength: 32768
      description: |
        Boolean-expression indicating the data that must be set in the data model in order to proceed to next step of the process. 

        The syntax and semantics of the expression is described in detail in the OSDM documentation.

    Reservation:
      description: |
        Reservation includes the reference to the in the initial offer.
        The offer needs to be updated with the selected places before the confirmation
        which creates the reservation details including the reserved places.
      allOf:
        - $ref: '#/components/schemas/AbstractBookingPart'
        - type: object
          additionalProperties: false
          properties:
            placeSelection:
              $ref: '#/components/schemas/PlaceSelection'
            placeAllocation:
              $ref: '#/components/schemas/PlaceAllocation'
            feeRefs:
              type: array
              items:
                $ref: '#/components/schemas/BookingPartReference'
            ancillaryRefs:
              type: array
              items:
                $ref: '#/components/schemas/BookingPartReference'
            availablePlacePreferences:
              description:
                options for place selection in case the place selection is made
                after the pre-booking.
              type: array
              items:
                $ref: '#/components/schemas/AvailablePlacePreferences'
            distributionMode:
                $ref: '#/components/schemas/DistributionMode'    

    ReservationGroup:
      type: object
      additionalProperties: false
      required:
        - reservationRefs
      properties:
        reservationRefs:
          type: array
          items:
            $ref: '#/components/schemas/OfferPartReference'
          minItems: 1

    ReservationOfferPart:
      description: |
        Reservation includes the reference to the in the initial offer.
        The offer needs to be updated with the selected places before the confirmation
        which creates the reservation details including the reserved places.
      allOf:
        - $ref: '#/components/schemas/AbstractOfferPart'
        - type: object
          additionalProperties: false
          properties:
            ancillaries:
              type: array
              items:
                $ref: '#/components/schemas/AncillaryRelation'
            availablePlaces:
              type: array
              items:
                $ref: '#/components/schemas/AvailablePlace'
            availablePlacePreferences:
              type: array
              items:
                $ref: '#/components/schemas/AvailablePlacePreferences'
            feeRefs:
              type: array
              items:
                $ref: '#/components/schemas/OfferPartReference'
            numberOfPrivateCompartments:
              type:
                - 'integer'
                - 'null'
              format: int32

    ReservationRelation:
      type: object
      additionalProperties: false
      required:
        - minGroupItemsToBeBooked
        - reservationGroup
      properties:
        isIncluded:
          description:
            The reservation(s) linked via this relation are included in the
            parent offer part.
          type: boolean
          default: false
        minGroupItemsToBeBooked:
          type: integer
          format: int32
        maxGroupItemsToBeBooked:
          type:
            - 'integer'
            - 'null'
          format: int32
        reservationGroup:
          $ref: '#/components/schemas/ReservationGroup'

    ReservedPlace:
      type: object
      additionalProperties: false
      description: |
        In distributor mode placeProperties are mandatory to be returned.
      required:
        - id
        - passengerIds
        - vehicleNumber
        - coachNumber
      properties:
        id:
          type: string
        passengerIds:
          description: |
            Id of the passenger
          type: array
          items:
            type: string
          minItems: 1
        vehicleNumber:
          description: |
            vehicle number (e.g. train number)
          type: string
        coachNumber:
          type: string
        placeDescription:
          description: |
            description of the places (e.g. 11-35,51)
          type: string
        placeNumbers:
          description: |
            list of individual place numbers
          type:
            - 'array'
            - 'null'
          items:
            type: string
        placeProperties:
          description: |
            place properties to be indicated to the customer
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty'
        splitSection:
          description: |
            Indication of the covered part of a leg in case the reserved 
            place does not cover the whole leg. This element is allowed 
            on in case the offer was requested using the SPLIT_RESERVATION product tag
            an implementation is not recommended.
          $ref: '#/components/schemas/Section'


    ResourceType:
      type: string
      enum:
        - 'FARE'
        - 'RESERVATION'

    ReturnConstraint:
      type: object
      additionalProperties: false
      description: |
        a return trip with the same carrier must be sold in combination
      required:
        - latestReturn
        - earliestReturn
      properties:
        latestReturn:
          description: |
            number of days after departure or start of validity of the last return
          type: integer
          format: int32
        earliestReturn:
          description: |
            number of days after departure or start of validity of the earliest return
          type: integer
          format: int32
        excludedWeekdays:
          description: |
            weekdays (ISO day of the week, 1 = Monday) between travel and return where travel is not allowed
          type: array
          items:
            type:
              - 'integer'
              - 'null'
            format: int32

    ReturnSearchParameters:
      type: object
      additionalProperties: false
      description: |
        This property can be used in case a return trip is being requested.
        This will allow to benefit from return-specific fares or product

      properties:
        inwardReturnDate:
          description: |
            Needs to be provided when creating the collection of outward travels so that the
            provider knows when a return travel can be expected and propose appropriate
            product and fares.
          type:
            - 'string'
            - 'null'
          pattern: '(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d)'
        outwardOfferIds:
          description: |
            Needs to be provided when creating the collection of inward travels so that the provider
            can relate the inward travels to the outward travels context.
          type:
            - 'array'
            - 'null'
          items:
            type: string
            maxLength: 32768
        outwardOfferTag:
          description: |
            Needs to be provided when creating the collection of inward travels so that the provider
            knows what the outward offer is and and propose compatible offers only if desired or mandatory.
          type:
            - 'string'
            - 'null'

    Route:
      type: object
      additionalProperties: false
      description: |
        Route description including the first and last real stopPoint
      properties:
        routeItem:
          $ref: '#/components/schemas/RouteItem'
        routeItemList:
          description: |
            list of route items referenced within the list
          type: array
          items:
            $ref: '#/components/schemas/RouteItem'

    RouteItem:
      type: object
      additionalProperties: false
      description: |
        Items to compose routes (Note - replaced viaStation, content compliant with viaStation in IRS 90918-4 and 90918-9)
      properties:
        alternativeRouteItemIndices:
          description: |
            list of alternative route parts to be used on this travel path referenced by the index in the provided list of route items
          type:
            - 'array'
            - 'null'
          items:
            type: integer
            format: int32
        carrierConstraint:
          $ref: '#/components/schemas/CarrierConstraint'
        routeItemIndices:
          description: |
            sequence of route items along the travel path referenced by the index in the provided list of route items
          type: array
          items:
            type:
              - 'integer'
              - 'null'
            format: int32
        serviceConstraint:
          $ref: '#/components/schemas/ServiceConstraint'
        station:
          $ref: '#/components/schemas/StopPlace'
        fareReferenceStation:
          $ref: '#/components/schemas/FareReferenceStation'

    Section:
      type: object
      additionalProperties: false
      description: |
        Allows to indicate the sub-part of the trip. LegIds are only relevant if
        a trip can be referenced. When absent, the totality of the trip is priced.
      properties:
        startPlace:
          $ref: '#/components/schemas/PlaceRef'
        startLegId:
          type:
            - 'string'
            - 'null'
        endPlace:
          $ref: '#/components/schemas/PlaceRef'
        endLegId:
          type:
            - 'string'
            - 'null'
        externalTripRef:
          description: reference to a trip in case multiple trips are provided
          type:
            - 'string'
            - 'null'
          maxLength: 32768

    SecurityElementFormat:
      type: string
      enum:
        - 'PNG'
        - 'GIF'
        - 'SVG'
        - 'BINARY'
        - 'TEXT'

    SecurityElementType:
      type: string
      enum:
        - 'VISUAL_ELEMENT'
        - 'BAR_CODE'

    SecurityFeatureType:
      type: object
      additionalProperties: false
      description: |
        Defines type and format of the security feature.
      properties:
        type:
          $ref: '#/components/schemas/SecurityElementType'
        format:
          $ref: '#/components/schemas/SecurityElementFormat'
        symbology:
          $ref: '#/components/schemas/Symbology'

    SelectedAccommodation:
      type: object
      additionalProperties: false
      description: |
        Place selection of places for reservation linked to passengers.
      required:
        - passengerRefs
        - accommodationType
        - accommodationSubType
      properties:
        passengerRefs:
          description: |
            Id of the passenger
          type: array
          items:
            type: string
          minItems: 1
        accommodationType:
          $ref: '#/components/schemas/AccommodationType'
        accommodationSubType:
          $ref: '#/components/schemas/AccommodationSubType'
        placeProperties:
          description: |
            Properties of places as defined in 90810-10.
            selection from the optional place properties provided in the offer
          type:
            - 'array'
            - 'null'
          items:
            $ref: '#/components/schemas/PlaceProperty'

    SelectedPlace:
      type: object
      additionalProperties: false
      description: |
        selected place in case of graphical booking
      required:
        - coachNumber
        - placeNumber
        - passengerRef
      properties:
        coachNumber:
          type: string
        placeNumber:
          type: string
        passengerRef:
          description: |
            Id of the passenger
          type: string

    SelectedReferencePlace:
      type: object
      additionalProperties: false
      description: |
        reference place for an adjacent reservation
      required:
        - coachNumber
        - placeNumber
      properties:
        coachNumber:
          type: string
        placeNumber:
          type: string

    SelectionFee:
      type: object
      description:
        selection fee that will be applied when selecting the place in a
        graphical seat map. (https://osdm.io/spec/processes/#SeatSelectionFees)
      properties:
        price:
          $ref: '#/components/schemas/Price'
      required:
        - price

    ServiceBrandCode:
      type: string
      description: |
        Service brand codes. For public transport, a code list can be found in OSDM's code list. E.g., '163' denotes TGV Lyria and '175' denotes Glacier Express.
      examples:
        - 163
        - 175

    ServiceBrandFilter:
      type: object
      additionalProperties: false
      description: |
        Filter for in/exclusion of service brands. Provided by OJP.
      properties:
        exclude:
          description: |
            Whether service brand in list are to include or exclude from search.
          type:
            - 'boolean'
            - 'null'
          default: true
        serviceBrands:
          description: |
            Reference to service brand codes
          type: array
          items:
            $ref: '#/components/schemas/ServiceBrandCode'

    ServiceClass:
      type: object
      additionalProperties: false
      description: |
        Class of service.
      required:
        - type
        - name
      properties:
        type:
          $ref: '#/components/schemas/ServiceClassType'
        name:
          description: |
            The name the carrier itself uses to designate this specific service class.
          type: string

    ServiceClassType:
      description: |
        Type of quality level, finer grained than the comfort class.
        Values from the [Service Class Code List](https://osdm.io/spec/catalog-of-code-lists/#ServiceClass)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'BEST'
        - 'HIGH'
        - 'STANDARD'
        - 'BASIC'
        - 'ANY_CLASS'

    ServiceConstraint:
      type: object
      additionalProperties: false
      description: |
        Either excluded or included service brands can be set.
      properties:
        restrictedToServiceBrands:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBrandCode'
        excludedServiceBrands:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBrandCode'
        description:
          $ref: '#/components/schemas/Text'

    ServiceDegradation:
      description: |
        enumeration of service degradations
      type: string
      x-extensible-enum:
        - 'RESERVED_PLACES_MISSING'
        - 'BOOKED_ACCOMMODATION_TYPE_MISSING'
        - 'BOOKED_CLASS_MISSING'
        - 'BOOKED_MEAL_MISSING'

    ServiceIcon:
      type: object
      additionalProperties: false
      description: |
        An icon representing a service.
      required:
        - rectangle
        - code
      properties:
        rectangle:
          $ref: '#/components/schemas/RectangleGeometry'
        code:
          $ref: '#/components/schemas/ServiceIconCode'

    ServiceIconCode:
      type: string
      description: |
        See https://osdm.io/spec/catalog-of-code-lists/#GraphicsItems
      examples: 
        - TOILET_ICON        

    ServiceStatus:
      type: object
      additionalProperties: false
      description: |
        Parameters which describe the current status of a dated vehicle journey.
        Provided by OJP.
      properties:
        unplanned:
          description: |
            Whether this trip is an additional one that has not been planned.
          type:
            - 'boolean'
            - 'null'
          default: false
        cancelled:
          description: |
            Whether this trip is cancelled and will not be run.
          type:
            - 'boolean'
            - 'null'
          default: false
        deviation:
          description: |
            Whether this trip deviates from the planned service pattern.
          type:
            - 'boolean'
            - 'null'
          default: false
        occupancy:
          description: |
            Passenger load status on vehicle. If omitted, not known.
            Equivalent to siri:OccupancyEnumeration which describes three values:
            'full', 'seatingAvailable' and 'standingAvailable'.
          type:
            - 'string'
            - 'null'

    ServiceTime:
      type: object
      additionalProperties: false
      description: |
        The time needs to be in Offset Time Format, i.e.  2023-12-03T10:15:30+01:00 as it is important the time zones are important  to show in the timetable.

        Do not use the Coordinated Universal Time (UTC) format, i.e. 2023-12-03T10:15:30Z.

      required:
        - timetabledTime
      properties:
        timetabledTime:
          type:
            - 'string'
            - 'null'
          format: date-time
        estimatedTime:
          type:
            - 'string'
            - 'null'
          format: date-time
        observedTime:
          type:
            - 'string'
            - 'null'
          format: date-time

    SiSType:
      description: |
        Type of the exchange of control data for security in system implementations.
        Values from the [Control Data Exchange Type Code List](https://osdm.io/spec/catalog-of-code-lists/#ControlDataExchangeType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'REGISTRY'
        - 'PEER2PEER'

    SituationFullRef:
      type:
        - 'string'
        - 'null'
      description: |
        Reference to situation message. Message details might be found in response
        context or through other communication channels. Provided by OJP.

    SpecialCoachType:
      description: |
        indication of special coach
      type: string
      x-extensible-enum:
        - 'RESTAURANT_COACH'
        - 'BICYCLE_COACH'
        - 'LUGGAGE_COACH'
        - 'TRAIN_HEAD'

    SpecificPlaceAvailability:
      type: object
      additionalProperties: false
      description: |
        Availability status of a specific place.
      required:
        - number
        - reservationRefs
      properties:
        number:
          description: |
            Place number as indicated at the place in the coach.
          type: string
        status:
          $ref: '#/components/schemas/AvailabilityStatus'
        reservationRefs:
          description: |
            References requested reservation offerParts/bookingParts that allow the selection of the place.
            This allows clients to link place availabilities with the corresponding reservation fare/offerPart/bookingPart. E.g. link a bicycle hook with a bicycle reservationOfferPart.
          type: array
          items:
            type: string
          minItems: 1
        selectionFee:
          $ref: '#/components/schemas/SelectionFee'        

    StationSet:
      type: object
      additionalProperties: false
      required:
        - stations
      properties:
        stations:
          type: array
          items:
            $ref: '#/components/schemas/StopPlaceRef'
          minItems: 1

    StopBehavior:
      type: string
      enum:
        - 'ORIGIN_DESTINATION_ONLY'
        - 'REAL_BOARDING_ALIGHTING'
      default: 'ORIGIN_DESTINATION_ONLY'
      description: |
         Influences what stops are to be returned in response (ORIGIN_DESTINATION_ONLY returns no intermediate stops; REAL_BOARDING_ALIGHTING returns all stops except virtual stops). Default value: ORIGIN_DESTINATION_ONLY

    StopCallStatus:
      type: object
      additionalProperties: false
      description: |
        Status properties for the vehicle call at this stop. Provided by OJP.
      properties:
        order:
          description: |
            Sequence number of this stop in the service pattern of the journey.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
        requestStop:
          description: |
            The vehicle journey calls at this stop only on-demand.
          type:
            - 'boolean'
            - 'null'
          default: false
        unplannedStop:
          description: |
            This stop has not been planned by the planning department.
          type:
            - 'boolean'
            - 'null'
          default: false
        notServicedStop:
          description: |
            The vehicle will not call at this stop despite earlier planning.
          type:
            - 'boolean'
            - 'null'
          default: false
        noBoardingAtStop:
          description: |
            Boarding will not be allowed at this stop of this journey.
          type:
            - 'boolean'
            - 'null'
          default: false
        noAlightingAtStop:
          description: |
            Alighting will not be allowed at this stop of this journey.
          type:
            - 'boolean'
            - 'null'
          default: false
        isBorderPoint:
          description: |
            Indicates whether the stop is recognized by the system as a border point between two or more countries.
          type:
            - 'boolean'
            - 'null'
          default: false

    StopPlace:
      description: |
        A place extended by accessibility limitation properties and some attributes of the associated equipment,
        comprising one or more places where vehicles may stop and where passengers may board or leave vehicles
        or prepare their trip, and which will usually have one or more wellknown names. Provided by OJP.
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          additionalProperties: false
          required:
            - name
          properties:
            name:
              description: |
                Name of this stop place for use in passenger information.
              type: string
              examples:
                - Zürich HB

    StopPlaceRef:
      description: |
        Reference to a Stop Place using URNs to define code.
        For UIC see UIC MERITS/TAP-TSI station codes. Provided by OJP.
      allOf:
        - $ref: '#/components/schemas/PlaceRef'
        - type: object
          additionalProperties: false
          required:
            - stopPlaceRef
          properties:
            stopPlaceRef:
              type: string
              examples:
                - urn:uic:stn:8503000

    SupportingDocument:
      type: object
      additionalProperties: false
      description: |
        The supporting document helps to supporting the claim.  Either downloadLink + downloadExpiry or content must be provided.
      required:
        - title
        - downloadExpiry
        - format
      properties:
        title:
          description: |
            title of the document
          type: string
          examples:
            - delay confirmation written by staff on board
        downloadLink:
          type:
            - 'string'
            - 'null'
        downloadExpiry:
          type: string
          format: date-time
        content:
          description: |
            base64 encoded binary of the actual document. The length restriction of 4 MBytes applies to the encoded
            string, so the raw document cannot exceed 3 MBytes in size.
          type:
            - 'string'
            - 'null'
          format: byte
          maxLength: 4194304
        format:
          $ref: '#/components/schemas/DocumentFormat'

    Symbology:
      description: |
        Symbology to use when rendering the binary data.
      type: string
      enum:
        - 'AZTEC'
        - 'Code128A'
        - 'Code128B'
        - 'Code128C'
        - 'QR'
        - 'TEXT'

    Text:
      type: object
      additionalProperties: false
      description: |
        Directly included text in case of online services. Text must be encoded in UTF-8 format.
      required:
        - text
      properties:
        id:
          type: string
        translations:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
        text:
          type: string
          maxLength: 32768
        shortText:
          type:
            - 'string'
            - 'null'

    TextElement:
      type: object
      additionalProperties: false
      description: |
        Additional texts which should be displayed to the customer to further describe the product being offered.
      required:
        - description
        - shortDescription
        - textElementType
      properties:
        description:
          description: |
            Full version of the text for display when sufficient space is available.
          type: string
          minLength: 1
          maxLength: 32768
        shortDescription:
          description: |
            Brief version of the text for display in space restricted environments, e.g. mobile phone. No longer than 64 characters.
          type: string
          minLength: 1
        textElementType:
          $ref: '#/components/schemas/TextElementType'

    TextElementType:
      description: |
        Type of descriptive text.
        Valid Values:
        - INFORMATION: pure informational text (product/fulfillment).
        - MANDATORY: must be displayed to the customer prior to purchase (product).
        - MANDATORY_WITH_CONFIRMATION: must be confirmed, e.g. by checking a checkbox, prior to purchase (product).
        - TICKET_VALIDITY: any text on the ticket regarding it's validity (other than information which can be retrieved from the booking)
      type: string
      enum:
        - 'INFORMATION'
        - 'MANDATORY'
        - 'MANDATORY_WITH_CONFIRMATION'
        - 'TICKET_VALIDITY'

    ThroughTicketTag:
      description: |
        Known Values:
        - RESPLUS: Through ticket tag according to Swedish Regulation.
      type: string
      x-extensible-enum:
        - 'RESPLUS'

    TimeUnit:
      description: |
        Values from the [Time Unit Code List](https://osdm.io/spec/catalog-of-code-lists/#TimeUnit)
      type: string
      enum:
        - 'DAYS'
        - 'HOURS'
        - 'MINUTES'

    TimedLeg:
      type: object
      additionalProperties: false
      description: |
        A leg which is bound to a timetabled schedule. Corresponds to a ride. Provided by OJP.
      required:
        - start
        - end
        - service
      properties:
        start:
          $ref: '#/components/schemas/Board'
        intermediates:
          type: array
          items:
            $ref: '#/components/schemas/Intermediate'
        end:
          $ref: '#/components/schemas/Alight'
        service:
          $ref: '#/components/schemas/DatedJourney'
        operatingDays:
          $ref: '#/components/schemas/OperatingDays'
        operatingDaysDescription:
          description: |
            Textual description of the operation days, e.g. 'Monday to Friday' or 'not on holidays'.
          type:
            - 'string'
            - 'null'
        duration:
          type:
            - 'string'
            - 'null'
          format: duration
        co2Emission:
          $ref: '#/components/schemas/Quantity'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/LegAttribute'

    TimedLegSpecification:
      type: object
      additionalProperties: false
      description: |
        A minimal timed leg specification.
      required:
        - start
        - end
        - service
      properties:
        start:
          $ref: '#/components/schemas/BoardSpecification'
        intermediates:
          type: array
          items:
            $ref: '#/components/schemas/IntermediateSpecification'
        end:
          $ref: '#/components/schemas/AlightSpecification'
        service:
          $ref: '#/components/schemas/DatedJourney'

    TimeFrameSegmentation:
     type: string
     enum:
      - 'HOUR'
      - 'DAY'

    Tip:
      type: object
      additionalProperties: false
      description: |
        Tips for staff can be included e.g. for taxi drivers. The Tip will be part of the payment in case ofpost payment scenarios.
      required:
        - id
        - price
      properties:
        id:
          type: string
          maxLength: 1024
        summary:
          description: |
            A human-readable description of the tip.
          type:
            - 'string'
            - 'null'
        bookingPartRef:
          $ref: '#/components/schemas/BookingPartReference'        
        price:
          $ref: '#/components/schemas/Price'
        distributorBookingRef:
          description: |
            reference to the booking in the downstream distributor system
          type:
            - 'string'
            - 'null'
        accountingRef:
          $ref: '#/components/schemas/AccountingRef'

    Trailer:
      type: object
      additionalProperties: false
      required:
        - weight
        - length
        - width
        - height
      properties:
        weight:
          description: |
            weight in kg
          type: integer
          format: int32
          minimum: 0
        length:
          description: |
            length in cm
          type: integer
          format: int32
          minimum: 0
        width:
          description: |
            width in cm
          type: integer
          format: int32
          minimum: 0
        height:
          description: |
            height in cm
          type: integer
          format: int32
          minimum: 0
        licensePlate:
          description: |
            The license plate is a personal data item and must not be provided in an offer request.
            It must be patched into the offer after the customer accepted the offer for booking
          type:
            - 'string'
            - 'null'

    TrainLink:
      type: object
      additionalProperties: false
      required:
        - fromStation
        - toStation
        - train
        - travelDate
        - serviceBrandCode
        - serviceBrandAbbreviation
      properties:
        fromStation:
          $ref: '#/components/schemas/StopPlaceRef'
        toStation:
          $ref: '#/components/schemas/StopPlaceRef'
        train:
          type: string
        travelDate:
          description: |
            date and time of the departure where the train link starts
          type: string
          format: date-time
        serviceBrandCode:
          $ref: '#/components/schemas/ServiceBrandCode'
        serviceBrandAbbreviation:
          description: |
            Abbreviation of the service brand, e.g. 'IC', 'TGV'. See the OSDM code list. Needs to match the service brand code.
          type: string

    TrainValidity:
      type: object
      additionalProperties: false
      description: |
        Validity depending on boarding / leaving of a train. The ticket is valid
        from departure until the destination station in the train if departure or destination is within the from - until range.
        The validation can reference the departure or the destination time to decide the validity (e.g. Eurail/Interrail passes
        currently use the departure for the validity on night trains).
      required:
        - from
        - until
        - carriers
        - scope
      properties:
        from:
          type: string
          format: date-time
        until:
          type: string
          format: date-time
        carriers:
          type: array
          items:
            $ref: '#/components/schemas/CompanyRef'
          minItems: 1
        excludedServiceBrands:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBrandCode'
        includedServiceBrands:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBrandCode'
        scope:
          $ref: '#/components/schemas/TrainValidityScope'

    TrainValidityScope:
      type: string
      enum:
        - 'BOARDING'
        - 'ARRIVAL'

    TransferLeg:
      type: object
      additionalProperties: false
      description: |
        A leg which links other legs of a trip where a transfer between different places is required.
        Provided by OJP.
      required:
        - start
        - end
      properties:
        continuousMode:
          $ref: '#/components/schemas/ContinuousMode'
        transferMode:
          $ref: '#/components/schemas/TransferMode'
        start:
          $ref: '#/components/schemas/PlaceRef'
        end:
          $ref: '#/components/schemas/PlaceRef'
        timeWindowStart:
          description: |
            Time at which window begins.
          type:
            - 'string'
            - 'null'
          format: date-time
        timeWindowEnd:
          description: |
            Time at which window ends.
          type:
            - 'string'
            - 'null'
          format: date-time
        duration:
          description: |
            Overall duration of this interchange.
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - PT20M
        situationFullRefs:
          type: array
          items:
            $ref: '#/components/schemas/SituationFullRef'
        co2Emission:
          $ref: '#/components/schemas/Quantity'

    TransferMode:
      description: |
        Modes dedicated to perform transfers. Provided by OJP.
      type: string
      x-extensible-enum:
        - 'WALK'
        - 'PARK_AND_RIDE'
        - 'BIKE_AND_RIDE'
        - 'CAR_HIRE'
        - 'BIKE_HIRE'
        - 'PROTECTED_CONNECTION'
        - 'GUARANTEED_CONNECTION'
        - 'REMAIN_IN_VEHICLE'
        - 'CHANGE_WITHIN_VEHICLE'
        - 'CHECK_IN'
        - 'CHECK_OUT'

    Translation:
      type: object
      additionalProperties: false
      required:
        - language
        - text
      properties:
        language:
          description: |
            ISO-639-1 language code
          type: string
        text:
          type: string
        shortText:
          type:
            - 'string'
            - 'null'

    Transportable:
      type: object
      additionalProperties: false
      description: |
        Transportables which are handled similar to passengers like dogs, bicycles, car transport.
        These transportables might need a ticket or reservation.
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/TransportableType'
        car:
          $ref: '#/components/schemas/Car'
        motorCycle:
          $ref: '#/components/schemas/MotorCycle'
        trailer:
          $ref: '#/components/schemas/Trailer'

    TransportableType:
      description: |
        Subset of the values from 
        the [Passenger Type Code List](https://osdm.io/spec/catalog-of-code-lists/#PassengerType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'PET'
        - 'DOG' 
        - 'ACCOMP_DOG'        
        - 'BICYCLE'
        - 'LUGGAGE'        
        - 'PRAM'        
        - 'CAR'
        - 'MOTOCYCLE'
        - 'TRAILER'

    TravelAccountConsumption:
      type: object
      additionalProperties: false
      required:
        - consumedOn
        - bookingId
        - unit
        - bookingSummary
        - consumedAmount
      properties:
        consumedOn:
          type: string
          format: date-time
        bookingId:
          type: string
        unit:
          $ref: '#/components/schemas/AbstractTravelAccountUnit'
        bookingSummary:
          type: string
        tripSummary:
          $ref: '#/components/schemas/TripSummary'
        consumedAmount:
          type: integer
          format: int32

    TravelAccountResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        travelAccount:
          $ref: '#/components/schemas/AbstractTravelAccount'

    TravelAccountResponseContent:
      type: string
      enum:
        - 'ALL'
        - 'CONSUMPTIONS'
        - 'NONE'
      default: ALL

    TravelAccountType:
      description: |
        Values from the [Travel Account Type Code List](https://osdm.io/spec/catalog-of-code-lists/#TravelAccountType)
      type: string
      enum:
        - 'LINKED_TICKET'
        - 'LOYALTY_CARD'
        - 'MULTI_RIDE'
        - 'REDUCTION_CARD'
        - 'TRAVEL_PASS'

    TravelClass:
      description: |
        Traditional first and second class.
      type: string
      x-extensible-enum:
        - 'FIRST'
        - 'SECOND'
        - 'ANY_CLASS'

    TravelDirectionType:
      description: |
        indication of the direction of travel standard direction is left
        to right with ascending coordinates in the layout values.
        Values from the [Travel Direction Code List](https://osdm.io/spec/catalog-of-code-lists/#TravelDirection)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'UNSPECIFIED'
        - 'IN_DIRECTION'
        - 'OPPOSITE_DIRECTION'
        - 'CHANGING'
        - 'STARTING_IN_DIRECTION'
        - 'STARTING_OPPOSITE_TO_DIRECTION'

    TravelPassAccount:
      allOf:
        - $ref: '#/components/schemas/AbstractTravelAccount'
        - type: object
          additionalProperties: false
          required:
            - regionalConstraintSummary
          properties:
            regionalConstraintSummary:
              type: string
            regionalConstraint:
              $ref: '#/components/schemas/RegionalConstraint'
            consumptions:
              type: array
              items:
                $ref: '#/components/schemas/TravelAccountConsumption'

    TravelValidity:
      type: object
      additionalProperties: false
      description: |
        In distributor mode, travel validity data is needed to create barcode and control data (IRS 90918-4) even in case they have been checked during the on-line sale.
      required:
        - validityRange
      properties:
        validTravelDates:
          $ref: '#/components/schemas/Calendar'
        validityRange:
          $ref: '#/components/schemas/ValidityRange'
        excludedTimeRanges:
          description: |
            time ranges excluded from the validity (e.g. off peak fulfillments)
          type: array
          items:
            $ref: '#/components/schemas/ExcludedTimeRange'
        numberOfTravelDays:
          description: |
            number of allowed travel days (e.g. 3 travel days within 2 weeks)
          type:
            - 'integer'
            - 'null'
          format: int32
        returnConstraint:
          $ref: '#/components/schemas/ReturnConstraint'
        trainValidity:
          $ref: '#/components/schemas/TrainValidity'
        validityType:
          $ref: '#/components/schemas/ValidityType'
        tripAllocationConstraint:
          $ref: '#/components/schemas/TripAllocationConstraint'
        tripInterruptionConstraint:
          $ref: '#/components/schemas/TripInterruptionConstraint'

    TravelValidityRange:
      type: object
      additionalProperties: false
      description: |
        Range for the start of validity to be used in a patch for available fulfillments (e.g. a 1 hour ticket not
        available during  peak hours in the morning and afternoon).
      required:
        - from
        - until
      properties:
        from:
          type: string
          format: date
        until:
          type: string
          format: date

    Trip:
      type: object
      additionalProperties: false
      description: |
        A complete trip from origin to destination. Provided by OJP.
      required:
        - id
        - duration
        - direction
        - startTime
        - endTime
        - transfers
        - legs
      properties:
        id:
          description: |
            Id of this trip for referencing purposes. Unique within a trip list.
          type: string
          maxLength: 32768
        externalRef:
          description: |
            External reference of this trip for referencing purposes.
          type:
            - 'string'
            - 'null'
        summary:
          description: |
            A human-readable description of the trip.
          type:
            - 'string'
            - 'null'
        duration:
          description: |
            Overall duration of the trip
          type: string
          format: duration
          examples:
            - PT20M
        direction:
          $ref: '#/components/schemas/TripDirectionType'
        origin:
          $ref: '#/components/schemas/PlaceRef'
        originName:
          description: Name of the origin place
          type: 
            - 'string'
            - 'null'
        destination:
          $ref: '#/components/schemas/PlaceRef'
        destinationName:
          description: Name of the destination place
          type: 
            - 'string'
            - 'null'
        startTime:
          description: |
            Departure time at origin.
          type: string
          format: date-time
        endTime:
          description: |
            Arrival time at destination
          type: string
          format: date-time
        transfers:
          description: |
            Number of interchanges
          type: integer
          format: int32
          minimum: 0
        distance:
          description: |
            Distance in meters over the the complete trip, i.e., including transfer legs.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
        legs:
          description: |
            Legs ot the trip
          type: array
          items:
            $ref: '#/components/schemas/TripLeg'
          minItems: 1
        operatingDays:
          $ref: '#/components/schemas/OperatingDays'
        operatingDaysDescription:
          description: |
            Textual description of the operation days, e.g. 'Monday to Friday' or 'Not on holidays'.
          type:
            - 'string'
            - 'null'
        situationFullRefs:
          type: array
          items:
            $ref: '#/components/schemas/SituationFullRef'
        tripStatus:
          $ref: '#/components/schemas/TripStatus'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    TripAllocationConstraint:
      type: object
      additionalProperties: false
      description: |
        constraint on the use of a multiple trip ticket
      required:
        - allocationUnit
        - requiredProcesses
      properties:
        allocationUnit:
          $ref: '#/components/schemas/TripAllocationUnit'
        maxUnits:
          description: |
            maximum number of allowed units to be allocated
          type:
            - 'integer'
            - 'null'
          format: int32
        durationUnit:
          description: |
            multiples of this duration can be allocated
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - PT30M
        requiredProcesses:
          description: |
            one of the listed processes is required for the allocation of a single trip
          type: array
          items:
            $ref: '#/components/schemas/TripAllocationProcess'
          minItems: 1

    TripAllocationProcess:
      description: |
        Values from the [Trip Allocation Process Code List](https://osdm.io/spec/catalog-of-code-lists/#TripAllocationProcess)
        Known Values:
        - NONE: Individual trips don't need to be allocated.
        - MANUAL: The passenger has to allocate a trip manually (This should not be used as it is by design non-interoperable).
        - ACTIVATION: Individual trips can be allocated by activation of the ticket.
        - FULFILLMENT: A new fulfillment needs to be created to allocate a trip.
      type: string
      x-extensible-enum:
        - 'NONE'
        - 'MANUAL'
        - 'ACTIVATION'
        - 'FULFILLMENT'

    TripAllocationUnit:
      description: |
        Values from the [Trip Allocation Unit Code List](https://osdm.io/spec/catalog-of-code-lists/#TripAllocationUnit)
        Unit to allocate trips in a multi-trip fare. Trips can be allocated per day (e.g. Eurail) or per
        duration (e.g. multiples of a duration unit to cover the trip) or as single trips (e.g. carnet))
        Known Values:
        - NONE: Individual trips don't need to be allocated. 
        - TRIP: allocation per individual trip.
        - DAY: The allocation is per travel day.
        - DURATION: the allocation is per duration.
      type: string
      x-extensible-enum:
        - 'NONE'
        - 'TRIP'
        - 'DAY'
        - 'DURATION'

    TripCollectionResponse:
      type: object
      additionalProperties: false
      description: |
        Trip response structure. Provided by OJP.
      required:
        - id
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        id:
          type: string
        trips:
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        tripSummaries:
          type: array
          items:
            $ref: '#/components/schemas/TripSummary'
        _links:
          description: |
            Java Property Name: 'links'
          type: array
          items:
            $ref: '#/components/schemas/Link'

    TripCoverage:
      type: object
      additionalProperties: false
      description: |
        The trip coverage defines which part of the trip is covered by the offer, offer part, booking or booking part, respectively.

        If neither coveredLegIds nor coveredSections are defined, the complete trip is covered.
        coveredLegIds and coveredSections are mutually exclusive, i.e. only one of the structures can be present.

        If either coveredLegIds or coveredSections is defined, the sectionIndex field must be filled to indicate which part of the trip is covered
        by the respective OfferPart or BookingPart

      required:
        - coveredTripId
      properties:
        coveredTripId:
          type: string
          maxLength: 32768
        sectionIndex:
          description: |
            Describes which part of the trip (in order) is covered by the OfferPart/BookingPart which contains this TripCoverage structure.

            This needs to be filled if either coveredLegIds or coveredSections is present.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 1
        coveredLegIds:
          description: |
            Indicate which legs are covered by the specific offer. Not used for fares.
          type:
            - 'array'
            - 'null'
          items:
            type: string
        coveredSections:
          type: array
          items:
            $ref: '#/components/schemas/Section'

    TripDataFilter:
      type: object
      additionalProperties: false
      description: |
        Data to be included/excluded from search, f.e. modes, carriers. Provided by OJP.
      properties:
        ptModeFilter:
          $ref: '#/components/schemas/ModeFilter'
        carrierFilter:
          $ref: '#/components/schemas/CarrierFilter'
        serviceBrandFilter:
          $ref: '#/components/schemas/ServiceBrandFilter'
        vehicleFilter:
          $ref: '#/components/schemas/VehicleFilter'

    TripDirectionType:
      type: string
      enum:
        - 'OUT_BOUND'
        - 'IN_BOUND'
      default: 'OUT_BOUND'

    TripInterruptionConstraint:
      type: object
      additionalProperties: false
      description: |
        rules on allowed trip interruptions. Interruptions due to a train change
        indicated by a trip search must not be included here.
      required:
        - maxInterruptions
        - requiredProcesses
      properties:
        maxInterruptions:
          description: |
            maximum number of allowed interruptions
          type: integer
          format: int32
        maxDuration:
          description: |
            maximum duration of one interruption
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - PT30M
        totalMaxDuration:
          description: |
            maximum duration of all interruptions on the route
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - PT30M
        requiredProcesses:
          description: |
            one of the listed processes is required for the interruption of the trip
          type: array
          items:
            $ref: '#/components/schemas/TripInterruptionProcess'
          minItems: 1

    TripInterruptionProcess:
      description: |
        Values from the [Trip Interruption Process Code List](https://osdm.io/spec/catalog-of-code-lists/#TripInterruptionProcess)
        Known Values:
        - NONE
        - MANUAL: passenger needs manual confirmation of train or station staff to interrupt the trip.
        - ACTIVATION: Passenger needs to deactivate the ticket during the interruption (via an app).
      type: string
      x-extensible-enum:
        - 'NONE'
        - 'MANUAL'
        - 'ACTIVATION'

    TripLeg:
      type: object
      additionalProperties: false
      description: |
        A single stage of a trip that is made without change of MODE or service (ie:
        between each interchange). Provided by OJP.
      required:
        - id
      properties:
        id:
          description: |
            Id of this trip leg. Unique within trip result. A seqId is a leg id.
          type: string
        externalRef:
          description: |
            External reference of this tripLeg for referencing purposes.
          type:
            - 'string'
            - 'null'
        timedLeg:
          $ref: '#/components/schemas/TimedLeg'
        transferLeg:
          $ref: '#/components/schemas/TransferLeg'
        continuousLeg:
          $ref: '#/components/schemas/ContinuousLeg'

    TripLegCoverage:
      type: object
      additionalProperties: false
      required:
        - tripId
        - legId
      properties:
        tripId:
          type: string
          maxLength: 32768
        legId:
          type: string

    RouteSpecification:
      type: object
      properties:
        origin:
          $ref: '#/components/schemas/PlaceRef'
        destination:
          $ref: '#/components/schemas/PlaceRef'          

    TripLegSpecification:
      type: object
      additionalProperties: false
      description: |
        A minimal trip leg specification.
      properties:
        externalRef:
          description: |
            External reference of this trip leg. Unique within trip result.
          type:
            - 'string'
            - 'null'
        timedLeg:
          $ref: '#/components/schemas/TimedLegSpecification'
        transferLeg:
          $ref: '#/components/schemas/TransferLeg'

    TripMobilityFilter:
      type: object
      additionalProperties: false
      description: |
        Base mobility options to be applied for both public and individual transport.
        Provided by OJP.
      properties:
        bikeTransport:
          description: |
            The user wants to carry a bike on public transport.
          type:
            - 'boolean'
            - 'null'
          default: false
        walkSpeed:
          description: |
            Deviation from average walk speed in percent. 100% percent is average speed.
          type:
            - 'integer'
            - 'null'
          format: int32
          default: 100
        additionalTransferTime:
          description: |
            Additional time added to all transfers (also to transfers between individual to
            public transport).
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - 0S
        minimalTransferTime:
          type:
            - 'string'
            - 'null'
          format: duration

    TripParameters:
      type: object
      additionalProperties: false
      description: |
        Options to control the search behavior and response contents.
        number of results > either number of results or number of results before and after are used.
        Provided by OJP.
        numberOfResults is intentionally omitted to avoid inconsistent request parameters. numberOfResults is equal to numberOfResultsBefore = 0 and numberOfResultsAfter = numberOfResults
      properties:
        dataFilter:
          $ref: '#/components/schemas/TripDataFilter'
        policyFilter:
          $ref: '#/components/schemas/BaseTripPolicyFilter'
        mobilityFilter:
          $ref: '#/components/schemas/TripMobilityFilter'
        numberOfResultsBefore:
          type:
            - 'integer'
            - 'null'
          format: int32
          default: 0
        numberOfResultsAfter:
          type:
            - 'integer'
            - 'null'
          format: int32
          default: 0
        ignoreRealtimeData:
          type:
            - 'boolean'
            - 'null'
          default: false
        transferLimit:
          description: |
            The maximum number of interchanges the user will accept per trip.
          type:
            - 'integer'
            - 'null'
          format: int32
          minimum: 0
        itModesToCover:
          $ref: '#/components/schemas/IndividualMode'

    TripChangeCriteria:
      type: object
      additionalProperties: false
      description: |
        Trip change request structure. Provided by OJP.
      properties:
        TripResult:
          $ref: '#/components/schemas/TripResult'

    TripResponse:
      type: object
      additionalProperties: false
      required:
        - trip
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        trip:
          $ref: '#/components/schemas/Trip'

    TripResponseContent:
      type: string
      enum:
        - 'ALL'
        - 'PLACES'
        - 'NONE'
      default: 'ALL'

    TripResult:
      type: object
      additionalProperties: false
      description: |
        The trip result to be changed.
      properties:
        TripSummary:
          $ref: '#/components/schemas/TripSpecificationSummary'

    TripResponseParameters:
      type: object
      additionalProperties: false
      description: |
        Options to control response contents on Trip objects.
      properties:
        stopBehavior:
          $ref: '#/components/schemas/StopBehavior'

    TripSearchCriteria:
      type: object
      additionalProperties: false
      description: |
        Trip request structure. Provided by OJP.
      required:
        - origin
        - destination
      properties:
        departureTime:
          description: |
            Needs to be in local date time format of the stop. Exactly one of `departureTime` and `arrivalTime` must be provided.
          type:
            - 'string'
            - 'null'
          pattern: '(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d)'
        arrivalTime:
          description: |
            Needs to be in local date time format of the stop. Exactly one of `departureTime` and `arrivalTime` must be provided.
          type:
            - 'string'
            - 'null'
          pattern: '(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d)'
        origin:
          $ref: '#/components/schemas/PlaceRef'
        destination:
          $ref: '#/components/schemas/PlaceRef'
        vias:
          description: |
            Ordered series of points where the journey must pass through. If more
            than one via point is given all of them must be obeyed - in the correct
            order. The server is allowed to replace a via stop by equivalent stops.

            TripDataFilters given at a via apply to the section after that via. To apply a TripDataFilter for 
            the first section (between the origin and the first via), use the TripDataFilter within the
            TripParameters structure.
          type: array
          items:
            $ref: '#/components/schemas/TripVia'
        parameters:
          $ref: '#/components/schemas/TripParameters'
        embed:
          description: |
            Influences whether referenced resources are returned in full or as references only. Proposed default ALL
          type: array
          items:
            $ref: '#/components/schemas/TripsCollectionResponseContent'
        returnSearchParameters:
          $ref: '#/components/schemas/ReturnSearchParameters'
        notVias:
          type: array
          items:
            $ref: '#/components/schemas/NotVia'

    TripSection:
      type: object
      additionalProperties: false
      description: |
        Part of a trip.
      required:
        - tripId
      properties:
        tripId:
          type: string
          maxLength: 32768
        coveredSection:
          $ref: '#/components/schemas/Section'

    TripSpecification:
      type: object
      additionalProperties: false
      description: |
        A minimal trip specification from origin to destination.
      required:
        - legs
      properties:
        externalRef:
          description: |
            External reference of this trip for referencing purposes. Unique within a trip specification.
          type:
            - 'string'
            - 'null'
        legs:
          type: array
          items:
            $ref: '#/components/schemas/TripLegSpecification'
          minItems: 1
        isPartOfInternationalTrip:
          type:
            - 'boolean'
            - 'null'
          default: false
        returnSearchParameters:
          $ref: '#/components/schemas/ReturnSearchParameters'

    TripStatus:
      type: object
      additionalProperties: false
      properties:
        unplanned:
          description: |
            Whether this trip is an additional one that has not been planned.
          type:
            - 'boolean'
            - 'null'
          default: false
        cancelled:
          description: |
            Whether this trip is cancelled and will not be run.
          type:
            - 'boolean'
            - 'null'
          default: false
        deviation:
          description: |
            Whether this trip deviates from the planned service pattern.
          type:
            - 'boolean'
            - 'null'
          default: false
        delayed:
          description: |
            Whether this trip is delayed.
          type:
            - 'boolean'
            - 'null'
          default: false
        infeasible:
          description: |
            Whether this trip cannot be used, due to operational delays and impossible transfers.
          type:
            - 'boolean'
            - 'null'
          default: false

    TripSpecificationSummary:
      type: object
      additionalProperties: false
      description: |
        Trip specification summary. Provided by OJP. 
        It requires the id of an already existing trip to change and specifies the parameters which must be used to generate the new trip.
      required:
        - id
      properties:
        id:
          description: |
            The id of an already existing trip to change.
          type: string
          maxLength: 32768
        origin:
          $ref: '#/components/schemas/PlaceRef'
        destination:
          $ref: '#/components/schemas/PlaceRef'

    TripSummary:
      type: object
      additionalProperties: false
      description: |
        Trip summary. Provided by OJP.
      required:
        - id
      properties:
        id:
          description: |
            Id of this trip for referencing purposes. Unique within trip response.
          type: string
          maxLength: 32768
        summary:
          type:
            - 'string'
            - 'null'
        externalRef:
          type:
            - 'string'
            - 'null'
        startTime:
          description: |
            Departure time at origin.
          type:
            - 'string'
            - 'null'
          format: date-time
        endTime:
          description: |
            Arrival time at destination.
          type:
            - 'string'
            - 'null'
          format: date-time
        duration:
          description: |
            Overall duration of the trip.
          type:
            - 'string'
            - 'null'
          format: duration
        origin:
          $ref: '#/components/schemas/PlaceRef'
        originName:
          type:
            - 'string'
            - 'null'
          description: Name of the origin place.
        destination:
          $ref: '#/components/schemas/PlaceRef'
        destinationName:
          type:
            - 'string'
            - 'null'
          description: Name of the destination place.
        transfers:
          type:
            - 'integer'
            - 'null'
          format: int32
        distance:
          type:
            - 'integer'
            - 'null'
          format: int32

    TripTravelAccountUnit:
      allOf:
        - $ref: '#/components/schemas/AbstractTravelAccountUnit'
        - type: object
          additionalProperties: false

    TripVia:
      type: object
      additionalProperties: false
      description: |
        Via restrictions for a trip. Provided by OJP.
        A TripDataFilter given applies to the section after this via.
      required:
        - viaPlace
      properties:
        viaPlace:
          $ref: '#/components/schemas/PlaceRef'
        dwellTime:
          description: |
            desired dwell time at the via place
          type:
            - 'string'
            - 'null'
          format: duration
          examples:
            - 30M
        dataFilter:
          $ref: '#/components/schemas/TripDataFilter'

    TripsCollectionResponseContent:
      type: string
      enum:
        - 'ALL'
        - 'TRIPS'
        - 'TRIPSUMMARIES'
        - 'NONE'
      default: ALL

    VAT:
      type: object
      additionalProperties: false
      required:
        - countryCode
        - amount
      properties:
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        amount:
          description: |
            amount in cents
          type: integer
          format: int32
          examples:
            - 5
        scale:
          description: |
            scale of the amount - the number of positions after the comma
          type:
            - 'integer'
            - 'null'
          format: int32
          default: 2
        percentage:
          type:
            - 'number'
            - 'null'
          format: float
        taxId:
          type:
            - 'string'
            - 'null'
        scope:
          $ref: '#/components/schemas/VatScope'

    ValidityRange:
      type: object
      additionalProperties: false
      required:
        - timeUnit
        - value
      properties:
        timeUnit:
          $ref: '#/components/schemas/TimeUnit'
        value:
          type: integer
          format: int32
        hoursAfterMidnight:
          description: |
            validity extended after midnight
          type:
            - 'integer'
            - 'null'
          format: int32

    ValidityType:
      description: |
        Type of usage, either as single trip or multiple trips. Unrestricted fares might be combined into single trips if appropriate. Values from the [Travel Validity Type Code List](https://osdm.io/spec/catalog-of-code-lists/#TravelValidityType) 
        Values from the [Tavel Validity Type Code List](https://osdm.io/spec/catalog-of-code-lists/#TravelValidityType)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'SINGLE_TRIP'
        - 'MULTIPLE_TRIPS'
        - 'UNRESTRICTED'

    VatScope:
      description: |
        scope where the VAT applies.
        Values from the [Tax Scope Code List](https://osdm.io/spec/catalog-of-code-lists/#TaxScope)
        Listed values here are examples.
      type: string
      x-extensible-enum:
        - 'INTERNATIONAL'
        - 'NATIONAL'
        - 'SHORT_DISTANCE'
        - 'LONG_DISTANCE'

    VehicleAvailability:
      type: object
      additionalProperties: false
      description: |
        A vehicle run for which place availabilities were requested.
      properties:
        coaches:
          description: |
            List of the coaches in a vehicle run ordered according to the physical ordering of the vehicle. Empty if train composition data is missing or specific place selection is not supported.
          type: array
          items:
            $ref: '#/components/schemas/CoachAvailability'
        directionChanges:
          description: |
            List of direction changes (in direction of travel). 
          type: array
          items:
            $ref: '#/components/schemas/DirectionChange'            
        preSelectedPlaces:
          type: array
          items:
            $ref: '#/components/schemas/PlacePreSelection'
        preSelectedCompartments:
          type: array
          items:
            $ref: '#/components/schemas/CompartmentPreSelection'

    VehicleFilter:
      type: object
      additionalProperties: false
      description: |
        Filter for in/exclusion of vehicle based on vehicle number or line number.
      properties:
        exclude:
          description: |
            Whether vehicle in list is to include or exclude from search.
          type:
            - 'boolean'
            - 'null'
          default: true
        vehicleNumbers:
          type: array
          items:
            $ref: '#/components/schemas/VehicleNumber'
        lineNumbers:
          type: array
          items:
            $ref: '#/components/schemas/LineNumber'

    VehicleNumber:
      type:
        - 'string'
        - 'null'
      description: |
        The vehicle number(s) of the vehicle that runs this timed leg. On some legs a vehicle can
        have multiple vehicle numbers, e.g. if it is split into two trains at a intermediate stop.
        E.g. the vehicle numbers of 'TGV 9218', 'TH 9340' or 'ICE 15'.
        For backwards compatibility with Hermes/Hosa the length of the string must be restricted
        to 5 characters. If's longer, it is not possible to use the H2O converter.
      examples:
        - 9218
        - 9340
        - 15

    VoucherInformation:
      type: object
      additionalProperties: false
      required:
        - issuer
        - code
      properties:
        issuer:
          $ref: '#/components/schemas/CompanyRef'
        code:
          description: |
            voucher code provided by the issuer
          type: string

    Zone:
      type: object
      additionalProperties: false
      description: |
        carrier - carrier responsible for the transport.
        entryStation - Station to enter the zone in case the product requires to enter the zone via a specific station
        (e.g. local zone ticket to start from the main rail station).
        terminalStation - Terminal station in case the product requires a destination within the zone (e.g. local ticket
        to go to the main rail station).
      required:
        - carrier
      properties:
        binaryZoneId:
          description: |
            Id to support local traffic standards (e.g. VDV,...)
          type:
            - 'string'
            - 'null'
          format: byte
        carrier:
          $ref: '#/components/schemas/CompanyRef'
        name:
          type:
            - 'string'
            - 'null'
        entryStation:
          $ref: '#/components/schemas/StopPlace'
        terminalStation:
          $ref: '#/components/schemas/StopPlace'
        zoneIds:
          description: |
            to be used in bar codes
          type: array
          items:
            type:
              - 'integer'
              - 'null'
            format: int32
        nutsCode:
          description: |
            Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011
          type:
            - 'string'
            - 'null'

    ZoneCollectionResponse:
      type: object
      additionalProperties: false
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        zones:
          type: array
          items:
            $ref: '#/components/schemas/ZoneDefinition'

    ZoneDefinition:
      type: object
      additionalProperties: false
      description: |
        Definition of a zone used to define regional validity. The area of the zone can be defined via a
        geo-polygon, a complete list of all contained stations or area codes from the NUTS code list.
        The carrier is either the carrier or transport authority responsible for the definition.
      required:
        - id
        - carrier
      properties:
        id:
          type: string
        name:
          type:
            - 'string'
            - 'null'
        carrier:
          $ref: '#/components/schemas/CompanyRef'
        polygon:
          $ref: '#/components/schemas/Polygon'
        nutsCodes:
          type:
            - 'array'
            - 'null'
          items:
            type: string
        places:
          type: array
          items:
            $ref: '#/components/schemas/PlaceRef'

    NotificationEvent:
      description: |
        Notification on an event that occured on the provider side and changed a resource.
      oneOf:
        - $ref: "#/components/schemas/BookingEvent"
        - $ref: "#/components/schemas/ComplaintEvent"
        - $ref: "#/components/schemas/ReimbursementEvent"

    BookingEvent:
      type: object
      description: An event that has occurred on a booking.
      required:
        - objectType
        - summary
        - type
        - revision
        - bookingId
        - resources
      properties:
        objectType:
          type: string
          enum:
            - BookingEvent
          default: BookingEvent
        summary:
          type: string
          description: >-
            Human readable description of what has changed on the booking. e.g.
            "Train ICE 34 at 2021-12-22 13:30 has been cancelled".
        type:
          $ref: "#/components/schemas/BookingChangeType"
        revision:
          $ref: "#/components/schemas/Revision"
        bookingId:
          type: string
          description: The ID of the booking that has changed.
        affectedBookingPartIds:
          description: list of ids of affected booking parts 
          type: array
          items:
            type: string
        affectedFulfillmentIds:
          description: list of ids of affected fulillments 
          type: array
          items:
            type: string
        resources:
          description: >-
            Resources to be called by receiver to update a booking.
          type: array
          items:
            $ref: "#/components/schemas/Resource"

    BookingChangeType:
      type: string
      description: >-
        The type of change that has occurred on the booking.
      enum:
        - BOOKING_REAL_TIME_EVENT_OCCURRED
        - BOOKING_REACCOMMODATED
        - BOOKING_TRIP_CHANGED
        - BOOKING_TRIP_CONFIRMED
        - BOOKING_ON_HOLD
        - DOCUMENT_AVAILABLE
        - FULFILLMENT_AVAILABLE
        - FULFILLMENT_REFUNDED
        - FULFILLMENT_EXCHANGED
        - FULFILLMENT_CANCELLED
        - FULFILLMENT_RELEASED
        - FULFILLMENT_CONTROLLED
        - ACCOMMODATION_RELEASED
        - PURCHASER_CHANGED
        - PASSENGER_CHANGED
        - REFUND_INITIATED
        - EXCHANGE_INITIATED
        - RELEASE_INITIATED
        - CANCEL_INITIATED
        - ON_HOLD_INITIATED
        - AFTERSALES_OVERRIDEN
        - CONTINUOUS_SERVICE_UPDATE
        - CONTINUOUS_SERVICE_USAGE_BLOCKED
        - CONTINUOUS_SERVICE_USAGE_UNBLOCKED
        - CONTINUOUS_SERVICE_USAGE_STARTED
        - CONTINUOUS_SERVICE_USAGE_EDED
        - CONTINUOUS_SERVICE_USAGE_UPDATE
        - POST_PAYMENT_PRICING_UPDATE
        - PRE_PAYMENT_PRICING_UPDATE              
      examples: 
        - FULFILLMENT_REFUNDED

    ComplaintEvent:
      type: object
      description: >-
        An event that has occurred on a complaint.
      required:
        - objectType
        - summary
        - type
        - revision
        - complaintId
        - resources
      properties:
        objectType:
          type: string
          enum:
            - ComplaintEvent
          default: ComplaintEvent
        summary:
          type: string
          description: >-
            Human readable description of what has changed on the complaint.
            E.g. "Complaint 123456 has been settled".
        type:
          $ref: "#/components/schemas/BackOfficeChangeType"
        revision:
          $ref: "#/components/schemas/Revision"
        complaintId:
          type: string
          description: The ID of the complaint.
        resources:
          description: >-
            Resources to be called by receiver to update a complaint.
          type: array
          items:
            $ref: "#/components/schemas/Resource"

    ReimbursementEvent:
      type: object
      description: >-
        An event that has occurred on a reimbursement.
      required:
        - objectType
        - summary
        - type
        - revision
        - reimbursementId
        - resources
      properties:
        objectType:
          type: string
          enum:
            - ReimbursementEvent
          default: ReimbursementEvent
        summary:
          type: string
          description: >-
            Human readable description of what has changed on the reimbursement.
            E.g. "Reimbursement 456-xyz has been settled".
        type:
          $ref: "#/components/schemas/BackOfficeChangeType"
        revision:
          $ref: "#/components/schemas/Revision"
        reimbursementId:
          type: string
          description: The ID of the reimbursement.
        resources:
          description: >-
            Resources to be called by receiver to update a reimbursement.
          type: array
          items:
            $ref: "#/components/schemas/Resource"

    BackOfficeChangeType:
      type: string
      description: The type of change that has occurred.
      enum:
        - INITIATED
        - EVALUATING
        - DECIDED
        - SETTLED
        - INFORMATION_MISSING
      default:
        - INITIATED

    Revision:
      type: object
      description: The revision of the event.
      required:
        - name
        - timestamp
      properties:
        name:
          type: string
          examples:
            - 1
        timestamp:
          type: string
          format: date-time

    Resource:
      type: object
      description: >-
        The resource to be called by receiver to update a booking, a complaint
        or a reimbursement.
      required:
        - href
      properties:
        title:
          type: string
          description: >-
            Intended for labelling the link with a human-readable identifier (as
            defined  by [RFC5988]).
        href:
          type: string
          format: url
          examples: 
            - "https://db.de/osdm/bookings/2345/fulfillments/ASBV"
