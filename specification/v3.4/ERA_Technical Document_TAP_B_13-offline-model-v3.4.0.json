{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "http://uic.org//schemas/passenger/eticket/v3/offlineOSDM.json",
	"title": "OSDM Offline Fare Delivery",
	"description": "OSDM extract of offline fare delivery",
	"type": "object",
	"properties": {
		"fareDelivery": {
			"$ref": "#/definitions/FareDeliveryDef"
		}
	},
	"additionalProperties": false,
	"definitions": {
		"StationDef": {
			"description": "Used to represent a station location. This is a location that can be used as origin and destination for a train journey",
			"type": "object",
			"properties": {
				"codeList": {
					"$ref": "#/definitions/StationCodeListDef"
				},
				"code": {
					"description": "the code representing the station in the specified code-list",
					"type": "string"
				},
				"country": {
					"$ref": "#/definitions/CountryDef"
				},
				"name": {
					"$ref": "#/definitions/TextDef"
				},
				"geoCoordinate": {
					"$ref": "#/definitions/GeoCoordinate"
				}
			},
			"required": [
				"code",
				"country"
			],
			"additionalProperties": false
		},
		"StationCodeListDef": {
			"description": "Code list used for the station codes: UIC = UIC codes as used by merits (UIC country code + local code) = Default/ UIC-R = UIC codes for reservation (UIC country code + local code reservation) / ERA = future ERA station code",
			"type": "string",
			"default": "UIC"
		},
		"ServiceBrandCodeDef": {
			"description": "Service brand codes allowed in response, code list can be found on  [https:/uic.org/passenger/passenger-services-group/article/service-brand-code-list] (https:/uic.org/passenger/passenger-services-group/article/service-brand-code-list)",
			"type": "integer",
			"format": "int32"
		},
		"GeoCoordinate": {
			"description": "Used to provide any geo-encoded location, regardless of environment, using longitude and latitude coordinates.",
			"type": "object",
			"properties": {
				"system": {
					"description": "geo coordinate system indication: \n - WGS84 = WGS 84 standard system,\n - GRS80 = (outdated) GRS 80 coordinate system",
					"type": "string",
					"enum": [
						"WGS84",
						"GRS80"
					],
					"default": "WGS84"
				},
				"accuracy": {
					"description": "to be provided in degree.",
					"type": "number",
					"format": "float"
				},
				"latitude": {
					"description": "Geographic coordinate that specifies the north-south position of a point on the earths surface",
					"type": "number",
					"format": "float",
					"example": 46.948825
				},
				"longitude": {
					"description": "Geographic coordinate that specifies the east-west position of a point on the earths surface.            ",
					"type": "number",
					"format": "float",
					"example": 7.439122
				}
			},
			"required": [
				"latitude",
				"longitude"
			],
			"additionalProperties": false
		},
		"CurrencyDef": {
			"description": "ISO4217 currency codes",
			"type": "string"
		},
		"CurrencyPriceDef": {
			"type": "object",
			"minProperties": 1,
			"properties": {
				"currency": {
					"$ref": "#/definitions/CurrencyDef"
				},
				"amount": {
					"description": "by default of the scale the amount in cents",
					"type": "integer",
					"format": "int32"
				},
				"scale": {
					"description": "scale of the amount - the number of positions after the comma",
					"type": "integer",
					"format": "int32",
					"default": 2
				},
				"vatDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/VatDetailDef"
					}
				}
			},
			"required": [
				"currency",
				"amount"
			],
			"additionalProperties": false
		},
		"VatDetailDef": {
			"type": "object",
			"properties": {
				"country": {
					"description": "by default of the scale the amount in cents",
					"$ref": "#/definitions/CountryDef"
				},
				"amount": {
					"description": "by default of the scale the amount in cents",
					"type": "integer",
					"format": "int32"
				},
				"scale": {
					"description": "scale of the amount - the number of positions after the comma",
					"type": "integer",
					"format": "int32",
					"default": 2
				},
				"percentage": {
					"type": "number",
					"format": "float"
				},
				"taxId": {
					"type": "string"
				},
				"scope": {
					"$ref": "#/definitions/VatScopeDef"
				}
			},
			"required": [
				"country",
				"amount"
			],
			"additionalProperties": false
		},
		"VatScopeDef": {
			"description": "scope where the VAT applies",
			"type": "string",
			"enum": [
				"INTERNATIONAL",
				"NATIONAL",
				"SHORT_DISTANCE",
				"LONG_DISTANCE"
			]
		},
		"ReductionCardReferenceDef": {
			"type": "object",
			"properties": {
				"cardValue": {
					"description": "code of the card type according to code list",
					"type": "string"
				},
				"cardValueType": {
					"description": "code list for the cardValue provided",
					"type": "string"
				},
				"cardName": {
					"description": "card name for printing on fulfillments",
					"type": "string"
				},
				"issuer": {
					"description": "RICS company code or the upcoming compatible ERA company code. In case proprietary codes are used on a bilateral base the codes must have at least 5 positions and start with x.",
					"type": "string"
				}
			},
			"required": [
				"cardValue",
				"cardName"
			],
			"additionalProperties": false
		},
		"ServiceClassDefinitionDef": {
			"type": "object",
			"properties": {
				"id": {
					"$ref": "#/definitions/ServiceClassIdDef"
				},
				"textRef": {
					"description": "id of the text describing the class within the offline data text list",
					"type": "string"
				},
				"comfortClass": {
					"deprecated": true,
					"$ref": "#/definitions/ComfortClassDef"
				},
				"travelClass": {
					"$ref": "#/definitions/TravelClassDef"
				}
			},
			"required": [
				"id"
			],
			"additionalProperties": false
		},
		"ComfortClassDef": {
			"description": "Generic class classification, mostly used to harmonize choice and representation across multiple carriers",
			"type": "string",
			"enum": [
				"FIRST",
				"SECOND",
				"ANY_CLASS"
			]
		},
		"TravelClassDef": {
			"description": "Generic class classification, mostly used to harmonize choice and representation across multiple carriers",
			"type": "string",
			"enum": [
				"FIRST",
				"SECOND",
				"ANY_CLASS"
			]
		},
		"FulfillmentMediaTypeDef": {
			"description": "Fulfillment types. RCT2, RCCST and UIC-PDF are official UIC standards.",
			"type": "string",
			"enum": [
				"RCT2",
				"RCCST",
				"UIC_PDF",
				"PDF_A4",
				"PKPASS",
				"TICKETLESS",
				"ALLOCATOR_APP",
				"SOCIAL_MEDIA_ACCOUNTS"
			]
		},
		"FulfillmentOption": {
			"description": "CIT paper implies printing on value paper which is stock controlled.",
			"type": "object",
			"properties": {
				"fulfillmentType": {
					"type": "string",
					"enum": [
						"ETICKET",
						"CIT_PAPER"
					]
				},
				"media": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FulfillmentMediaTypeDef"
					}
				}
			}
		},
		"RegulatoryConditionsDef": {
			"description": "regulatory condition",
			"type": "array",
			"items": {
				"type": "string",
				"x-extensible-enum": [
					"CIV",
					"MC",
					"EU_PRR",
					"RESPLUS"
				]
			}
		},
		"LegacyAccountingIdentifierDef": {
			"description": "identifier of the fare in the current 301 accounting file",
			"type": "object",
			"properties": {
				"serialId": {
					"description": "sequential number of regional validities",
					"type": "integer",
					"format": "int32",
					"minimum": 0,
					"maximum": 99999
				},
				"addId": {
					"description": "sequential number of regional validities (leading positions in case the series is too short",
					"type": "integer",
					"format": "int32",
					"minimum": 0,
					"maximum": 99
				},
				"tariffId": {
					"description": "sequential number of the fares for one regional validity",
					"type": "integer",
					"format": "int32",
					"minimum": 0,
					"maximum": 99999
				}
			},
			"additionalProperties": false
		},
		"CalendarDef": {
			"description": "calendar",
			"type": "object",
			"properties": {
				"id": {
					"description": "\\*** BULK-ONLY *** identification within the bulk data mandatory in bulk data exchange",
					"type": "string"
				},
				"fromDate": {
					"type": "string",
					"format": "date-time"
				},
				"untilDate": {
					"type": "string",
					"format": "date-time"
				},
				"dates": {
					"description": "dates included in the calendar. In case no dates are provided the range is assumed to be valid",
					"type": "array",
					"items": {
						"type": "string",
						"format": "date-time"
					}
				},
				"utcOffset": {
					"description": "offset to UTC in minutes (number of minutes to be added to get UTC dates)",
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"TimeUnitDef": {
			"type": "string",
			"enum": [
				"DAYS",
				"HOURS",
				"MINUTES"
			]
		},
		"TravelValidityConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"description": "mandatory in bulk data exchange",
					"type": "string"
				},
				"validTravelDates": {
					"$ref": "#/definitions/CalendarDef"
				},
				"validityRange": {
					"type": "object",
					"properties": {
						"timeUnit": {
							"$ref": "#/definitions/TimeUnitDef"
						},
						"value": {
							"type": "number"
						},
						"hoursAfterMidnight": {
							"description": "validity extended after midnight",
							"type": "number"
						}
					},
					"required": [
						"timeUnit",
						"value"
					],
					"additionalProperties": false
				},
				"excludedTimeRange": {
					"description": "time ranges excluded from the validity (e.g. off peak fulfillments)",
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"from": {
								"description": "minutes of the day in the time zone of travel",
								"type": "integer",
								"format": "int32"
							},
							"until": {
								"description": "minutes of the day in the time zone of travel",
								"type": "integer",
								"format": "int32"
							},
							"scope": {
								"description": "START_OF_TRAVEL,COMPLETE_RANGE",
								"type": "string"
							}
						},
						"required": [
							"from",
							"until",
							"scope"
						],
						"additionalProperties": false
					}
				},
				"numberOfTravelDays": {
					"description": "number of allowed travel days (e.g. 3 travel days within 2 weeks)",
					"type": "integer",
					"format": "int32"
				},
				"returnConstraint": {
					"description": "a return trip with the same carrier must be sold in combination",
					"type": "object",
					"properties": {
						"latestReturn": {
							"description": "number of days after departure or start of validity of the last return",
							"type": "integer",
							"format": "int32"
						},
						"earliestReturn": {
							"description": "number of days after departure or start of validity of the earliest return",
							"type": "integer",
							"format": "int32"
						},
						"excludedWeekdays": {
							"description": "weekdays (ISO day of the week, 1 = Monday) between travel and return where travel is not allowed",
							"type": "array",
							"items": {
								"type": "integer",
								"format": "int32"
							}
						}
					},
					"required": [
						"latestReturn",
						"earliestReturn"
					],
					"additionalProperties": false
				},
				"trainValidity": {
					"description": "validity depending on boarding / leaving of a train. The ticket is also valid from departure until the destination station in the train ",
					"type": "object",
					"properties": {
						"carrierConstraintRef": {
							"type": "string"
						},
						"serviceConstraintRef": {
							"type": "string"
						},
						"scope": {
							"type": "string",
							"enum": [
								"BOARDING",
								"ARRIVAL"
							],
							"default": "BOARDING"
						}
					},
					"required": [
						"carrierConstraintRef",
						"scope"
					],
					"additionalProperties": false
				},
				"validityType": {
					"description": "type of usage, eigther as single trip or multiple trips. Unrestricted fares might be combined into single trips when appropriate",
					"type": "string",
					"default": "SINGLE_TRIP",
					"x-extensible-enum": [
						"SINGLE_TRIP",
						"MULTIPLE_TRIPS",
						"UNRESTRICTED"
					]
				},
				"tripAllocationConstraint": {
					"$ref": "#/definitions/TripAllocationConstraintDef"
				},
				"tripInterruptionConstraint": {
					"$ref": "#/definitions/TripInterruptionConstraintDef"
				}
			},
			"required": [
				"validityRange"
			],
			"additionalProperties": false
		},
		"TripInterruptionProcess": {
			"description": "MANUAL: passenger needs manual confirmation of train or station staff to interrupt the trip. ACTIVATION: Passenger needs to deactivate the ticket during the interruption (via an app).",
			"type": "string",
			"x-extensible-enum": [
				"NONE",
				"MANUAL",
				"ACTIVATION"
			]
		},
		"TripAllocationProcess": {
			"description": "NONE: Individual trips don't need to be allocated. MANUAL: The passenger has to allocate a trip manually (This should not be used as it is by desiugn non-interoperable). ACTIVATION: Individual trips can be allocatted by activation of the ticket. FULFILLMENT A new fulfillment needs to be created to allocate a trip",
			"type": "string",
			"x-extensible-enum": [
				"NONE",
				"MANUAL",
				"ACTIVATION",
				"FULFILLMENT"
			]
		},
		"TripAllocationUnit": {
			"description": "NONE: Individual trips don't need to be allocated. TRIP: allocation per individual trip. DAY: The allocation is per travel day DURATION: the allocation is per duration",
			"type": "string",
			"x-extensible-enum": [
				"NONE",
				"TRIP",
				"DAY",
				"DURATION"
			]
		},
		"TripAllocationConstraintDef": {
			"description": "constraint on the use of a multiple trip ticket",
			"type": "object",
			"properties": {
				"allocationUnit": {
					"$ref": "#/definitions/TripAllocationUnit"
				},
				"maxUnits": {
					"description": "maximum number of allowed units to be allocated",
					"type": "integer",
					"format": "int32"
				},
				"durationUnit": {
					"description": "multiples of this duration can be allocated",
					"type": "string",
					"format": "duration",
					"examples": [
						"PT30M"
					]
				},
				"requiredProcesses": {
					"description": "one of the listed processes is required for the allocation of a single trip.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TripAllocationProcess"
					}
				}
			},
			"required": [
				"allocationUnit",
				"requiredProcesses"
			]
		},
		"TripInterruptionConstraintDef": {
			"description": "rules on allowed trip interruptions. Interruptions due to a train change  indicated by a trip search must not be included here.",
			"type": "object",
			"properties": {
				"maxInterruptions": {
					"description": "maximum number of interruptions",
					"type": "integer",
					"format": "int32"
				},
				"maxDuration": {
					"description": "maximum duration of one interruption",
					"type": "string",
					"format": "duration",
					"examples": [
						"PT30M"
					]
				},
				"totalMaxDuration": {
					"description": "maximum duration of all interruptions on the route",
					"type": "string",
					"format": "duration",
					"examples": [
						"PT30M"
					]
				},
				"requiredProcesses": {
					"description": "one of the listed processes is required for the interruption of the trip.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TripInterruptionProcess"
					}
				}
			},
			"required": [
				"maxInterruptions",
				"requiredProcesses"
			]
		},
		"TravelerTypeDef": {
			"description": "Subset of the values from the traveler type code list IRS 90918-10 ",
			"type": "string"
		},
		"ReductionConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"description": "in bulk data only",
					"type": "string"
				},
				"requiredCards": {
					"description": "One of the listed cards is required to be valid at the time of travel.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReductionCardReferenceDef"
					}
				}
			},
			"required": [
				"requiredCards"
			],
			"additionalProperties": false
		},
		"CompanyDef": {
			"description": "RICS company code or the upcoming compatible ERA company code. In case proprietary codes are used on a bilateral base the  codes must have at least 5 positions and start with x",
			"type": "string"
		},
		"FareCombinationModelDef": {
			"type": "object",
			"properties": {
				"model": {
					"description": "Possible models are SEPARATE_CONTRACT, CLUSTERING, COMBINING.  The models need to be supported by the allocator.",
					"type": "string"
				},
				"combinableCarrier": {
					"description": "List of all carriers where the model can be applied, in case the list is empty all combinations are allowed.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyDef"
					}
				},
				"onlyWhenCombined": {
					"description": "This combination model applies only in case the fare is combined with another carrier",
					"type": "boolean",
					"default": false
				},
				"referenceCluster": {
					"description": "In case of CLUSTERING model: the cluster to which the fare belongs",
					"type": "string"
				},
				"allowedClusters": {
					"description": "In case of CLUSTERING model: the other clusters that allow a combination",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"allowedAllocators": {
					"description": "List of allowed allocators. If the list is empty all allocators with a sales contract are permitted.",
					"deprecated": true,
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyDef"
					}
				},
				"allowedDistributors": {
					"description": "List of allowed distrubutors. If the list is empty all distrubutors with a sales contract are allowed.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyDef"
					}
				},
				"allowedCommonContracts": {
					"description": "List of carriers where a common contract with separate fulfillments are allowed.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyDef"
					}
				}
			},
			"required": [
				"model"
			],
			"additionalProperties": false
		},
		"FareCombinationConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"combinationModels": {
					"type": "array",
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/FareCombinationModelDef"
					}
				}
			},
			"required": [
				"id",
				"combinationModels"
			],
			"additionalProperties": false
		},
		"AfterSalesConditionDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"afterSalesRules": {
					"type": "array",
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/AfterSalesRuleDef"
					}
				}
			},
			"required": [
				"id",
				"afterSalesRules"
			],
			"additionalProperties": false
		},
		"PriceDef": {
			"type": "object",
			"properties": {
				"id": {
					"description": "required for bulk data transfer",
					"type": "string"
				},
				"price": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CurrencyPriceDef"
					}
				}
			},
			"required": [
				"price"
			],
			"additionalProperties": false
		},
		"RelativeTimeDef": {
			"type": "object",
			"properties": {
				"timeUnit": {
					"description": "Time unit in days, hours or minutes.",
					"type": "string",
					"enum": [
						"DAYS",
						"HOURS",
						"MINUTES"
					]
				},
				"timeValue": {
					"type": "integer",
					"format": "int32"
				},
				"timeReference": {
					"description": "Time reference.",
					"type": "string",
					"enum": [
						"BEFORE_DEPARTURE",
						"AFTER_DEPARTURE",
						"AFTER_SALE",
						"BEFORE_START_VALIDITY",
						"AFTER_END_VALIDITY"
					]
				}
			},
			"required": [
				"timeUnit",
				"timeValue",
				"timeReference"
			],
			"additionalProperties": false
		},
		"AfterSalesRuleDef": {
			"type": "object",
			"properties": {
				"transactionType": {
					"description": "code list Reason for after sale",
					"type": "string"
				},
				"feeRef": {
					"description": "Reference to a price data item defining the fee; optional in case there is no fee but the  after sales transaction is allowed. Online services include fee directly in the fee tag.",
					"type": "string"
				},
				"applicationTime": {
					"$ref": "#/definitions/RelativeTimeDef"
				},
				"isCarrierFee": {
					"description": "indicates that the fee belongs to the allocator",
					"type": "boolean",
					"default": false
				},
				"individualContracts": {
					"description": "indicates that the after sales of this fare can be treated independently per person.",
					"type": "boolean",
					"default": false
				}
			},
			"required": [
				"transactionType"
			],
			"additionalProperties": false
		},
		"RegionalValidityDef": {
			"type": "array",
			"items": {
				"description": "One of the elements Zone, ViaStation, TrainLink, Line, or Polygon defining the regional validity",
				"type": "object",
				"properties": {
					"seqNb": {
						"description": "order number of the list item",
						"type": "integer",
						"format": "int32"
					},
					"zone": {
						"$ref": "#/definitions/ZoneDef"
					},
					"viaStations": {
						"$ref": "#/definitions/ViaStationsDef"
					},
					"trainLink": {
						"$ref": "#/definitions/TrainLinkDef"
					},
					"line": {
						"$ref": "#/definitions/LineDef"
					},
					"polygon": {
						"$ref": "#/definitions/PolygonDef"
					},
					"carrierConstraintRef": {
						"type": "string"
					},
					"serviceConstraintRef": {
						"type": "string"
					}
				},
				"additionalProperties": false
			}
		},
		"LineDef": {
			"description": "terminalStation - in case the product requires a destination within the zone (e.g. local ticket  to go to the main rail station).  entryStation - Station to enter the zone in case the product requires to enter the zone via a  specific station (e.g. local zone ticket to start from the main rail station).",
			"type": "object",
			"properties": {
				"binaryLineId": {
					"description": "Id to support local traffic standards (e.g. VDV,...).",
					"type": "string"
				},
				"carrier": {
					"$ref": "#/definitions/CompanyDef"
				},
				"city": {
					"type": "integer",
					"format": "int32"
				},
				"entryStation": {
					"$ref": "#/definitions/StationDef"
				},
				"lineId": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"terminalStation": {
					"$ref": "#/definitions/StationDef"
				},
				"nutsCode": {
					"description": "Nomenclature des units territoriales statistiques  \n COMMISSION REGULATION (EU) No 31/2011",
					"type": "string"
				}
			},
			"required": [
				"carrier"
			],
			"additionalProperties": false
		},
		"TrainLinkDef": {
			"type": "object",
			"properties": {
				"fromStation": {
					"$ref": "#/definitions/StationDef"
				},
				"toStation": {
					"$ref": "#/definitions/StationDef"
				},
				"train": {
					"type": "string"
				},
				"travelDate": {
					"description": "date and time of the departure where the train link starts",
					"type": "string",
					"format": "date-time"
				}
			},
			"required": [
				"fromStation",
				"toStation",
				"train",
				"travelDate"
			],
			"additionalProperties": false
		},
		"PolygonDef": {
			"type": "object",
			"properties": {
				"edge": {
					"type": "array",
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/GeoCoordinate"
					}
				}
			},
			"additionalProperties": false
		},
		"ViaStationsDef": {
			"type": "object",
			"properties": {
				"isBorder": {
					"type": "boolean",
					"default": false
				},
				"routeId": {
					"type": "integer",
					"format": "int32"
				},
				"seriesId": {
					"type": "integer",
					"format": "int32"
				},
				"alternativeRoute": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViaStationsDef"
					}
				},
				"carrier": {
					"deprecated": true,
					"$ref": "#/definitions/CompanyDef"
				},
				"carrierConstraintRef": {
					"description": "restriction to a specific carriers",
					"type": "string"
				},
				"route": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ViaStationsDef"
					}
				},
				"serviceBrand": {
					"description": "restriction to a specific service brand",
					"deprecated": true,
					"type": "string"
				},
				"serviceConstraintRef": {
					"description": "restriction to a specific service brands",
					"type": "string"
				},
				"station": {
					"$ref": "#/definitions/StationDef"
				},
				"fareReferenceStationSet": {
					"description": "reference to a list of stations included in the fare",
					"type": "object",
					"properties": {
						"carrier": {
							"$ref": "#/definitions/CompanyDef"
						},
						"code": {
							"type": "string"
						},
						"name": {
							"type": "string"
						}
					},
					"required": [
						"carrier",
						"code"
					],
					"additionalProperties": false
				},
				"routeValidityType": {
					"description": "Indiction of the type of validity for a route. In case of LINE validity (Default) the described lines are allowed for travel. In case of BUBBLE it is additionally allowed to travel on all routes inbetween the defined lines.",
					"type": "string",
					"enum": [
						"LINE",
						"BUBBLE"
					],
					"default": "LINE"
				},
				"stop": {
					"description": "indicates that the station must be a real stop. In case a service passes the station but does not stop there the fare is not valid. Default is false. ",
					"type": "boolean",
					"default": false
				},
        "technicalViaOnly": {
          "description": "this via station is used to support the alignment with time tables but is not part of the contractual route provided to the passenger.",
          "type": "boolean",
          "default": false
        }
			},
			"additionalProperties": false
		},
		"ZoneDef": {
			"description": "carrier - carrier responsible for the transport. entryStation - Station to enter the zone in case the product requires to enter the zone via a specific station (e.g. local zone ticket to start from the main rail station). terminalStation - Terminal station in case the product requires a destination within the zone (e.g. local ticket to go to the main rail station).",
			"type": "object",
			"properties": {
				"name": {
				        "description": "Name of the zone to be used in descriptions for the regional validity.",
				        "type": "string"				          
				},
				"binaryZoneId": {
					"description": "Id to support local traffic standards (e.g. VDV,...)",
					"type": "string",
					"contentEncoding": "base64"
				},
				"carrier": {
					"$ref": "#/definitions/CompanyDef"
				},
				"city": {
					"type": "integer",
					"format": "int32"
				},
				"entryStation": {
					"$ref": "#/definitions/StationDef"
				},
				"terminalStation": {
					"$ref": "#/definitions/StationDef"
				},
				"zoneIds": {
					"description": "to be used in bar codes",
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int32"
					}
				},
				"nutsCode": {
					"description": "Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011",
					"type": "string"
				}
			},
			"required": [
				"carrier"
			],
			"additionalProperties": false
		},
		"FulfillmentConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"acceptedControlSecurityTypes": {
					"type": "array",
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/ControlSecurityTypeDef"
					}
				},
				"acceptedBarCodes": {
					"description": "for SiD fulfillment one of the listed bar codes is required",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BarCodeTypesDef"
					}
				},
				"requiredBarCodes": {
					"description": "One of the listed bar codes must be provided.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BarCodeTypesDef"
					}
				},
				"requiredSiS": {
					"description": "To guarantee security in system (SiS) of the fulfillment one of the listed interfaces is required.",
					"type": "array",
					"items": {
						"description": "Interface type to ticket control data. REGISTRY means submitting the data to the central UIC registry. PEER_TO_PEER means data exchange is handled between the two parties directly.",
						"type": "string",
						"enum": [
							"REGISTRY",
							"PEER_TO_PEER"
						]
					}
				},
				"individualTicketingPermitted": {
					"description": "a separate fulfillment per traveler is permitted",
					"type": "boolean",
					"default": false
				},
				"separateFulfillmentRequired": {
					"description": "a separate fulfillment for the regional constraint is required",
					"type": "boolean",
					"default": false
				}
			},
			"required": [
				"id",
				"acceptedControlSecurityTypes"
			],
			"additionalProperties": false
		},
		"BarCodeTypesDef": {
			"description": "Item according to IRS 90918-9: FCB, TLB, SSB",
			"type": "string",
			"enum": [
				"FCB",
				"TLB",
				"SSB"
			]
		},
		"PersonalDataConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"requiredData": {
					"type": "array",
					"minItems": 1,
					"items": {
						"type": "object",
						"properties": {
							"dataItem": {
								"description": "see code list IRS 90918-10",
								"type": "string"
							},
							"transfer": {
								"description": "Transfer mode: BOOKING, SIS_CONTROL, SID_CONTROL.",
								"type": "array",
								"minItems": 1,
								"items": {
									"type": "string",
									"enum": [
										"BOOKING",
										"SIS_CONTROL",
										"SID_CONTROL"
									]
								}
							},
							"ticketHolderOnly": {
								"type": "boolean",
								"default": false
							},
							"crossBorder": {
								"description": "the data are required only in case one of the cross border conditions apply",
								"type": "array",
								"items": {
									"$ref": "#/definitions/CrossBorderConditionDef"
								}
							},
							"fulfillmentType": {
								"description": "type of fulfillment in case the personal data are required for that type only",
								"type": "array",
								"items": {
									"$ref": "#/definitions/ControlSecurityTypeDef"
								}
							}
						},
						"required": [
							"dataItem",
							"transfer"
						],
						"additionalProperties": false
					}
				},
				"allowedChanges": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"acceptedReason": {
								"type": "string",
								"enum": [
									"IN_GENERAL",
									"MARRIAGE",
									"DOCUMENT_CHANGE",
									"AGENT_ERROR"
								]
							},
							"timeLimit": {
								"description": "the change is limited to n hours after booking confirmation",
								"type": "integer",
								"format": "int32"
							}
						},
						"required": [
							"acceptedReason"
						],
						"additionalProperties": false
					}
				}
			},
			"additionalProperties": false
		},
		"CrossBorderConditionDef": {
			"type": "object",
			"properties": {
				"fromCountry": {
					"$ref": "#/definitions/CountryDef"
				},
				"toCountry": {
					"$ref": "#/definitions/CountryDef"
				},
				"affectedServiceBrands": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceBrandCodeDef"
					}
				}
			},
			"required": [
				"fromCountry",
				"toCountry"
			],
			"additionalProperties": false
		},
		"CountryDef": {
			"description": "ISO 3166 2A codes",
			"type": "string"
		},
		"ControlSecurityTypeDef": {
			"description": "SIP: secure paper tickets; SID: security in data (signed bar code); SIS: security in system",
			"type": "string",
			"enum": [
				"SIP",
				"SID",
				"SIS"
			]
		},
		"LegacyReservationParameterDef": {
			"description": "reservation parameter to support the UIC 90918-1 interface for booking",
			"type": "object",
			"properties": {
				"travelClass": {
					"description": "90918-1 class code in reservation",
					"type": "string"
				},
				"serviceLevelCode": {
					"description": "service level code defined in UIC 90918-1",
					"type": "string"
				},
				"serviceCode": {
					"description": "service code to be used in reservation",
					"type": "string"
				},
				"berthType": {
					"type": "string"
				},
				"coachTypeCode": {
					"type": "string"
				},
				"compartmentTypeCode": {
					"type": "string"
				},
				"tariff": {
					"type": "string"
				}
			},
			"required": [
				"travelClass",
				"serviceLevelCode",
				"serviceCode"
			],
			"additionalProperties": false
		},
		"ReservationOptionGroupDef": {
			"type": "object",
			"properties": {
				"preferenceGroup": {
					"type": "string",
					"example": "SEAT_DIRECTION"
				},
				"preferences": {
					"type": "array",
					"minItems": 1,
					"items": {
						"type": "string",
						"example": "FORWARD_FACING"
					}
				}
			},
			"required": [
				"preferenceGroup",
				"preferences"
			],
			"additionalProperties": false
		},
		"CarrierConstraintDef": {
			"description": "Either excluded or included carriers can be set.",
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"includedCarrier": {
					"type": "array",
					"items": {
						"description": "company code. In case proprietary codes are used on a bilateral base the  codes must have at least 5 positions and start with x",
						"$ref": "#/definitions/CompanyDef"
					}
				},
				"excludedCarrier": {
					"type": "array",
					"items": {
						"description": "company code. In case proprietary codes are used on a bilateral base the  codes must have at least 5 positions and start with x",
						"$ref": "#/definitions/CompanyDef"
					}
				}
			},
			"additionalProperties": false
		},
		"ServiceClassIdDef": {
			"description": "Level of quality, finer grained than the comfort class.",
			"type": "string",
			"enum": [
				"BEST",
				"HIGH",
				"STANDARD",
				"BASIC",
				"ANY_CLASS"
			]
		},
		"ServiceLevelDef": {
			"type": "object",
			"properties": {
				"id": {
					"$ref": "#/definitions/ServiceLevelIdDef"
				},
				"combiningServiceClassIds": {
					"description": "list of service class ids that can be combined with these service levels",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceClassIdDef"
					}
				},
				"textRef": {
					"description": "id of the text describing the service level",
					"type": "string"
				},
				"doesNotIncludeClassName": {
					"description": "indicates that the class name is not included",
					"type": "boolean",
					"default": false
				},
				"reservationParameterId": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"textRef"
			],
			"additionalProperties": false
		},
		"ServiceLevelIdDef": {
			"description": "Code of the service level, code-list in IRS 90918-1.",
			"type": "string"
		},
		"ServiceConstraintDef": {
			"description": "Either excluded or included service brands can be set.",
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"includedServiceBrands": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceBrandCodeDef"
					}
				},
				"excludedServiceBrands": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceBrandCodeDef"
					}
				},
				"legacyCode": {
					"description": "id used in B.1 as fake local station code ",
					"type": "integer"
				},
				"textRef": {
					"description": "id of the text describing the service constraint for the traveler",
					"type": "string"
				}
			},
			"required": [
				"id"
			],
			"additionalProperties": false
		},
		"FareTypeDef": {
			"description": "UIC fare types",
			"type": "string",
			"enum": [
				"ADMISSION",
				"RESERVATION",
				"INTEGRATED_RESERVATION",
				"ANCILLARY"
			]
		},
		"RegionalConstraintDef": {
			"description": "regional constraint of the fare-offline bulk data use the id of connection points whereas in an online environment the connection point is included",
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"entryConnectionPointId": {
					"description": "connection point connecting two fare regimes",
					"type": "string"
				},
				"entryConnectionPoint": {
					"$ref": "#/definitions/ConnectionPointDef"
				},
				"exitConnectionPointId": {
					"description": "connection point connecting two fare regimes",
					"type": "string"
				},
				"exitConnectionPoint": {
					"$ref": "#/definitions/ConnectionPointDef"
				},
				"regionalValidity": {
					"$ref": "#/definitions/RegionalValidityDef"
				},
				"distance": {
					"description": "distance in km for statistics ",
					"type": "integer",
					"format": "int32"
				}
			},
			"required": [
				"regionalValidity"
			],
			"additionalProperties": false
		},
		"TranslationDef": {
			"type": "object",
			"properties": {
				"language": {
					"type": "string"
				},
				"textUtf8": {
					"type": "string"
				},
				"text": {
					"description": "text without special characters according to ICAO specification",
					"type": "string"
				},
				"shortTextUtf8": {
					"type": "string"
				},
				"shortText": {
					"description": "text without special characters according to ICAO specification",
					"type": "string"
				}
			},
			"required": [
				"language",
				"textUtf8"
			],
			"additionalProperties": false
		},
		"TextDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"textUtf8": {
					"type": "string"
				},
				"translations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranslationDef"
					}
				},
				"text": {
					"description": "text without special characters according to ICAO specification",
					"type": "string"
				},
				"shortTextUtf8": {
					"type": "string"
				},
				"shortText": {
					"description": "text without special characters according to ICAO specification",
					"type": "string"
				}
			},
			"required": [
				"id",
				"textUtf8",
				"text"
			],
			"additionalProperties": false
		},
		"ConnectionPointDef": {
			"description": "connection point connecting two fare regimes. The connection is possible between stations of the two provided station sets.",
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"legacyBorderPointCode": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"stationSets": {
					"type": "array",
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/StationDef"
						}
					}
				}
			},
			"required": [
				"id",
				"stationSets"
			],
			"additionalProperties": false
		},
		"FareDeliveryDef": {
			"type": "object",
			"properties": {
				"delivery": {
					"$ref": "#/definitions/FareDeliveryDetailsDef"
				},
				"fareStructure": {
					"$ref": "#/definitions/FareDataDef"
				}
			},
			"required": [
				"delivery",
				"fareStructure"
			],
			"additionalProperties": false
		},
		"FareDataDef": {
			"type": "object",
			"properties": {
				"calendars": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CalendarDef"
					}
				},
				"serviceClassDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceClassDefinitionDef"
					}
				},
				"serviceLevelDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceLevelDef"
					}
				},
				"texts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TextDef"
					}
				},
				"fareResourceLocation": {
					"$ref": "#/definitions/FareResourceLocationDef"
				},
				"prices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PriceDef"
					}
				},
				"regionalConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RegionalConstraintDef"
					}
				},
				"serviceConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceConstraintDef"
					}
				},
				"carrierConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CarrierConstraintDef"
					}
				},
				"passengerConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PassengerConstraintDef"
					}
				},
				"fareConstraintBundles": {
					"type": "array",
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/FareConstraintBundle"
					}
				},
				"passengerCombinationConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PassengerCombinationConstraintDef"
					}
				},
				"fares": {
					"type": "array",
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/FareDef"
					}
				},
				"afterSalesConditions": {
					"description": "list of allowed after sales transactions and conditions",
					"type": "array",
					"items": {
						"$ref": "#/definitions/AfterSalesConditionDef"
					}
				},
				"supportedOnlineServices": {
					"type": "array",
					"items": {
						"description": "list of supported services (code list supported services)",
						"type": "string"
					}
				},
				"salesAvailabilityConstraint": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SalesAvailabilityConstraintDef"
					}
				},
				"travelValidityConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TravelValidityConstraintDef"
					}
				},
				"combinationConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FareCombinationConstraintDef"
					}
				},
				"fulfillmentConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FulfillmentConstraintDef"
					}
				},
				"reductionConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReductionConstraintDef"
					}
				},
				"reductionCards": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReductionCardDef"
					}
				},
				"personalDataConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonalDataConstraintDef"
					}
				},
				"reservationParameters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReservationParameterDef"
					}
				},
				"connectionPoints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConnectionPointDef"
					}
				},
				"stationNames": {
					"description": "temporary option to include station details as long as MERITS can not provide them. Station codes must be those of merits",
					"type": "array",
					"items": {
						"$ref": "#/definitions/StationNamesDef"
					}
				},
				"fareReferenceStationSetDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FareReferenceStationSetDef"
					}
				},
				"zoneDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ZoneDefinitionDef"
					}
				},
				"luggageConstraints": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LuggageConstraint"
					}
				},
				"products": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Product"
					}
				}
			},
			"required": [
				"calendars",
				"serviceClassDefinitions",
				"regionalConstraints",
				"fareConstraintBundles",
				"fares",
				"salesAvailabilityConstraint",
				"combinationConstraints"
			],
			"additionalProperties": false
		},
		"FareDeliveryDetailsDef": {
			"type": "object",
			"properties": {
				"fareProvider": {
					"$ref": "#/definitions/CompanyDef"
				},
				"deliveryId": {
					"description": "unique id of this data delivery",
					"type": "string"
				},
				"previousDeliveryId": {
					"type": "string"
				},
				"replacementDeliveryId": {
					"description": "in case this delivery replaces an previous delivery",
					"type": "string"
				},
				"optionalDelivery": {
					"description": "this delivery is not mandatory to be downloaded. ",
					"type": "boolean",
					"default": false
				},
				"version": {
					"description": "version of the data schema",
					"type": "string"
				},
				"acceptedVersion": {
					"description": "minimal version required to use these data",
					"type": "string"
				},
				"usage": {
					"type": "string",
					"enum": [
						"PRODUCTION",
						"TEST_ONLY"
					]
				}
			},
			"required": [
				"fareProvider",
				"deliveryId",
				"version",
				"acceptedVersion"
			],
			"additionalProperties": false
		},
		"PassengerCombinationConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"maxWeightedPassengers": {
					"description": "The total weighted number of passengers on the offer is restricted to be equal or smaller than this maximum",
					"type": "number",
					"default": 999
				},
				"minWeightedPassengers": {
					"description": "The total weighted number of passengers on the offer is restricted to equal or larger than this minimum",
					"type": "number",
					"default": 0
				}
			},
			"required": [
				"id"
			],
			"additionalProperties": false
		},
		"PassengerConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"passengerType": {
					"description": "see code list travelerType",
					"type": "string"
				},
				"nameRef": {
					"type": "string"
				},
				"upperAgeLimit": {
					"type": "integer",
					"format": "int32"
				},
				"lowerAgeLimit": {
					"type": "integer",
					"format": "int32"
				},
				"ageLimitToTravelAlone": {
					"type": "integer",
					"format": "int32"
				},
				"ageLimitForReservation": {
					"type": "integer",
					"format": "int32"
				},
				"isAncillaryItem": {
					"type": "boolean",
					"default": false
				},
				"combinationConstraint": {
					"description": "constraints on accompanying passengers",
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"maxNumber": {
								"description": "number of passengers allowed per accompanying passenger",
								"type": "integer",
								"format": "int32",
								"default": 999
							},
							"minNumber": {
								"description": "number of passengers required as accompanying passenger",
								"type": "integer",
								"format": "int32",
								"default": 999
							},
							"passengerTypeRef": {
								"description": "Deprecated with v.1.4.",
								"deprecated": true,
								"$ref": "#/definitions/TravelerTypeDef"
							},
							"passengerConstraintRef": {
								"description": "Reference to a passenger constraint defining the passengers to be included for free. The referenced passenger constraint must not itself contain included free passengers",
								"type": "string"
							}
						},
						"additionalProperties": false
					}
				},
				"includedFreePassenger": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"number": {
								"description": "Number of passengers that can be included with one passenger for free. The number is given in fractions. The  calculation needs a precision of 1 digit fraction (e.g. with 0.33 dogs you need 3 adults to transport one dog  for free).",
								"type": "integer",
								"format": "int32"
							},
							"passengerTypeRef": {
								"deprecated": true,
								"$ref": "#/definitions/TravelerTypeDef"
							},
							"passengerConstraintRef": {
								"type": "string"
							}
						},
						"additionalProperties": false
					}
				},
				"passengerWeight": {
					"type": "number"
				}
			},
			"required": [
				"id",
				"passengerType",
				"nameRef"
			],
			"additionalProperties": false
		},
		"SalesAvailabilityConstraintDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"salesRestrictions": {
					"type": "array",
					"minItems": 1,
					"items": {
						"type": "object",
						"properties": {
							"startOfSale": {
								"$ref": "#/definitions/RelativeTimeDef"
							},
							"endOfSale": {
								"$ref": "#/definitions/RelativeTimeDef"
							},
							"salesDatesRef": {
								"description": "reference to the calendar with valid sales dates",
								"type": "string"
							}
						},
						"additionalProperties": false
					}
				}
			},
			"required": [
				"id",
				"salesRestrictions"
			],
			"additionalProperties": false
		},
		"ReservationParameterDef": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"reservationRequired": {
					"type": "boolean",
					"default": false
				},
				"reservationParams918-1": {
					"$ref": "#/definitions/LegacyReservationParameterDef"
				},
				"reservationOptions": {
					"description": "options for reservations, Note: full details might be provided in the online version only",
					"type": "object",
					"properties": {
						"preferences": {
							"description": "possible preferences to be requested in reservation without changing the fare",
							"type": "array",
							"items": {
								"$ref": "#/definitions/ReservationOptionGroupDef"
							}
						},
						"graphicalReservation": {
							"description": "graphical reservation is supported, interface type \"NO\",\"UIC_918\",..",
							"type": "string"
						},
						"serviceBrands": {
							"description": "service brands where the options apply",
							"type": "array",
							"items": {
								"$ref": "#/definitions/ServiceBrandCodeDef"
							}
						}
					},
					"additionalProperties": false
				},
				"reservationRequiredForBrand": {
					"description": "service brand mode for which a reservation is mandatory",
					"type": "array",
					"items": {
						"type": "integer"
					}
				},
				"reservationRequiredForMode": {
					"description": "service service mode for which a reservation is mandatory",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"id"
			],
			"additionalProperties": false
		},
		"CarrierResourceLocationDef": {
			"type": "object",
			"properties": {
				"carrier": {
					"$ref": "#/definitions/CompanyDef"
				},
				"serviceBrandCode": {
					"$ref": "#/definitions/ServiceBrandCodeDef"
				},
				"onlineResource": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OnlineResourceDef"
					}
				}
			},
			"required": [
				"carrier",
				"onlineResource"
			],
			"additionalProperties": false
		},
		"ReductionCardDef": {
			"type": "object",
			"properties": {
				"issuer": {
					"$ref": "#/definitions/CompanyDef"
				},
				"id": {
					"description": "id of the card type within the issuer",
					"type": "string"
				},
				"name": {
					"$ref": "#/definitions/TextDef"
				},
				"nameRef": {
					"description": "referenced text in bulk data",
					"type": "string"
				},
				"includedCards": {
					"description": "This card includes the listed cards",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReductionCardReferenceDef"
					}
				},
				"serviceClasses": {
					"description": "list of service classes in case this class is available for different classes",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ServiceClassIdDef"
					}
				},
				"type": {
					"description": "LOYALTY_CARD,REDUCTION_CARD,PASS",
					"type": "string"
				},
				"cardIdRequired": {
					"description": "the card id must be delivered in online sales ",
					"type": "boolean",
					"default": false
				}
			},
			"required": [
				"issuer",
				"id",
				"nameRef"
			],
			"additionalProperties": false
		},
		"FareDef": {
			"description": "single fare within a blk fare data delivery",
			"type": "object",
			"properties": {
				"id": {
					"description": "unique id of the fare item to be included in accounting",
					"type": "string"
				},
				"bundleRef": {
					"type": "string"
				},
				"fareType": {
					"$ref": "#/definitions/FareTypeDef"
				},
				"nameRef": {
					"description": "reference to the fare name",
					"type": "string"
				},
				"priceRef": {
					"description": "reference to the price ",
					"type": "string"
				},
				"regionalConstraintRef": {
					"description": "reference to the regional validity",
					"type": "string"
				},
				"serviceConstraintRef": {
					"type": "string"
				},
				"carrierConstraintRef": {
					"type": "string"
				},
				"regulatoryConditions": {
					"$ref": "#/definitions/RegulatoryConditionsDef"
				},
				"serviceClassRef": {
					"type": "string"
				},
				"serviceLevelRef": {
					"type": "string"
				},
				"passengerConstraintRef": {
					"type": "string"
				},
				"afterSalesRulesRef": {
					"type": "string"
				},
				"reductionConstraintRef": {
					"type": "string"
				},
				"reservationParameterRef": {
					"type": "string"
				},
				"legacyAccountingIdentifier": {
					"$ref": "#/definitions/LegacyAccountingIdentifierDef"
				},
				"fareDetailDescriptionRef": {
					"description": "reference to a text with the details of the fare",
					"type": "string"
				},
				"legacyConversion": {
					"description": "options for legacy conversion to B.1: NO ( no conversion) YES (conversion allowed), ONLY (fare is provided only for conversion and should not be used otherwise ",
					"type": "string",
					"default": "NO"
				},
				"individualContracts": {
					"description": "indicates that the fare can be treated independently per person although booked for more than one person.",
					"type": "boolean",
					"default": false
				},
				"involvedTCOs": {
					"description": "ticket controling organizations involved in the control. Used to provide TCOs access to the ticket in the contraol data (IRS 90918-4)",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyDef"
					}
				},
				"luggageConstraintRef": {
					"description": "constraints on luggage. Eigther free included luggage in a fare for persons of restrictions on the luggage itself on a fare for luggage",
					"type": "string"
				}
			},
			"required": [
				"id",
				"bundleRef",
				"fareType"
			],
			"additionalProperties": false
		},
		"FareReferenceStationSetDef": {
			"description": "set of stations used in the fare equivalently. E.g. Brussels-Region). The set is identified by the fare provider and a code unique within the fare provider.",
			"type": "object",
			"properties": {
				"fareProvider": {
					"description": "ERA company code. In case proprietary codes are used on a bilateral base the  codes must have at least 5 positions and start with x",
					"$ref": "#/definitions/CompanyDef"
				},
				"code": {
					"description": "code of the fare reference station set used in regional validity. Unique within the fare provider.",
					"type": "string"
				},
				"stations": {
					"type": "array",
					"minItems": 1,
					"uniqueItems": true,
					"items": {
						"$ref": "#/definitions/StationDef"
					}
				},
				"legacyCode": {
					"description": "id used in B.1 as local station code ",
					"type": "integer"
				},
				"name": {
					"description": "name to be used in route descriptions",
					"type": "string"
				},
				"nameUtf8": {
					"type": "string"
				}
			},
			"required": [
				"fareProvider",
				"code",
				"stations",
				"legacyCode"
			],
			"additionalProperties": false
		},
		"FareResourceLocationDef": {
			"description": "Locate the online services",
			"type": "object",
			"properties": {
				"carrierLocations": {
					"description": "Locating the online resource via the carrier provided in the time table.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CarrierResourceLocationDef"
					}
				},
				"trainLocations": {
					"description": "Locating the online resource via the train from the time table.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TrainResourceLocationDef"
					}
				},
				"stationLocations": {
					"description": "Locating the online resource via stations or connection points. The link is valid if start and end station (or connection points) provide the link.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/StationResourceLocationDef"
					}
				}
			},
			"additionalProperties": false
		},
		"OnlineResourceDef": {
			"type": "object",
			"properties": {
				"offerType": {
					"description": "The resource provides offers bases on trains or based on areas. Train based offers must start and end at a real station and are not split between a train run. Values TRAIN, AREA",
					"type": "string"
				},
				"interfaceType": {
					"description": "see code list for interface type",
					"type": "string"
				},
				"version": {
					"type": "string"
				},
				"system": {
					"description": "system where the offer can be found (e.r. for TAP-TSI-B5 the reservation system code)",
					"type": "string"
				}
			},
			"required": [
				"interfaceType"
			],
			"additionalProperties": false
		},
		"StationNamesDef": {
			"description": "station names included temporarily until MERITS can provide the names",
			"type": "object",
			"properties": {
				"country": {
					"description": "uic country code",
					"type": "integer"
				},
				"code": {
					"description": "code ",
					"type": "string"
				},
				"localCode": {
					"description": "local code deprecated with version 1.4",
					"deprecated": true,
					"type": "integer"
				},
				"name": {
					"description": "station name with upper and lower case letters in ASCII",
					"type": "string"
				},
				"nameUtf8": {
					"description": "station name with upper and lower case letters in UTF8",
					"type": "string"
				},
				"shortName": {
					"description": "station name with upper and lower case letters in ASCII",
					"type": "string"
				},
				"shortNameUtf8": {
					"description": "station name with upper and lower case letters in UTF8",
					"type": "string"
				},
				"legacyBorderPointCode": {
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"StationResourceLocationDef": {
			"type": "object",
			"properties": {
				"onlineResource": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OnlineResourceDef"
					}
				},
				"stations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/StationDef"
					}
				},
				"connectionPointIds": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"onlineResource"
			],
			"additionalProperties": false
		},
		"TrainResourceLocationDef": {
			"type": "object",
			"properties": {
				"carrier": {
					"$ref": "#/definitions/CompanyDef"
				},
				"trainId": {
					"description": "train number (without service brand abbreviation)",
					"type": "string"
				},
				"onlineResource": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OnlineResourceDef"
					}
				}
			},
			"required": [
				"carrier",
				"trainId",
				"onlineResource"
			],
			"additionalProperties": false
		},
		"ZoneDefinitionDef": {
			"description": "definition of a zone used to define regional validity. The area of the zone can be defined via a geo-polygon, a complete list of all contained stations or area codes from the NUTS code list. The carrier is either the carrier or transport authority responsible for the definition.",
			"type": "object",
			"properties": {
				"carrier": {
					"$ref": "#/definitions/CompanyDef"
				},
				"zoneId": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"nameUtf8": {
					"type": "string"
				},
				"polygon": {
					"$ref": "#/definitions/PolygonDef"
				},
				"stationList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/StationDef"
					}
				},
				"nutsCodes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"carrier",
				"zoneId"
			],
			"additionalProperties": false
		},
		"FareConstraintBundle": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"combinationConstraintRef": {
					"type": "string"
				},
				"salesAvailabilityConstraintRef": {
					"type": "string"
				},
				"travelValidityConstraintRef": {
					"type": "string"
				},
				"fulfillmentConstraintRef": {
					"type": "string"
				},
				"personalDataConstraintRef": {
					"type": "string"
				},
				"passengerCombinationConstraintRef": {
					"type": "string"
				},
				"defaultFareType": {
					"$ref": "#/definitions/FareTypeDef"
				},
				"defaultCarrierConstraintRef": {
					"description": "CarrierConstraint",
					"type": "string"
				},
				"defaultRegulatoryConditions": {
					"$ref": "#/definitions/RegulatoryConditionsDef"
				},
				"defaultLuggageConstraintRef": {
					"type": "string"
				},
				"products": {
					"description": "references to products that can include the fares",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"id",
				"combinationConstraintRef",
				"salesAvailabilityConstraintRef",
				"travelValidityConstraintRef",
				"defaultFareType"
			],
			"additionalProperties": false
		},
		"LuggageConstraint": {
			"description": "constraints on luggage",
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"maxHandLuggage": {
					"description": "Standard hand luggage pieces",
					"type": "integer",
					"format": "int32"
				},
				"maxLargeLuggage": {
					"description": "Standard non-hand luggage pieces",
					"type": "integer",
					"format": "int32"
				},
				"restrictedLuggageItems": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LuggageRestriction"
					}
				},
				"luggageRules": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LuggageRestrictionRule"
					}
				}
			}
		},
		"LuggageRestrictionRule": {
			"description": "named luggage restriction rule: CAN_CARRY = weight is ok if you can carry it yourself",
			"type": "string",
			"x-extensible-enum": [
				"CAN_CARRY"
			]
		},
		"LuggageRestriction": {
			"type": "object",
			"properties": {
				"numberOfItems": {
					"description": "number of luggage  items allowed with this restriction",
					"type": "integer",
					"format": "int32"
				},
				"restrictions": {
					"description": "all listed dimensions apply to the luggage items as upper limits",
					"type": "array",
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/LuggageDimension"
					}
				}
			},
			"required": [
				"numberOfItems",
				"restrictions"
			]
		},
		"LuggageDimension": {
			"description": "luggage dimension to be used in luggage restrictions",
			"type": "object",
			"properties": {
				"dimension": {
					"description": "type of the restriction. weight in kg, length in cm, volume in liter. Combined sizes are the sum of the sizes  WIDTH_HEIGHT_LENGTH = sum of width, hight and length in cm (linear equivalent).",
					"type": "string",
					"enum": [
						"WIDTH",
						"HEIGHT",
						"LENGTH",
						"WIDTH_HEIGHT",
						"WIDTH_HEIGHT_LENGTH",
						"WEIGHT",
						"VOLUME"
					]
				},
				"value": {
					"type": "integer",
					"format": "int32"
				}
			},
			"required": [
				"dimension",
				"value"
			]
		},
		"Product": {
			"description": "Basic product definition of products. A products covers multiple regional validities, passenger types or reductions. Fares might be included in Products of a distributor depending on the combination models and then loose their original product definition. ",
			"type": "object",
			"properties": {
				"id": {
					"description": "technical id of this product description",
					"type": "string"
				},
				"code": {
					"description": "stable code for the product accross different versions",
					"type": "string"
				},
				"name": {
					"description": "Name of the product.",
					"$ref": "#/definitions/TextDef"
				},
				"summary": {
					"description": "Summary of the product.",
					"$ref": "#/definitions/TextDef"
				},
				"type": {
      				       "$ref": "#/definitions/ProductType"
      				},
				"description": {
					"description": "Detailed description of the product.",
					"$ref": "#/definitions/TextDef"
				},
				"travelClass": {
					"description": "Travel class in case the product is limited to a specific class.",
					"$ref": "#/definitions/TravelClassDef"
				},
				"isTrainBound": {
					"description": "the product is at least in some parts bound to specific trains",
					"type": "boolean"
				},
				"isReturnProduct": {
					"description": "the product includes a return journey",
					"type": "boolean"
				},
				"serviceConstraintText": {
					"description": "service restrictions of the entire product, not including restrictions based on routes or trips.",
					"$ref": "#/definitions/TextDef"
				},
				"carrierConstraintText": {
					"description": "carrier constraint description of the entire product, not including restrictions based on routes or trips.",
					"$ref": "#/definitions/TextDef"
				},
				"conditions": {
					"description": "generic descriptions of the conditions.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConditionText"
					}
				},
				"isExchangeableAfterValidity": {
					"type": "boolean"
				},
				"isExchangeablebeforeValidity": {
					"type": "boolean"
				},
				"isRefundableBeforeValidity": {
					"type": "boolean"
				},
				"isRefundableAfterValidity": {
					"type": "boolean"
				}
			},
			"required": [
				"id",
				"code",
				"name",
				"summary"
			]
		},
		"ConditionText": {
			"type": "object",
			"properties": {
				"type": {
					"$ref": "#/definitions/ConditionType"
				},
				"description": {
					"$ref": "#/definitions/TextDef"
				}
			},
			"required": [
				"type",
				"description"
			]
		},
		"ConditionType": {
			"type": "string",
			"x-extensible-enum": [
				"SALE",
				"PLACE_CHANGE",
				"FULFILLMENT",
				"EXCHANGE",
				"REFUND",
				"TRAVEL"
			]
		},
		"ProductType": {
		      "description": "General product types harmonized across fare providers. (More to be added, use null for types not listed yet.)",
		      "type": "string",
		      "x-extensible-enum": [
		        "ADMISSION_PASS",
		        "ADMISSION_MULTI_RIDE",
		        "ADMISSION_POINT2POINT",
		        "UPGRADE_PASS",
		        "UPGRADE_MULTI_RIDE",
		        "UPGRADE_POINT2POINT",        
		        "RESERVATION",      
		        "ANCILLARY_SERVICE",   
                        "ANCILLARY_ITEM", 
                        "REDUCTION_CARD"
                        ]
                 }
	}
}
