{
	"info": {
		"_postman_id": "ca77501e-e4f4-48b9-b336-04c550519f49",
		"name": "OTST: OSDM 2.0 Direct Reservation Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21672"
	},
	"item": [
		{
			"name": "Issue OAuth Access Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/api/oauth/token?grant_type=client_credentials&client_id={{client_id}}&client_secret={{client_secret}}",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "client_secret",
							"value": "{{client_secret}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Places",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/api/places",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"places"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Place by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/api/places/urn:uic:stn:{{destination_uic_code}}",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"places",
						"urn:uic:stn:{{destination_uic_code}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Place by Mask",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"placeInput\" : {\r\n        \"name\" : \"{{origin_mask}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base}}/api/places",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"places"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Offer (R 1076, Pardubice hl.n. - Liberec, reservations only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Single Offer was provided\", function () {",
							"    pm.expect(jsonData.offers.length).to.eql(1);",
							"});",
							"",
							"var offer = jsonData.offers[0];",
							"postman.setEnvironmentVariable(\"offer_id\", offer.id);",
							"",
							"pm.test(\"Offer contains Reservation part\", function () {",
							"    pm.expect(offer.reservationOfferParts.length).to.eql(1);",
							"});",
							"",
							"var reservation = offer.reservationOfferParts[0];",
							"postman.setEnvironmentVariable(\"reservation_id\", reservation.id);",
							"",
							"pm.test(\"Passenger Specification was provided\", function () {",
							"    pm.expect(jsonData.anonymousPassengerSpecifications.length).to.eql(1);",
							"});",
							"",
							"var passenger = jsonData.anonymousPassengerSpecifications[0];",
							"",
							"pm.test(\"Passenger Specification was provided\", function () {",
							"    pm.expect(passenger.externalRef).to.eql(postman.getEnvironmentVariable(\"passenger_external_ref\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function pad(number) {\r",
							"    return (number < 10) ? '0' + number : number;\r",
							"}\r",
							"\r",
							"function get_next_weekday (date) {\r",
							"    var tomorrow = new Date(date.setDate(date.getDate() + 1))\r",
							"    return tomorrow.getDay() % 6\r",
							"        ? tomorrow\r",
							"        : get_next_weekday(tomorrow)\r",
							"}\r",
							"\r",
							"var nextWeekday = get_next_weekday(new Date());\r",
							"\r",
							"postman.setEnvironmentVariable(\"next_weekday\", \"\" + nextWeekday.getUTCFullYear() + \"-\" + pad(nextWeekday.getUTCMonth() + 1) + \"-\" + pad(nextWeekday.getUTCDate()));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"objectType\" : \"OfferCollectionRequest\",\n    \"tripSpecifications\": [\n        {\n            \"externalRef\": \"required-external-trip-id-of-distributor\",\n            \"legs\": [\n                {\n                    \"externalRef\": \"required-external-leg-id-of-distributor\",\n                    \"timedLeg\": {\n                        \"start\" : {\n                            \"stopPlaceRef\": {\n                                \"stopPlaceRef\": \"urn:uic:stn:{{origin_uic_code}}\",\n                                \"objectType\" : \"StopPlaceRef\"\n                            },\n                            \"serviceDeparture\": {\n                                \"timetabledTime\": \"{{next_weekday}}T{{departure_time}}\"\n                            }\n                        },\n                        \"end\": {\n                            \"stopPlaceRef\": {\n                                \"stopPlaceRef\": \"urn:uic:stn:{{destination_uic_code}}\",\n                                \"objectType\" : \"StopPlaceRef\"\n                            },\n                            \"serviceArrival\": {\n                                \"timetabledTime\": \"{{next_weekday}}T{{arrival_time}}\"\n                            }\n                        },\n                        \"service\": {\n                            \"vehicleNumbers\": [\n                                \"{{vehicle_number}}\"\n                            ],\n                            \"operatorRefs\": [\n                                \"urn:uic:rics:{{operator_code}}\"\n                            ]\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n    \"passengerSpecifications\": [\n        {\n            \"dateOfBirth\": \"1996-01-01\",\n            \"externalRef\": \"{{passenger_external_ref}}\",\n            \"type\": \"PERSON\",\n            \"cards\": []\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"{{currency}}\",\n        \"requestedOfferParts\": [\n            \"RESERVATION\"\n        ],\n        \"serviceClassTypes\": [\n            \"STANDARD\"\n        ],\n        \"comfortClasses\": [\n            \"SECOND\"\n        ]\n    },\n    \"requestedFulfillmentOptions\": [\n        {\n            \"type\": \"ETICKET\",\n            \"media\": \"PDF_A4\"\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/api/offers",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"offers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Place Maps for Reservation of Offer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"var preSelection = jsonData.reservation.preSelection[0];\r",
							"postman.setEnvironmentVariable(\"preselected_coach\", preSelection.coach);\r",
							"postman.setEnvironmentVariable(\"preselected_place\", preSelection.place);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/api/offers/{{offer_id}}/reservations/{{reservation_id}}/place-map",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"offers",
						"{{offer_id}}",
						"reservations",
						"{{reservation_id}}",
						"place-map"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"booking_id\", jsonData.booking.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"offers\": [\r\n        {\r\n            \"offerId\": \"{{offer_id}}\",\r\n            \"placeSelections\": [\r\n                {\r\n                    \"reservationId\": \"{{reservation_id}}\",\r\n                    \"places\": [\r\n                        {\r\n                            \"coachNumber\": \"{{preselected_coach}}\",\r\n                            \"placeNumber\": \"{{preselected_place}}\",\r\n                            \"passengerRef\": \"{{passenger_external_ref}}\"\r\n                        }\r\n                    ],\r\n                    \"tripLegCoverage\" : {\r\n                        \"tripId\": \"{{trip_id}}\",\r\n                        \"legId\" : \"{{leg_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"passengerRefs\": [\r\n                \"{{passenger_external_ref}}\"\r\n            ]\r\n        }\r\n    ],\r\n    \"passengerSpecifications\": [\r\n        {\r\n            \"externalRef\": \"{{passenger_external_ref}}\",\r\n            \"dateOfBirth\": \"1996-01-01\",\r\n            \"type\": \"PERSON\"\r\n        }\r\n    ],\r\n    \"externalRef\": \"{{booking_external_ref}}\"\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/api/bookings",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"bookings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtaining Fulfillments from Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Fulfillment for one booking obtained\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var fulfillments = jsonData.fulfillments;\r",
							"    pm.expect(fulfillments.length).to.eql(1);\r",
							"\r",
							"    postman.setEnvironmentVariable(\"fulfillment_id\", jsonData.fulfillments[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/api/bookings/{{booking_id}}/fulfillments",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"bookings",
						"{{booking_id}}",
						"fulfillments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Fulfillment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Fulfillment for one booking obtained\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var fulfillment = jsonData.fulfillment;\r",
							"    pm.expect(fulfillment.id).to.eql(postman.getEnvironmentVariable(\"fulfillment_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/api/fulfillments/{{fulfillment_id}}",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"fulfillments",
						"{{fulfillment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Requesting a Refund Offer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"refund_offer_id\", jsonData.refundOffersCollection.refundOffers[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer{{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fulfillmentIds\" : [\r\n        {{fulfillment_id}}\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/api/bookings/{{booking_id}}/refundOffers",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"bookings",
						"{{booking_id}}",
						"refundOffers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirm the Refund Offer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refund Offer was Confirmed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.refundOffer.status).to.eql(\"CONFIRMED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"confirmedRefundOfferId\" : {{refund_offer_id}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/api/bookings/{{booking_id}}/refundOffers/{{refund_offer_id}}",
					"host": [
						"{{base}}"
					],
					"path": [
						"api",
						"bookings",
						"{{booking_id}}",
						"refundOffers",
						"{{refund_offer_id}}"
					]
				}
			},
			"response": []
		}
	]
}