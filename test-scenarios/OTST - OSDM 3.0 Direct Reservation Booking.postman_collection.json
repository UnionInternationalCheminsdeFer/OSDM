{
	"info": {
		"_postman_id": "ca77501e-e4f4-48b9-b336-04c550519f49",
		"name": "OTST: OSDM 3.0 Direct Reservation Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21672"
	},
	"item": [
		{
			"name": "Get Offer (R 1076, Pardubice hl.n. - Liberec, reservations only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Single Offer was provided\", function () {",
							"    pm.expect(jsonData.offers.length).to.eql(1);",
							"});",
							"",
							"var offer = jsonData.offers[0];",
							"",
							"pm.test(\"Offer has ID\", function () {",
							"    pm.expect(offer.offerId).to.be.a('string').and.not.be.empty;",
							"});",
							"",
							"postman.setEnvironmentVariable(\"offer_id\", offer.offerId);",
							"",
							"pm.test(\"Offer contains Reservation part\", function () {",
							"    pm.expect(offer.reservationOfferParts.length).to.eql(1);",
							"});",
							"",
							"var reservation = offer.reservationOfferParts[0];",
							"postman.setEnvironmentVariable(\"reservation_id\", reservation.id);",
							"",
							"pm.test(\"Passenger Specification was provided\", function () {",
							"    pm.expect(jsonData.anonymousPassengerSpecifications.length).to.eql(1);",
							"});",
							"",
							"var passenger = jsonData.anonymousPassengerSpecifications[0];",
							"",
							"pm.test(\"Passenger Specification was provided\", function () {",
							"    pm.expect(passenger.externalRef).to.eql(postman.getEnvironmentVariable(\"passenger_external_ref\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token_type}} {{access_token}}",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"objectType\" : \"OfferCollectionRequest\",\n    \"tripSpecifications\": [\n        {\n            \"externalRef\": \"{{trip_external_ref}}\",\n            \"legs\": [\n                {\n                    \"externalRef\": \"{{leg_external_ref}}\",\n                    \"timedLeg\": {\n                        \"start\" : {\n                            \"stopPlaceRef\": {\n                                \"stopPlaceRef\": \"{{origin_ref}}\",\n                                \"objectType\" : \"StopPlaceRef\"\n                            },\n                            \"serviceDeparture\": {\n                                \"timetabledTime\": \"{{next_weekday}}T{{departure_time}}\"\n                            }\n                        },\n                        \"end\": {\n                            \"stopPlaceRef\": {\n                                \"stopPlaceRef\": \"{{destination_ref}}\",\n                                \"objectType\" : \"StopPlaceRef\"\n                            },\n                            \"serviceArrival\": {\n                                \"timetabledTime\": \"{{next_weekday}}T{{arrival_time}}\"\n                            }\n                        },\n                        \"service\": {\n                            \"vehicleNumbers\": [\n                                \"{{vehicle_number}}\"\n                            ],\n                            \"carriers\": [\n                                {\n                                    \"ref\": \"{{operator_ref}}\"\n                                }\n                            ]\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n    \"anonymousPassengerSpecifications\": [\n        {\n            \"dateOfBirth\": \"1996-01-01\",\n            \"externalRef\": \"{{passenger_external_ref}}\",\n            \"type\": \"PERSON\"\n        }\n    ],\n    \"offerSearchCriteria\": {\n        \"currency\": \"{{currency}}\",\n        \"requestedOfferParts\": [\n            \"RESERVATION\"\n        ],\n        \"serviceClassTypes\": [\n            \"STANDARD\"\n        ],\n        \"comfortClasses\": [\n            \"SECOND\"\n        ]\n    },\n    \"requestedFulfillmentOptions\": [\n        {\n            \"type\": \"ETICKET\",\n            \"media\": \"PDF_A4\"\n        }\n    ],\n    \"embed\": [\n        \"ALL\"\n    ]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/offers",
					"host": [
						"{{base}}"
					],
					"path": [
						"offers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Place Maps for Reservation of Offer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"var preSelection = jsonData.vehicleAvailability.preSelections[0];\r",
							"postman.setEnvironmentVariable(\"preselected_coach\", preSelection.coach);\r",
							"postman.setEnvironmentVariable(\"preselected_place\", preSelection.place);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_type}} {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/availabilities/place-map?contextType=OFFER&contextId={{offer_id}}&resourceType=RESERVATION&resourceId={{reservation_id}}",
					"host": [
						"{{base}}"
					],
					"path": [
						"availabilities",
						"place-map"
					],
					"query": [
						{
							"key": "contextType",
							"value": "OFFER"
						},
						{
							"key": "contextId",
							"value": "{{offer_id}}"
						},
						{
							"key": "resourceType",
							"value": "RESERVATION"
						},
						{
							"key": "resourceId",
							"value": "{{reservation_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"booking_id\", jsonData.booking.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_type}} {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"offers\": [\r\n        {\r\n            \"offerId\": \"{{offer_id}}\",\r\n            \"placeSelections\": [\r\n                {\r\n                    \"reservationId\": \"{{reservation_id}}\",\r\n                    \"places\": [\r\n                        {\r\n                            \"coachNumber\": \"{{preselected_coach}}\",\r\n                            \"placeNumber\": \"{{preselected_place}}\",\r\n                            \"passengerRef\": \"{{passenger_external_ref}}\"\r\n                        }\r\n                    ],\r\n                    \"tripLegCoverage\" : {\r\n                        \"tripId\": \"{{trip_id}}\",\r\n                        \"legId\" : \"{{leg_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"passengerRefs\": [\r\n                \"{{passenger_external_ref}}\"\r\n            ]\r\n        }\r\n    ],\r\n    \"passengerSpecifications\": [\r\n        {\r\n            \"externalRef\": \"{{passenger_external_ref}}\",\r\n            \"dateOfBirth\": \"1996-01-01\",\r\n            \"type\": \"PERSON\"\r\n        }\r\n    ],\r\n    \"externalRef\": \"{{booking_external_ref}}\"\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/bookings",
					"host": [
						"{{base}}"
					],
					"path": [
						"bookings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtaining Fulfillments from Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Fulfillment for one booking obtained\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var fulfillments = jsonData.fulfillments;\r",
							"    pm.expect(fulfillments.length).to.eql(1);\r",
							"\r",
							"    postman.setEnvironmentVariable(\"fulfillment_id\", jsonData.fulfillments[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_type}} {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/bookings/{{booking_id}}/fulfillments",
					"host": [
						"{{base}}"
					],
					"path": [
						"bookings",
						"{{booking_id}}",
						"fulfillments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Fulfillment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Fulfillment for one booking obtained\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var fulfillment = jsonData.fulfillment;\r",
							"    pm.expect(fulfillment.id).to.eql(postman.getEnvironmentVariable(\"fulfillment_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_type}} {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base}}/fulfillments/{{fulfillment_id}}",
					"host": [
						"{{base}}"
					],
					"path": [
						"fulfillments",
						"{{fulfillment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Requesting a Refund Offer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"refund_offer_id\", jsonData.refundOffers[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_type}} {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fulfillmentIds\" : [\r\n        \"{{fulfillment_id}}\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/bookings/{{booking_id}}/refund-offers",
					"host": [
						"{{base}}"
					],
					"path": [
						"bookings",
						"{{booking_id}}",
						"refund-offers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirm the Refund Offer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refund Offer was Confirmed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.refundOffer.status).to.eql(\"CONFIRMED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_type}} {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "{{requestor}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\" : \"CONFIRMED\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/bookings/{{booking_id}}/refund-offers/{{refund_offer_id}}",
					"host": [
						"{{base}}"
					],
					"path": [
						"bookings",
						"{{booking_id}}",
						"refund-offers",
						"{{refund_offer_id}}"
					]
				}
			},
			"response": []
		}
	]
}